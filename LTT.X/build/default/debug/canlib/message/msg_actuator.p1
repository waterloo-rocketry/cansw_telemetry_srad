Version 4.0 HI-TECH Software Intermediate Code
"9 canlib/message/msg_actuator.c
[; ;canlib/message/msg_actuator.c: 9: _Bool build_actuator_cmd_msg(
[c E51 0 1 2 3 .. ]
[n E51 . PRIO_HIGHEST PRIO_HIGH PRIO_MEDIUM PRIO_LOW  ]
[c E148 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 .. ]
[n E148 . ACTUATOR_OX_INJECTOR_VALVE ACTUATOR_FUEL_INJECTOR_VALVE ACTUATOR_CHARGE_ENABLE ACTUATOR_5V_RAIL_ROCKET ACTUATOR_5V_RAIL_PAYLOAD ACTUATOR_TELEMETRY ACTUATOR_CAMERA_INJ_A ACTUATOR_CAMERA_INJ_B ACTUATOR_CAMERA_VENT_A ACTUATOR_CAMERA_VENT_B ACTUATOR_CAMERA_VENT_C ACTUATOR_CAMERA_VENT_D ACTUATOR_CAMERA_RECOVERY ACTUATOR_PROC_ESTIMATOR_INIT ACTUATOR_CANARD_ENABLE ACTUATOR_CANARD_ANGLE  ]
[c E166 0 1 2 3 .. ]
[n E166 . ACTUATOR_ON ACTUATOR_OFF ACTUATOR_UNK ACTUATOR_ILLEGAL  ]
"38 canlib\can.h
[; ;canlib\can.h: 38: typedef struct {
[s S2 `ul 1 `uc 1 `uc -> 8 `i ]
[n S2 . sid data_len data ]
"17 canlib/message/msg_actuator.c
[; ;canlib/message/msg_actuator.c: 17:     output->sid = (((uint32_t)prio << 27) | ((uint32_t)MSG_ACTUATOR_CMD << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GENERIC);
[c E57 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 .. ]
[n E57 . MSG_GENERAL_BOARD_STATUS MSG_RESET_CMD MSG_DEBUG_RAW MSG_CONFIG_SET MSG_CONFIG_STATUS MSG_ACTUATOR_CMD MSG_ACTUATOR_ANALOG_CMD MSG_ACTUATOR_STATUS MSG_ALT_ARM_CMD MSG_ALT_ARM_STATUS MSG_SENSOR_TEMP MSG_SENSOR_ALTITUDE MSG_SENSOR_IMU_X MSG_SENSOR_IMU_Y MSG_SENSOR_IMU_Z MSG_SENSOR_MAG_X MSG_SENSOR_MAG_Y MSG_SENSOR_MAG_Z MSG_SENSOR_ANALOG MSG_GPS_TIMESTAMP MSG_GPS_LATITUDE MSG_GPS_LONGITUDE MSG_GPS_ALTITUDE MSG_GPS_INFO MSG_STATE_EST_DATA MSG_LEDS_ON MSG_LEDS_OFF  ]
[c E86 0 1 2 3 4 5 6 7 8 9 10 11 64 65 128 129 130 131 132 133 134 192 .. ]
[n E86 . BOARD_TYPE_ID_ANY BOARD_TYPE_ID_INJ_SENSOR BOARD_TYPE_ID_CANARD_MOTOR BOARD_TYPE_ID_CAMERA BOARD_TYPE_ID_POWER BOARD_TYPE_ID_LOGGER BOARD_TYPE_ID_PROCESSOR BOARD_TYPE_ID_TELEMETRY BOARD_TYPE_ID_GPS BOARD_TYPE_ID_SRAD_GNSS BOARD_TYPE_ID_ALTIMETER BOARD_TYPE_ID_ARMING BOARD_TYPE_ID_PAY_SENSOR BOARD_TYPE_ID_PAY_MOTOR BOARD_TYPE_ID_RLCS_GLS BOARD_TYPE_ID_RLCS_RELAY BOARD_TYPE_ID_RLCS_HEATING BOARD_TYPE_ID_DAQ BOARD_TYPE_ID_CHARGING BOARD_TYPE_ID_THERMOCOUPLE BOARD_TYPE_ID_USB BOARD_TYPE_ID_FYDP25_TVCA  ]
[c E110 0 1 .. ]
[n E110 . BOARD_INST_ID_ANY BOARD_INST_ID_GENERIC  ]
"26 canlib/message/msg_common.h
[; ;canlib/message/msg_common.h: 26: void write_timestamp_2bytes(uint16_t timestamp, can_msg_t *output);
[v _write_timestamp_2bytes `(v ~T0 @X0 0 ef2`us`*S2 ]
"28
[; ;canlib/message/msg_common.h: 28: uint16_t get_message_type(const can_msg_t *msg);
[v _get_message_type `(us ~T0 @X0 0 ef1`*CS2 ]
"9 canlib/message/msg_actuator.c
[; ;canlib/message/msg_actuator.c: 9: _Bool build_actuator_cmd_msg(
[v _build_actuator_cmd_msg `(a ~T0 @X0 1 ef5`E51`us`E148`E166`*S2 ]
"12
[; ;canlib/message/msg_actuator.c: 12: ) {
{
[e :U _build_actuator_cmd_msg ]
"10
[; ;canlib/message/msg_actuator.c: 10:     can_msg_prio_t prio, uint16_t timestamp, can_actuator_id_t actuator_id,
[v _prio `E51 ~T0 @X0 1 r1 ]
[v _timestamp `us ~T0 @X0 1 r2 ]
[v _actuator_id `E148 ~T0 @X0 1 r3 ]
"11
[; ;canlib/message/msg_actuator.c: 11:     can_actuator_state_t actuator_cmd, can_msg_t *output
[v _actuator_cmd `E166 ~T0 @X0 1 r4 ]
[v _output `*S2 ~T0 @X0 1 r5 ]
"12
[; ;canlib/message/msg_actuator.c: 12: ) {
[f ]
"13
[; ;canlib/message/msg_actuator.c: 13:     if (!output) {
[e $ ! ! != _output -> -> 0 `i `*S2 4  ]
{
"14
[; ;canlib/message/msg_actuator.c: 14:         return 0;
[e ) -> -> 0 `i `a ]
[e $UE 3  ]
"15
[; ;canlib/message/msg_actuator.c: 15:     }
}
[e :U 4 ]
"17
[; ;canlib/message/msg_actuator.c: 17:     output->sid = (((uint32_t)prio << 27) | ((uint32_t)MSG_ACTUATOR_CMD << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GENERIC);
[e = . *U _output 0 | | | << -> _prio `ul -> 27 `i << -> . `E57 5 `ul -> 18 `i << -> . `E86 7 `ul -> 8 `i -> -> . `E110 1 `l `ul ]
"18
[; ;canlib/message/msg_actuator.c: 18:     write_timestamp_2bytes(timestamp, output);
[e ( _write_timestamp_2bytes (2 , _timestamp _output ]
"20
[; ;canlib/message/msg_actuator.c: 20:     output->data[2] = (uint8_t)actuator_id;
[e = *U + &U . *U _output 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_id `uc ]
"21
[; ;canlib/message/msg_actuator.c: 21:     output->data[3] = (uint8_t)actuator_cmd;
[e = *U + &U . *U _output 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_cmd `uc ]
"22
[; ;canlib/message/msg_actuator.c: 22:     output->data_len = 4;
[e = . *U _output 1 -> -> 4 `i `uc ]
"24
[; ;canlib/message/msg_actuator.c: 24:     return 1;
[e ) -> -> 1 `i `a ]
[e $UE 3  ]
"25
[; ;canlib/message/msg_actuator.c: 25: }
[e :UE 3 ]
}
"27
[; ;canlib/message/msg_actuator.c: 27: _Bool build_actuator_analog_cmd_msg(
[v _build_actuator_analog_cmd_msg `(a ~T0 @X0 1 ef5`E51`ul`E166`us`*S2 ]
"30
[; ;canlib/message/msg_actuator.c: 30: ) {
{
[e :U _build_actuator_analog_cmd_msg ]
"28
[; ;canlib/message/msg_actuator.c: 28:     can_msg_prio_t prio, uint32_t timestamp, can_actuator_state_t actuator_id,
[v _prio `E51 ~T0 @X0 1 r1 ]
[v _timestamp `ul ~T0 @X0 1 r2 ]
[v _actuator_id `E166 ~T0 @X0 1 r3 ]
"29
[; ;canlib/message/msg_actuator.c: 29:     uint16_t actuator_cmd, can_msg_t *output
[v _actuator_cmd `us ~T0 @X0 1 r4 ]
[v _output `*S2 ~T0 @X0 1 r5 ]
"30
[; ;canlib/message/msg_actuator.c: 30: ) {
[f ]
"31
[; ;canlib/message/msg_actuator.c: 31:     if (!output) {
[e $ ! ! != _output -> -> 0 `i `*S2 6  ]
{
"32
[; ;canlib/message/msg_actuator.c: 32:         return 0;
[e ) -> -> 0 `i `a ]
[e $UE 5  ]
"33
[; ;canlib/message/msg_actuator.c: 33:     }
}
[e :U 6 ]
"35
[; ;canlib/message/msg_actuator.c: 35:     output->sid = (((uint32_t)prio << 27) | ((uint32_t)MSG_ACTUATOR_ANALOG_CMD << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GENERIC);
[e = . *U _output 0 | | | << -> _prio `ul -> 27 `i << -> . `E57 6 `ul -> 18 `i << -> . `E86 7 `ul -> 8 `i -> -> . `E110 1 `l `ul ]
"36
[; ;canlib/message/msg_actuator.c: 36:     write_timestamp_2bytes(timestamp, output);
[e ( _write_timestamp_2bytes (2 , -> _timestamp `us _output ]
"38
[; ;canlib/message/msg_actuator.c: 38:     output->data[2] = actuator_id;
[e = *U + &U . *U _output 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_id `uc ]
"39
[; ;canlib/message/msg_actuator.c: 39:     output->data[3] = (actuator_cmd >> 8) & 0xff;
[e = *U + &U . *U _output 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> & >> -> _actuator_cmd `ui -> 8 `i -> -> 255 `i `ui `uc ]
"40
[; ;canlib/message/msg_actuator.c: 40:     output->data[4] = actuator_cmd & 0xff;
[e = *U + &U . *U _output 2 * -> -> -> 4 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> & -> _actuator_cmd `ui -> -> 255 `i `ui `uc ]
"41
[; ;canlib/message/msg_actuator.c: 41:     output->data_len = 5;
[e = . *U _output 1 -> -> 5 `i `uc ]
"43
[; ;canlib/message/msg_actuator.c: 43:     return 1;
[e ) -> -> 1 `i `a ]
[e $UE 5  ]
"44
[; ;canlib/message/msg_actuator.c: 44: }
[e :UE 5 ]
}
"46
[; ;canlib/message/msg_actuator.c: 46: _Bool build_actuator_status_msg(
[v _build_actuator_status_msg `(a ~T0 @X0 1 ef6`E51`us`E148`E166`E148`*S2 ]
"50
[; ;canlib/message/msg_actuator.c: 50: ) {
{
[e :U _build_actuator_status_msg ]
"47
[; ;canlib/message/msg_actuator.c: 47:     can_msg_prio_t prio, uint16_t timestamp, can_actuator_id_t actuator_id,
[v _prio `E51 ~T0 @X0 1 r1 ]
[v _timestamp `us ~T0 @X0 1 r2 ]
[v _actuator_id `E148 ~T0 @X0 1 r3 ]
"48
[; ;canlib/message/msg_actuator.c: 48:     can_actuator_state_t actuator_curr_state, can_actuator_id_t actuator_cmd_state,
[v _actuator_curr_state `E166 ~T0 @X0 1 r4 ]
[v _actuator_cmd_state `E148 ~T0 @X0 1 r5 ]
"49
[; ;canlib/message/msg_actuator.c: 49:     can_msg_t *output
[v _output `*S2 ~T0 @X0 1 r6 ]
"50
[; ;canlib/message/msg_actuator.c: 50: ) {
[f ]
"51
[; ;canlib/message/msg_actuator.c: 51:     if (!output) {
[e $ ! ! != _output -> -> 0 `i `*S2 8  ]
{
"52
[; ;canlib/message/msg_actuator.c: 52:         return 0;
[e ) -> -> 0 `i `a ]
[e $UE 7  ]
"53
[; ;canlib/message/msg_actuator.c: 53:     }
}
[e :U 8 ]
"55
[; ;canlib/message/msg_actuator.c: 55:     output->sid = (((uint32_t)prio << 27) | ((uint32_t)MSG_ACTUATOR_STATUS << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GENERIC);
[e = . *U _output 0 | | | << -> _prio `ul -> 27 `i << -> . `E57 7 `ul -> 18 `i << -> . `E86 7 `ul -> 8 `i -> -> . `E110 1 `l `ul ]
"56
[; ;canlib/message/msg_actuator.c: 56:     write_timestamp_2bytes(timestamp, output);
[e ( _write_timestamp_2bytes (2 , _timestamp _output ]
"58
[; ;canlib/message/msg_actuator.c: 58:     output->data[2] = (uint8_t)actuator_id;
[e = *U + &U . *U _output 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_id `uc ]
"59
[; ;canlib/message/msg_actuator.c: 59:     output->data[3] = (uint8_t)actuator_curr_state;
[e = *U + &U . *U _output 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_curr_state `uc ]
"60
[; ;canlib/message/msg_actuator.c: 60:     output->data[4] = (uint8_t)actuator_cmd_state;
[e = *U + &U . *U _output 2 * -> -> -> 4 `i `ui `ux -> -> # *U &U . *U _output 2 `ui `ux -> _actuator_cmd_state `uc ]
"61
[; ;canlib/message/msg_actuator.c: 61:     output->data_len = 5;
[e = . *U _output 1 -> -> 5 `i `uc ]
"63
[; ;canlib/message/msg_actuator.c: 63:     return 1;
[e ) -> -> 1 `i `a ]
[e $UE 7  ]
"64
[; ;canlib/message/msg_actuator.c: 64: }
[e :UE 7 ]
}
"66
[; ;canlib/message/msg_actuator.c: 66: int get_actuator_id(const can_msg_t *msg) {
[v _get_actuator_id `(i ~T0 @X0 1 ef1`*CS2 ]
{
[e :U _get_actuator_id ]
[v _msg `*CS2 ~T0 @X0 1 r1 ]
[f ]
"67
[; ;canlib/message/msg_actuator.c: 67:     if (!msg) {
[e $ ! ! != _msg -> -> 0 `i `*CS2 10  ]
{
"68
[; ;canlib/message/msg_actuator.c: 68:         return -1;
[e ) -U -> 1 `i ]
[e $UE 9  ]
"69
[; ;canlib/message/msg_actuator.c: 69:     }
}
[e :U 10 ]
"71
[; ;canlib/message/msg_actuator.c: 71:     uint16_t msg_type = get_message_type(msg);
[v _msg_type `us ~T0 @X0 1 a ]
[e = _msg_type ( _get_message_type (1 _msg ]
"72
[; ;canlib/message/msg_actuator.c: 72:     switch (msg_type) {
[e $U 12  ]
{
"73
[; ;canlib/message/msg_actuator.c: 73:         case MSG_ACTUATOR_CMD:
[e :U 13 ]
"74
[; ;canlib/message/msg_actuator.c: 74:         case MSG_ACTUATOR_ANALOG_CMD:
[e :U 14 ]
"75
[; ;canlib/message/msg_actuator.c: 75:         case MSG_ACTUATOR_STATUS:
[e :U 15 ]
"77
[; ;canlib/message/msg_actuator.c: 77:             return msg->data[2];
[e ) -> *U + &U . *U _msg 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i ]
[e $UE 9  ]
"79
[; ;canlib/message/msg_actuator.c: 79:         default:
[e :U 16 ]
"81
[; ;canlib/message/msg_actuator.c: 81:             return -1;
[e ) -U -> 1 `i ]
[e $UE 9  ]
"82
[; ;canlib/message/msg_actuator.c: 82:     }
}
[e $U 11  ]
[e :U 12 ]
[e [\ -> _msg_type `ui , $ -> . `E57 5 `ui 13
 , $ -> . `E57 6 `ui 14
 , $ -> . `E57 7 `ui 15
 16 ]
[e :U 11 ]
"83
[; ;canlib/message/msg_actuator.c: 83: }
[e :UE 9 ]
}
"85
[; ;canlib/message/msg_actuator.c: 85: int get_curr_actuator_state(const can_msg_t *msg) {
[v _get_curr_actuator_state `(i ~T0 @X0 1 ef1`*CS2 ]
{
[e :U _get_curr_actuator_state ]
[v _msg `*CS2 ~T0 @X0 1 r1 ]
[f ]
"86
[; ;canlib/message/msg_actuator.c: 86:     if (!msg) {
[e $ ! ! != _msg -> -> 0 `i `*CS2 18  ]
{
"87
[; ;canlib/message/msg_actuator.c: 87:         return -1;
[e ) -U -> 1 `i ]
[e $UE 17  ]
"88
[; ;canlib/message/msg_actuator.c: 88:     }
}
[e :U 18 ]
"90
[; ;canlib/message/msg_actuator.c: 90:     uint16_t msg_type = get_message_type(msg);
[v _msg_type `us ~T0 @X0 1 a ]
[e = _msg_type ( _get_message_type (1 _msg ]
"91
[; ;canlib/message/msg_actuator.c: 91:     if (msg_type == MSG_ACTUATOR_STATUS) {
[e $ ! == -> _msg_type `ui -> . `E57 7 `ui 19  ]
{
"92
[; ;canlib/message/msg_actuator.c: 92:         return msg->data[3];
[e ) -> *U + &U . *U _msg 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i ]
[e $UE 17  ]
"93
[; ;canlib/message/msg_actuator.c: 93:     } else {
}
[e $U 20  ]
[e :U 19 ]
{
"95
[; ;canlib/message/msg_actuator.c: 95:         return -1;
[e ) -U -> 1 `i ]
[e $UE 17  ]
"96
[; ;canlib/message/msg_actuator.c: 96:     }
}
[e :U 20 ]
"97
[; ;canlib/message/msg_actuator.c: 97: }
[e :UE 17 ]
}
"99
[; ;canlib/message/msg_actuator.c: 99: int get_cmd_actuator_state(const can_msg_t *msg) {
[v _get_cmd_actuator_state `(i ~T0 @X0 1 ef1`*CS2 ]
{
[e :U _get_cmd_actuator_state ]
[v _msg `*CS2 ~T0 @X0 1 r1 ]
[f ]
"100
[; ;canlib/message/msg_actuator.c: 100:     if (!msg) {
[e $ ! ! != _msg -> -> 0 `i `*CS2 22  ]
{
"101
[; ;canlib/message/msg_actuator.c: 101:         return -1;
[e ) -U -> 1 `i ]
[e $UE 21  ]
"102
[; ;canlib/message/msg_actuator.c: 102:     }
}
[e :U 22 ]
"104
[; ;canlib/message/msg_actuator.c: 104:     uint16_t msg_type = get_message_type(msg);
[v _msg_type `us ~T0 @X0 1 a ]
[e = _msg_type ( _get_message_type (1 _msg ]
"105
[; ;canlib/message/msg_actuator.c: 105:     switch (msg_type) {
[e $U 24  ]
{
"106
[; ;canlib/message/msg_actuator.c: 106:         case MSG_ACTUATOR_STATUS:
[e :U 25 ]
"107
[; ;canlib/message/msg_actuator.c: 107:             return msg->data[4];
[e ) -> *U + &U . *U _msg 2 * -> -> -> 4 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i ]
[e $UE 21  ]
"109
[; ;canlib/message/msg_actuator.c: 109:         case MSG_ACTUATOR_CMD:
[e :U 26 ]
"110
[; ;canlib/message/msg_actuator.c: 110:             return msg->data[3];
[e ) -> *U + &U . *U _msg 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i ]
[e $UE 21  ]
"112
[; ;canlib/message/msg_actuator.c: 112:         default:
[e :U 27 ]
"114
[; ;canlib/message/msg_actuator.c: 114:             return -1;
[e ) -U -> 1 `i ]
[e $UE 21  ]
"115
[; ;canlib/message/msg_actuator.c: 115:     }
}
[e $U 23  ]
[e :U 24 ]
[e [\ -> _msg_type `ui , $ -> . `E57 7 `ui 25
 , $ -> . `E57 5 `ui 26
 27 ]
[e :U 23 ]
"116
[; ;canlib/message/msg_actuator.c: 116: }
[e :UE 21 ]
}
"118
[; ;canlib/message/msg_actuator.c: 118: uint16_t get_cmd_actuator_state_analog(const can_msg_t *msg) {
[v _get_cmd_actuator_state_analog `(us ~T0 @X0 1 ef1`*CS2 ]
{
[e :U _get_cmd_actuator_state_analog ]
[v _msg `*CS2 ~T0 @X0 1 r1 ]
[f ]
"119
[; ;canlib/message/msg_actuator.c: 119:     if (!msg) {
[e $ ! ! != _msg -> -> 0 `i `*CS2 29  ]
{
"120
[; ;canlib/message/msg_actuator.c: 120:         return 0;
[e ) -> -> 0 `i `us ]
[e $UE 28  ]
"121
[; ;canlib/message/msg_actuator.c: 121:     }
}
[e :U 29 ]
"123
[; ;canlib/message/msg_actuator.c: 123:     uint16_t msg_type = get_message_type(msg);
[v _msg_type `us ~T0 @X0 1 a ]
[e = _msg_type ( _get_message_type (1 _msg ]
"124
[; ;canlib/message/msg_actuator.c: 124:     switch (msg_type) {
[e $U 31  ]
{
"125
[; ;canlib/message/msg_actuator.c: 125:         case MSG_ACTUATOR_ANALOG_CMD:
[e :U 32 ]
"126
[; ;canlib/message/msg_actuator.c: 126:             return (msg->data[3] << 8) | msg->data[4];
[e ) -> | << -> *U + &U . *U _msg 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i -> 8 `i -> *U + &U . *U _msg 2 * -> -> -> 4 `i `ui `ux -> -> # *U &U . *U _msg 2 `ui `ux `i `us ]
[e $UE 28  ]
"128
[; ;canlib/message/msg_actuator.c: 128:         default:
[e :U 33 ]
"130
[; ;canlib/message/msg_actuator.c: 130:             return 0;
[e ) -> -> 0 `i `us ]
[e $UE 28  ]
"131
[; ;canlib/message/msg_actuator.c: 131:     }
}
[e $U 30  ]
[e :U 31 ]
[e [\ -> _msg_type `ui , $ -> . `E57 6 `ui 32
 33 ]
[e :U 30 ]
"132
[; ;canlib/message/msg_actuator.c: 132: }
[e :UE 28 ]
}
