

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Mar 24 10:53:50 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 12/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F26K83 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68 ;; Function _can_msg_handler is unused but had its address taken
    69   000000                     
    70 ;; Function _can_send_rdy is unused but had its address taken
    71   000000                     _OSCCON2	set	14810
    72   000000                     _OSCCON3bits	set	14811
    73   000000                     _T0CON1bits	set	16313
    74   000000                     _COMSTATbits	set	16272
    75   000000                     _ECANCONbits	set	16273
    76   000000                     _LATAbits	set	16314
    77   000000                     _TRISCbits	set	16324
    78   000000                     _LATA5	set	130517
    79   000000                     _LATA4	set	130516
    80   000000                     _LATA3	set	130515
    81   000000                     _TRISC0	set	130592
    82   000000                     _BRGCON1bits	set	14083
    83   000000                     _CIOCONbits	set	14080
    84   000000                     _RC1PPS	set	14865
    85   000000                     _TRISC1	set	130593
    86   000000                     _PORTCbits	set	16332
    87   000000                     _ANSELAbits	set	14912
    88   000000                     _ANSELC0	set	119552
    89   000000                     _CANRXPPS	set	15085
    90   000000                     _SPI1RXB	set	15632
    91   000000                     _SPI1CON0bits	set	15636
    92   000000                     _ADRESL	set	16111
    93   000000                     _ADRESH	set	16112
    94   000000                     _ADPCH	set	16113
    95   000000                     _ADCON0bits	set	16120
    96   000000                     _TRISAbits	set	16322
    97   000000                     _LATA2	set	130514
    98   000000                     _RXB0CONbits	set	16256
    99   000000                     _CANSTATbits	set	16270
   100   000000                     _CANCONbits	set	16271
   101   000000                     _SPI1STATUSbits	set	15639
   102   000000                     _SPI1BAUD	set	15641
   103   000000                     _SPI1CON2bits	set	15638
   104   000000                     _SPI1CON1bits	set	15637
   105   000000                     _SPI1TXB	set	15633
   106   000000                     _INTCON0bits	set	16338
   107   000000                     _T0CON0bits	set	16312
   108   000000                     _RXM0SIDH	set	14264
   109   000000                     _BRGCON3bits	set	14085
   110   000000                     _BRGCON2bits	set	14084
   111   000000                     _RXM1SIDH	set	14268
   112   000000                     _RXM0SIDL	set	14265
   113   000000                     _TXB0CONbits	set	14304
   114   000000                     _PIE5bits	set	14741
   115   000000                     _RXM1SIDL	set	14269
   116   000000                     _RXB0DLCbits	set	16261
   117   000000                     _RXB0EIDL	set	16260
   118   000000                     _RXB0EIDH	set	16259
   119   000000                     _RXB0SIDL	set	16258
   120   000000                     _RXB0SIDH	set	16257
   121   000000                     _RXB0D0	set	16262
   122   000000                     _PIR5bits	set	14757
   123   000000                     _RXB1CONbits	set	14320
   124   000000                     _RXB1SIDH	set	14321
   125   000000                     _TXB0DLCbits	set	14309
   126   000000                     _TXB0EIDL	set	14308
   127   000000                     _TXB0EIDH	set	14307
   128   000000                     _TXB0SIDL	set	14306
   129   000000                     _TXB0SIDH	set	14305
   130   000000                     _TXB0D0	set	14310
   131   000000                     _OSCCON1	set	14809
   132   000000                     _PIE3bits	set	14739
   133   000000                     _RXB1DLCbits	set	14325
   134   000000                     _RXB1EIDL	set	14324
   135   000000                     _RXB1EIDH	set	14323
   136   000000                     _RXB1SIDL	set	14322
   137   000000                     _RXB1D0	set	14326
   138                           
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142   001860                     __pcinit:
   143                           	callstack 0
   144   001860                     start_initialization:
   145                           	callstack 0
   146   001860                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Clear objects allocated to BANK1 (200 bytes)
   150   001860  EE00  F100         	lfsr	0,__pbssBANK1
   151   001864  0EC8               	movlw	200
   152   001866                     clear_0:
   153   001866  6AEE               	clrf	postinc0,c
   154   001868  06E8               	decf	wreg,f,c
   155   00186A  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (32 bytes)
   158   00186C  EE00  F030         	lfsr	0,__pbssCOMRAM
   159   001870  0E20               	movlw	32
   160   001872                     clear_1:
   161   001872  6AEE               	clrf	postinc0,c
   162   001874  06E8               	decf	wreg,f,c
   163   001876  E1FD               	bnz	clear_1
   164   001878                     end_of_initialization:
   165                           	callstack 0
   166   001878                     __end_of__initialization:
   167                           	callstack 0
   168   001878  0100               	movlb	0
   169   00187A  EF9F  F00A         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172   000030                     __pbssCOMRAM:
   173                           	callstack 0
   174   000030                     _millis_counter:
   175                           	callstack 0
   176   000030                     	ds	4
   177   000034                     _ctx:
   178                           	callstack 0
   179   000034                     	ds	4
   180   000038                     _can_rcv_cb:
   181                           	callstack 0
   182   000038                     	ds	2
   183   00003A                     timer0_handle_interrupt@internal_count:
   184                           	callstack 0
   185   00003A                     	ds	1
   186   00003B                     _overflow_flag:
   187                           	callstack 0
   188   00003B                     	ds	1
   189   00003C                     _buf@can_tx_buffer$F1528:
   190                           	callstack 0
   191   00003C                     	ds	10
   192   000046                     _buf:
   193                           	callstack 0
   194   000046                     	ds	10
   195                           
   196                           	psect	bssBANK1
   197   000100                     __pbssBANK1:
   198                           	callstack 0
   199   000100                     _tx_pool:
   200                           	callstack 0
   201   000100                     	ds	200
   202                           
   203                           	psect	cstackCOMRAM
   204   000001                     __pcstackCOMRAM:
   205                           	callstack 0
   206   000001                     ?_read_ADC:
   207                           	callstack 0
   208   000001                     ?___lwdiv:
   209                           	callstack 0
   210   000001                     toggle_LED_Green@LED_On:
   211                           	callstack 0
   212   000001                     toggle_LED_Blue@LED_On:
   213                           	callstack 0
   214   000001                     toggle_LED_Red@LED_On:
   215                           	callstack 0
   216   000001                     can_init@timing:
   217                           	callstack 0
   218   000001                     write_timestamp_2bytes@timestamp:
   219                           	callstack 0
   220   000001                     Osc_Init@i:
   221                           	callstack 0
   222   000001                     ___lwdiv@dividend:
   223                           	callstack 0
   224   000001                     memcpy@d1:
   225                           	callstack 0
   226   000001                     can_generate_timing_params@can_frequency:
   227                           	callstack 0
   228                           
   229                           ; 4 bytes @ 0x0
   230   000001                     	ds	1
   231   000002                     can_init@receive_callback:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x1
   235   000002                     	ds	1
   236   000003                     ??_read_ADC:
   237   000003                     write_timestamp_2bytes@output:
   238                           	callstack 0
   239   000003                     ___lwdiv@divisor:
   240                           	callstack 0
   241   000003                     memcpy@s1:
   242                           	callstack 0
   243                           
   244                           ; 3 bytes @ 0x2
   245   000003                     	ds	1
   246   000004                     ??_can_init:
   247   000004                     
   248                           ; 1 bytes @ 0x3
   249   000004                     	ds	1
   250   000005                     can_generate_timing_params@timing:
   251                           	callstack 0
   252   000005                     read_ADC@result:
   253                           	callstack 0
   254   000005                     ___lwdiv@quotient:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258   000005                     	ds	1
   259   000006                     ??_can_generate_timing_params:
   260   000006                     memcpy@n:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x5
   264   000006                     	ds	1
   265   000007                     ___lwdiv@counter:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x6
   269   000007                     	ds	1
   270   000008                     srb_init@ctx:
   271                           	callstack 0
   272   000008                     memcpy@s:
   273                           	callstack 0
   274                           
   275                           ; 3 bytes @ 0x7
   276   000008                     	ds	1
   277   000009                     srb_init@pool:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x8
   281   000009                     	ds	2
   282   00000B                     srb_init@pool_size:
   283                           	callstack 0
   284   00000B                     memcpy@d:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xA
   288   00000B                     	ds	2
   289   00000D                     memcpy@tmp:
   290                           	callstack 0
   291   00000D                     srb_init@element_size:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xC
   295   00000D                     	ds	1
   296   00000E                     can_send@message:
   297                           	callstack 0
   298   00000E                     build_debug_raw_msg@timestamp:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xD
   302   00000E                     	ds	1
   303   00000F                     ??_can_send:
   304   00000F                     txb_init@pool:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xE
   308   00000F                     	ds	1
   309   000010                     build_debug_raw_msg@data:
   310                           	callstack 0
   311                           
   312                           ; 3 bytes @ 0xF
   313   000010                     	ds	1
   314   000011                     txb_init@pool_size:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x10
   318   000011                     	ds	2
   319   000013                     build_debug_raw_msg@output:
   320                           	callstack 0
   321   000013                     txb_init@can_send_fp:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x12
   325   000013                     	ds	1
   326   000014                     ??_build_debug_raw_msg:
   327                           
   328                           ; 1 bytes @ 0x13
   329   000014                     	ds	1
   330   000015                     txb_init@can_tx_ready:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x14
   334   000015                     	ds	2
   335   000017                     CAN_Init@can_setup:
   336                           	callstack 0
   337                           
   338                           ; 7 bytes @ 0x16
   339   000017                     	ds	5
   340   00001C                     build_debug_raw_msg@prio:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x1B
   344   00001C                     	ds	2
   345   00001E                     ??_main:
   346                           
   347                           ; 1 bytes @ 0x1D
   348   00001E                     	ds	3
   349   000021                     main@curVal:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x20
   353   000021                     	ds	2
   354   000023                     main@bob:
   355                           	callstack 0
   356                           
   357                           ; 13 bytes @ 0x22
   358   000023                     	ds	13
   359                           
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 74 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  bob            13   34[COMRAM] struct .
   370 ;;  time            2    0        unsigned short 
   371 ;;  curVal          2   32[COMRAM] unsigned short 
   372 ;;  bobPrio         1    0        enum E22794
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;Total ram usage:       18 bytes
   387 ;; Hardware stack levels required when called: 5
   388 ;; This function calls:
   389 ;;		_Board_Init
   390 ;;		_build_debug_raw_msg
   391 ;;		_can_send
   392 ;;		_read_ADC
   393 ;;		_toggle_LED_Blue
   394 ;;		_toggle_LED_Green
   395 ;;		_toggle_LED_Red
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text0
   402   00153E                     __ptext0:
   403                           	callstack 0
   404   00153E                     _main:
   405                           	callstack 26
   406   00153E                     
   407                           ;main.c: 75:         curVal = read_ADC();
   408   00153E  EC4D  F00C         	call	_Board_Init	;wreg free
   409   001542                     l64:
   410   001542  0004               	clrwdt		;# 
   411   001544                     
   412                           ;main.c: 80: 
   413   001544  0E01               	movlw	1
   414   001546  EC5D  F00C         	call	_toggle_LED_Green
   415   00154A                     
   416                           ;main.c: 81:         build_debug_raw_msg(bobPrio, time, curVal, &bob);
   417   00154A  0E01               	movlw	1
   418   00154C  EC64  F00C         	call	_toggle_LED_Blue
   419   001550                     
   420                           ;main.c: 82:         can_send(&bob);
   421   001550  0E01               	movlw	1
   422   001552  EC56  F00C         	call	_toggle_LED_Red
   423   001556                     
   424                           ;main.c: 84: }
   425   001556  0E10               	movlw	16
   426   001558  6E1F               	movwf	(??_main+1)^0,c
   427   00155A  0E39               	movlw	57
   428   00155C  6E1E               	movwf	??_main^0,c
   429   00155E  0E0E               	movlw	14
   430   001560                     u3007:
   431   001560  2EE8               	decfsz	wreg,f,c
   432   001562  D7FE               	bra	u3007
   433   001564  2E1E               	decfsz	??_main^0,f,c
   434   001566  D7FC               	bra	u3007
   435   001568  2E1F               	decfsz	(??_main+1)^0,f,c
   436   00156A  D7FA               	bra	u3007
   437   00156C  0E00               	movlw	0
   438   00156E  EC5D  F00C         	call	_toggle_LED_Green
   439   001572  0E00               	movlw	0
   440   001574  EC64  F00C         	call	_toggle_LED_Blue
   441   001578  0E00               	movlw	0
   442   00157A  EC56  F00C         	call	_toggle_LED_Red
   443   00157E  0E10               	movlw	16
   444   001580  6E1F               	movwf	(??_main+1)^0,c
   445   001582  0E39               	movlw	57
   446   001584  6E1E               	movwf	??_main^0,c
   447   001586  0E0E               	movlw	14
   448   001588                     u3017:
   449   001588  2EE8               	decfsz	wreg,f,c
   450   00158A  D7FE               	bra	u3017
   451   00158C  2E1E               	decfsz	??_main^0,f,c
   452   00158E  D7FC               	bra	u3017
   453   001590  2E1F               	decfsz	(??_main+1)^0,f,c
   454   001592  D7FA               	bra	u3017
   455   001594  EC0C  F00C         	call	_read_ADC	;wreg free
   456   001598  C001  F021         	movff	?_read_ADC,main@curVal
   457   00159C  C002  F022         	movff	?_read_ADC+1,main@curVal+1
   458   0015A0  0E00               	movlw	0
   459   0015A2  6E0F               	movwf	(build_debug_raw_msg@timestamp+1)^0,c
   460   0015A4  0E00               	movlw	0
   461   0015A6  6E0E               	movwf	build_debug_raw_msg@timestamp^0,c
   462   0015A8  C021  F01E         	movff	main@curVal,??_main
   463   0015AC  C022  F01F         	movff	main@curVal+1,??_main+1
   464   0015B0  6A20               	clrf	(??_main+2)^0,c
   465   0015B2  C01E  F010         	movff	??_main,build_debug_raw_msg@data
   466   0015B6  C01F  F011         	movff	??_main+1,build_debug_raw_msg@data+1
   467   0015BA  C020  F012         	movff	??_main+2,build_debug_raw_msg@data+2
   468   0015BE  0E23               	movlw	low main@bob
   469   0015C0  6E13               	movwf	build_debug_raw_msg@output^0,c
   470   0015C2  0E01               	movlw	1
   471   0015C4  EC48  F00A         	call	_build_debug_raw_msg
   472   0015C8  0E23               	movlw	low main@bob
   473   0015CA  6E0E               	movwf	can_send@message^0,c
   474   0015CC  ECDF  F008         	call	_can_send	;wreg free
   475   0015D0  EFA1  F00A         	goto	l64
   476   0015D4  EFFE  F07F         	goto	start
   477   0015D8                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _toggle_LED_Red *****************
   481 ;; Defined at:
   482 ;;		line 25 in file "leds.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  LED_On          1    wreg     _Bool 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  LED_On          1    0[COMRAM] _Bool 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text1
   510   0018AC                     __ptext1:
   511                           	callstack 0
   512   0018AC                     _toggle_LED_Red:
   513                           	callstack 30
   514                           
   515                           ;incstack = 0
   516                           ;toggle_LED_Red@LED_On stored from wreg
   517   0018AC  6E01               	movwf	toggle_LED_Red@LED_On^0,c
   518   0018AE                     
   519                           ;leds.c: 26:     LATA4 = LED_On;
   520   0018AE  B001               	btfsc	toggle_LED_Red@LED_On^0,0,c
   521   0018B0  D002               	bra	u165
   522   0018B2  98BA               	bcf	16314,4,c	;volatile
   523   0018B4  D001               	bra	u166
   524   0018B6                     u165:
   525   0018B6  88BA               	bsf	16314,4,c	;volatile
   526   0018B8                     u166:
   527   0018B8  0012               	return		;funcret
   528   0018BA                     __end_of_toggle_LED_Red:
   529                           	callstack 0
   530                           
   531 ;; *************** function _toggle_LED_Green *****************
   532 ;; Defined at:
   533 ;;		line 17 in file "leds.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  LED_On          1    wreg     _Bool 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  LED_On          1    0[COMRAM] _Bool 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;;		_can_msg_handler
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text2
   562   0018BA                     __ptext2:
   563                           	callstack 0
   564   0018BA                     _toggle_LED_Green:
   565                           	callstack 30
   566                           
   567                           ;incstack = 0
   568                           ;toggle_LED_Green@LED_On stored from wreg
   569   0018BA  6E01               	movwf	toggle_LED_Green@LED_On^0,c
   570   0018BC                     
   571                           ;leds.c: 18:     LATA2 = LED_On;
   572   0018BC  B001               	btfsc	toggle_LED_Green@LED_On^0,0,c
   573   0018BE  D002               	bra	u145
   574   0018C0  94BA               	bcf	16314,2,c	;volatile
   575   0018C2  D001               	bra	u146
   576   0018C4                     u145:
   577   0018C4  84BA               	bsf	16314,2,c	;volatile
   578   0018C6                     u146:
   579   0018C6  0012               	return		;funcret
   580   0018C8                     __end_of_toggle_LED_Green:
   581                           	callstack 0
   582                           
   583 ;; *************** function _toggle_LED_Blue *****************
   584 ;; Defined at:
   585 ;;		line 21 in file "leds.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  LED_On          1    wreg     _Bool 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  LED_On          1    0[COMRAM] _Bool 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        1 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613   0018C8                     __ptext3:
   614                           	callstack 0
   615   0018C8                     _toggle_LED_Blue:
   616                           	callstack 30
   617                           
   618                           ;incstack = 0
   619                           ;toggle_LED_Blue@LED_On stored from wreg
   620   0018C8  6E01               	movwf	toggle_LED_Blue@LED_On^0,c
   621   0018CA                     
   622                           ;leds.c: 22:     LATA3 = LED_On;
   623   0018CA  B001               	btfsc	toggle_LED_Blue@LED_On^0,0,c
   624   0018CC  D002               	bra	u155
   625   0018CE  96BA               	bcf	16314,3,c	;volatile
   626   0018D0  D001               	bra	u156
   627   0018D2                     u155:
   628   0018D2  86BA               	bsf	16314,3,c	;volatile
   629   0018D4                     u156:
   630   0018D4  0012               	return		;funcret
   631   0018D6                     __end_of_toggle_LED_Blue:
   632                           	callstack 0
   633                           
   634 ;; *************** function _read_ADC *****************
   635 ;; Defined at:
   636 ;;		line 21 in file "adc.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  result          2    4[COMRAM] unsigned short 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2    0[COMRAM] unsigned short 
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text4
   664   001818                     __ptext4:
   665                           	callstack 0
   666   001818                     _read_ADC:
   667                           	callstack 30
   668   001818                     
   669                           ;adc.c: 22:     ADCON0bits.GO = 1;
   670   001818  013E               	movlb	62	; () banked
   671   00181A  81F8               	bsf	248,0,b	;volatile
   672   00181C                     l105:
   673                           
   674                           ; BSR set to: 62
   675   00181C  B1F8               	btfsc	248,0,b	;volatile
   676   00181E  EF13  F00C         	goto	u2081
   677   001822  EF15  F00C         	goto	u2080
   678   001826                     u2081:
   679   001826  EF0E  F00C         	goto	l105
   680   00182A                     u2080:
   681   00182A                     
   682                           ; BSR set to: 62
   683                           ;adc.c: 24:     uint16_t result = ((uint16_t)ADRESH << 8) | ADRESL;
   684   00182A  51F0               	movf	240,w,b	;volatile
   685   00182C  6E03               	movwf	??_read_ADC^0,c
   686   00182E  51EF               	movf	239,w,b	;volatile
   687   001830  6E05               	movwf	read_ADC@result^0,c
   688   001832  C003  F006         	movff	??_read_ADC,read_ADC@result+1
   689   001836                     
   690                           ; BSR set to: 62
   691                           ;adc.c: 26:     return result;
   692   001836  C005  F001         	movff	read_ADC@result,?_read_ADC
   693   00183A  C006  F002         	movff	read_ADC@result+1,?_read_ADC+1
   694   00183E                     
   695                           ; BSR set to: 62
   696   00183E  0012               	return		;funcret
   697   001840                     __end_of_read_ADC:
   698                           	callstack 0
   699                           
   700 ;; *************** function _can_send *****************
   701 ;; Defined at:
   702 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  message         1   13[COMRAM] PTR const struct .
   705 ;;		 -> txb_heartbeat@msg_sent(13), main@bob(13), 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;Total ram usage:       10 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		_memcpy
   726 ;; This function is called by:
   727 ;;		_CAN_Init
   728 ;;		_main
   729 ;;		_txb_heartbeat
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text5
   734   0011BE                     __ptext5:
   735                           	callstack 0
   736   0011BE                     _can_send:
   737                           	callstack 29
   738   0011BE                     
   739                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
   740   0011BE  0137               	movlb	55	; () banked
   741   0011C0  A7E0               	btfss	224,3,b	;volatile
   742   0011C2  EFE5  F008         	goto	u2111
   743   0011C6  EFE7  F008         	goto	u2110
   744   0011CA                     u2111:
   745   0011CA  EFE9  F008         	goto	l3339
   746   0011CE                     u2110:
   747   0011CE  EFAF  F009         	goto	l254
   748   0011D2                     l3339:
   749                           
   750                           ; BSR set to: 55
   751                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x1FFFFFFF) {
   752   0011D2  500E               	movf	can_send@message^0,w,c
   753   0011D4  6ED9               	movwf	fsr2l,c
   754   0011D6  6ADA               	clrf	fsr2h,c
   755   0011D8  0E04               	movlw	4
   756   0011DA  26D9               	addwf	fsr2l,f,c
   757   0011DC  0E09               	movlw	9
   758   0011DE  60DF               	cpfslt	indf2,c
   759   0011E0  EFF4  F008         	goto	u2121
   760   0011E4  EFF6  F008         	goto	u2120
   761   0011E8                     u2121:
   762   0011E8  EFAF  F009         	goto	l254
   763   0011EC                     u2120:
   764   0011EC                     
   765                           ; BSR set to: 55
   766   0011EC  500E               	movf	can_send@message^0,w,c
   767   0011EE  6ED9               	movwf	fsr2l,c
   768   0011F0  6ADA               	clrf	fsr2h,c
   769   0011F2  52DE               	movf	postinc2,f,c
   770   0011F4  52DE               	movf	postinc2,f,c
   771   0011F6  52DE               	movf	postinc2,f,c
   772   0011F8  0E20               	movlw	32
   773   0011FA  5CDE               	subwf	postinc2,w,c
   774   0011FC  A0D8               	btfss	status,0,c
   775   0011FE  EF03  F009         	goto	u2131
   776   001202  EF05  F009         	goto	u2130
   777   001206                     u2131:
   778   001206  EF07  F009         	goto	l3343
   779   00120A                     u2130:
   780   00120A  EFAF  F009         	goto	l254
   781   00120E                     l3343:
   782                           
   783                           ; BSR set to: 55
   784                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
   785   00120E  0EFC               	movlw	-4
   786   001210  17E0               	andwf	224,f,b	;volatile
   787   001212                     
   788                           ; BSR set to: 55
   789                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = (message->sid >> 21);
   790   001212  500E               	movf	can_send@message^0,w,c
   791   001214  6ED9               	movwf	fsr2l,c
   792   001216  6ADA               	clrf	fsr2h,c
   793   001218  006F FF78  F00F    	movff	postinc2,??_can_send
   794   00121E  006F FF78  F010    	movff	postinc2,??_can_send+1
   795   001224  006F FF78  F011    	movff	postinc2,??_can_send+2
   796   00122A  006F FF78  F012    	movff	postinc2,??_can_send+3
   797   001230  0E16               	movlw	22
   798   001232  EF20  F009         	goto	u2140
   799   001236                     u2145:
   800   001236  90D8               	bcf	status,0,c
   801   001238  3212               	rrcf	(??_can_send+3)^0,f,c
   802   00123A  3211               	rrcf	(??_can_send+2)^0,f,c
   803   00123C  3210               	rrcf	(??_can_send+1)^0,f,c
   804   00123E  320F               	rrcf	??_can_send^0,f,c
   805   001240                     u2140:
   806   001240  2EE8               	decfsz	wreg,f,c
   807   001242  EF1B  F009         	goto	u2145
   808   001246  500F               	movf	??_can_send^0,w,c
   809   001248  6FE1               	movwf	225,b	;volatile
   810   00124A                     
   811                           ; BSR set to: 55
   812                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid >> 18) & 0x7) 
      +                          << 5) | (1 << 3) | ((message->sid >> 16) & 0x3);
   813   00124A  500E               	movf	can_send@message^0,w,c
   814   00124C  6ED9               	movwf	fsr2l,c
   815   00124E  6ADA               	clrf	fsr2h,c
   816   001250  006F FF78  F00F    	movff	postinc2,??_can_send
   817   001256  006F FF78  F010    	movff	postinc2,??_can_send+1
   818   00125C  006F FF78  F011    	movff	postinc2,??_can_send+2
   819   001262  006F FF78  F012    	movff	postinc2,??_can_send+3
   820   001268  0E11               	movlw	17
   821   00126A  EF3C  F009         	goto	u2150
   822   00126E                     u2155:
   823   00126E  90D8               	bcf	status,0,c
   824   001270  3212               	rrcf	(??_can_send+3)^0,f,c
   825   001272  3211               	rrcf	(??_can_send+2)^0,f,c
   826   001274  3210               	rrcf	(??_can_send+1)^0,f,c
   827   001276  320F               	rrcf	??_can_send^0,f,c
   828   001278                     u2150:
   829   001278  2EE8               	decfsz	wreg,f,c
   830   00127A  EF37  F009         	goto	u2155
   831   00127E  0E03               	movlw	3
   832   001280  160F               	andwf	??_can_send^0,f,c
   833   001282  500E               	movf	can_send@message^0,w,c
   834   001284  6ED9               	movwf	fsr2l,c
   835   001286  6ADA               	clrf	fsr2h,c
   836   001288  006F FF78  F013    	movff	postinc2,??_can_send+4
   837   00128E  006F FF78  F014    	movff	postinc2,??_can_send+5
   838   001294  006F FF78  F015    	movff	postinc2,??_can_send+6
   839   00129A  006F FF78  F016    	movff	postinc2,??_can_send+7
   840   0012A0  0E13               	movlw	19
   841   0012A2  EF58  F009         	goto	u2160
   842   0012A6                     u2165:
   843   0012A6  90D8               	bcf	status,0,c
   844   0012A8  3216               	rrcf	(??_can_send+7)^0,f,c
   845   0012AA  3215               	rrcf	(??_can_send+6)^0,f,c
   846   0012AC  3214               	rrcf	(??_can_send+5)^0,f,c
   847   0012AE  3213               	rrcf	(??_can_send+4)^0,f,c
   848   0012B0                     u2160:
   849   0012B0  2EE8               	decfsz	wreg,f,c
   850   0012B2  EF53  F009         	goto	u2165
   851   0012B6  0E07               	movlw	7
   852   0012B8  1613               	andwf	(??_can_send+4)^0,f,c
   853   0012BA  0E05               	movlw	5
   854   0012BC  6E17               	movwf	(??_can_send+8)^0,c
   855   0012BE                     u2175:
   856   0012BE  90D8               	bcf	status,0,c
   857   0012C0  3613               	rlcf	(??_can_send+4)^0,f,c
   858   0012C2  2E17               	decfsz	(??_can_send+8)^0,f,c
   859   0012C4  EF5F  F009         	goto	u2175
   860   0012C8  5013               	movf	(??_can_send+4)^0,w,c
   861   0012CA  100F               	iorwf	??_can_send^0,w,c
   862   0012CC  0908               	iorlw	8
   863   0012CE  6FE2               	movwf	226,b	;volatile
   864   0012D0                     
   865                           ; BSR set to: 55
   866                           ;canlib/pic18f26k83/pic18f26k83_can.c: 100:     TXB0EIDH = message->sid >> 8;
   867   0012D0  500E               	movf	can_send@message^0,w,c
   868   0012D2  6ED9               	movwf	fsr2l,c
   869   0012D4  6ADA               	clrf	fsr2h,c
   870   0012D6  006F FF78  F00F    	movff	postinc2,??_can_send
   871   0012DC  006F FF78  F010    	movff	postinc2,??_can_send+1
   872   0012E2  006F FF78  F011    	movff	postinc2,??_can_send+2
   873   0012E8  006F FF78  F012    	movff	postinc2,??_can_send+3
   874   0012EE  C010  F00F         	movff	??_can_send+1,??_can_send
   875   0012F2  C011  F010         	movff	??_can_send+2,??_can_send+1
   876   0012F6  C012  F011         	movff	??_can_send+3,??_can_send+2
   877   0012FA  6A12               	clrf	(??_can_send+3)^0,c
   878   0012FC  500F               	movf	??_can_send^0,w,c
   879   0012FE  6FE3               	movwf	227,b	;volatile
   880   001300                     
   881                           ; BSR set to: 55
   882                           ;canlib/pic18f26k83/pic18f26k83_can.c: 101:     TXB0EIDL = message->sid;
   883   001300  500E               	movf	can_send@message^0,w,c
   884   001302  6ED9               	movwf	fsr2l,c
   885   001304  6ADA               	clrf	fsr2h,c
   886   001306  50DF               	movf	indf2,w,c
   887   001308  6FE4               	movwf	228,b	;volatile
   888   00130A                     
   889                           ; BSR set to: 55
   890                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.TXRTR = 0;
   891   00130A  9DE5               	bcf	229,6,b	;volatile
   892   00130C                     
   893                           ; BSR set to: 55
   894                           ;canlib/pic18f26k83/pic18f26k83_can.c: 106:     TXB0DLCbits.DLC = message->data_len;
   895   00130C  500E               	movf	can_send@message^0,w,c
   896   00130E  6ED9               	movwf	fsr2l,c
   897   001310  6ADA               	clrf	fsr2h,c
   898   001312  0E04               	movlw	4
   899   001314  26D9               	addwf	fsr2l,f,c
   900   001316  50DF               	movf	indf2,w,c
   901   001318  6E0F               	movwf	??_can_send^0,c
   902   00131A  51E5               	movf	229,w,b	;volatile
   903   00131C  180F               	xorwf	??_can_send^0,w,c
   904   00131E  0BF0               	andlw	-16
   905   001320  180F               	xorwf	??_can_send^0,w,c
   906   001322  6FE5               	movwf	229,b	;volatile
   907   001324                     
   908                           ; BSR set to: 55
   909                           ;canlib/pic18f26k83/pic18f26k83_can.c: 110:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
   910   001324  0EE6               	movlw	230
   911   001326  6E01               	movwf	memcpy@d1^0,c
   912   001328  0E37               	movlw	55
   913   00132A  6E02               	movwf	(memcpy@d1+1)^0,c
   914   00132C  C00E  F00F         	movff	can_send@message,??_can_send
   915   001330  0E05               	movlw	5
   916   001332  260F               	addwf	??_can_send^0,f,c
   917   001334  C00F  F003         	movff	??_can_send,memcpy@s1
   918   001338  6A04               	clrf	(memcpy@s1+1)^0,c
   919   00133A  5003               	movf	memcpy@s1^0,w,c
   920   00133C  A4D8               	btfss	status,2,c
   921   00133E  0E20               	movlw	32
   922   001340  6E05               	movwf	(memcpy@s1+2)^0,c
   923   001342  500E               	movf	can_send@message^0,w,c
   924   001344  6ED9               	movwf	fsr2l,c
   925   001346  6ADA               	clrf	fsr2h,c
   926   001348  0E04               	movlw	4
   927   00134A  26D9               	addwf	fsr2l,f,c
   928   00134C  50DF               	movf	indf2,w,c
   929   00134E  6E10               	movwf	(??_can_send+1)^0,c
   930   001350  5010               	movf	(??_can_send+1)^0,w,c
   931   001352  6E06               	movwf	memcpy@n^0,c
   932   001354  6A07               	clrf	(memcpy@n+1)^0,c
   933   001356  ECEC  F00A         	call	_memcpy	;wreg free
   934   00135A                     
   935                           ;canlib/pic18f26k83/pic18f26k83_can.c: 113:     TXB0CONbits.TXREQ = 1;
   936   00135A  0137               	movlb	55	; () banked
   937   00135C  87E0               	bsf	224,3,b	;volatile
   938   00135E                     l254:
   939                           
   940                           ; BSR set to: 55
   941   00135E  0012               	return		;funcret
   942   001360                     __end_of_can_send:
   943                           	callstack 0
   944                           
   945 ;; *************** function _build_debug_raw_msg *****************
   946 ;; Defined at:
   947 ;;		line 48 in file "canlib/message/msg_general.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  prio            1    wreg     enum E219
   950 ;;  timestamp       2   13[COMRAM] unsigned short 
   951 ;;  data            3   15[COMRAM] PTR const unsigned char 
   952 ;;		 -> ROM(65535), 
   953 ;;  output          1   18[COMRAM] PTR struct .
   954 ;;		 -> main@bob(13), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  prio            1   27[COMRAM] enum E219
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      _Bool 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:       15 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		_memcpy
   975 ;;		_write_timestamp_2bytes
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text6
   982   001490                     __ptext6:
   983                           	callstack 0
   984   001490                     _build_debug_raw_msg:
   985                           	callstack 29
   986                           
   987                           ; BSR set to: 55
   988                           ;incstack = 0
   989                           ;build_debug_raw_msg@prio stored from wreg
   990   001490  6E1C               	movwf	build_debug_raw_msg@prio^0,c
   991   001492                     
   992                           ;canlib/message/msg_general.c: 49:     can_msg_prio_t prio, uint16_t timestamp, const ui
      +                          nt8_t *data, can_msg_t *output;canlib/message/msg_general.c: 50: ) {;canlib/message/msg_
      +                          general.c: 51:     if (!output) {
   993   001492  5013               	movf	build_debug_raw_msg@output^0,w,c
   994   001494  A4D8               	btfss	status,2,c
   995   001496  EF4F  F00A         	goto	u2091
   996   00149A  EF51  F00A         	goto	u2090
   997   00149E                     u2091:
   998   00149E  EF53  F00A         	goto	l3325
   999   0014A2                     u2090:
  1000   0014A2  EF9E  F00A         	goto	l481
  1001   0014A6                     l3325:
  1002                           
  1003                           ;canlib/message/msg_general.c: 55:     output->sid = (((uint32_t)prio << 27) | ((uint32_
      +                          t)MSG_DEBUG_RAW << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GENERI
      +                          C);
  1004   0014A6  C01C  F014         	movff	build_debug_raw_msg@prio,??_build_debug_raw_msg
  1005   0014AA  6A15               	clrf	(??_build_debug_raw_msg+1)^0,c
  1006   0014AC  6A16               	clrf	(??_build_debug_raw_msg+2)^0,c
  1007   0014AE  6A17               	clrf	(??_build_debug_raw_msg+3)^0,c
  1008   0014B0  0E1B               	movlw	27
  1009   0014B2                     u2105:
  1010   0014B2  90D8               	bcf	status,0,c
  1011   0014B4  3614               	rlcf	??_build_debug_raw_msg^0,f,c
  1012   0014B6  3615               	rlcf	(??_build_debug_raw_msg+1)^0,f,c
  1013   0014B8  3616               	rlcf	(??_build_debug_raw_msg+2)^0,f,c
  1014   0014BA  3617               	rlcf	(??_build_debug_raw_msg+3)^0,f,c
  1015   0014BC  2EE8               	decfsz	wreg,f,c
  1016   0014BE  EF59  F00A         	goto	u2105
  1017   0014C2  0E01               	movlw	1
  1018   0014C4  1014               	iorwf	??_build_debug_raw_msg^0,w,c
  1019   0014C6  6E18               	movwf	(??_build_debug_raw_msg+4)^0,c
  1020   0014C8  0E07               	movlw	7
  1021   0014CA  1015               	iorwf	(??_build_debug_raw_msg+1)^0,w,c
  1022   0014CC  6E19               	movwf	(??_build_debug_raw_msg+5)^0,c
  1023   0014CE  0E0C               	movlw	12
  1024   0014D0  1016               	iorwf	(??_build_debug_raw_msg+2)^0,w,c
  1025   0014D2  6E1A               	movwf	(??_build_debug_raw_msg+6)^0,c
  1026   0014D4  0E00               	movlw	0
  1027   0014D6  1017               	iorwf	(??_build_debug_raw_msg+3)^0,w,c
  1028   0014D8  6E1B               	movwf	(??_build_debug_raw_msg+7)^0,c
  1029   0014DA  5013               	movf	build_debug_raw_msg@output^0,w,c
  1030   0014DC  6ED9               	movwf	fsr2l,c
  1031   0014DE  6ADA               	clrf	fsr2h,c
  1032   0014E0  0060  F063  FFDE   	movff	??_build_debug_raw_msg+4,postinc2
  1033   0014E6  0060  F067  FFDE   	movff	??_build_debug_raw_msg+5,postinc2
  1034   0014EC  0060  F06B  FFDE   	movff	??_build_debug_raw_msg+6,postinc2
  1035   0014F2  0060  F06F  FFDE   	movff	??_build_debug_raw_msg+7,postinc2
  1036   0014F8                     
  1037                           ;canlib/message/msg_general.c: 56:     write_timestamp_2bytes(timestamp, output);
  1038   0014F8  C00E  F001         	movff	build_debug_raw_msg@timestamp,write_timestamp_2bytes@timestamp
  1039   0014FC  C00F  F002         	movff	build_debug_raw_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
  1040   001500  C013  F003         	movff	build_debug_raw_msg@output,write_timestamp_2bytes@output
  1041   001504  EC20  F00C         	call	_write_timestamp_2bytes	;wreg free
  1042   001508                     
  1043                           ;canlib/message/msg_general.c: 58:     memcpy(output->data + 2, data, 6);
  1044   001508  C013  F014         	movff	build_debug_raw_msg@output,??_build_debug_raw_msg
  1045   00150C  0E07               	movlw	7
  1046   00150E  2614               	addwf	??_build_debug_raw_msg^0,f,c
  1047   001510  C014  F001         	movff	??_build_debug_raw_msg,memcpy@d1
  1048   001514  6A02               	clrf	(memcpy@d1+1)^0,c
  1049   001516  C010  F003         	movff	build_debug_raw_msg@data,memcpy@s1
  1050   00151A  C011  F004         	movff	build_debug_raw_msg@data+1,memcpy@s1+1
  1051   00151E  C012  F005         	movff	build_debug_raw_msg@data+2,memcpy@s1+2
  1052   001522  0E00               	movlw	0
  1053   001524  6E07               	movwf	(memcpy@n+1)^0,c
  1054   001526  0E06               	movlw	6
  1055   001528  6E06               	movwf	memcpy@n^0,c
  1056   00152A  ECEC  F00A         	call	_memcpy	;wreg free
  1057   00152E                     
  1058                           ;canlib/message/msg_general.c: 59:     output->data_len = 8;
  1059   00152E  5013               	movf	build_debug_raw_msg@output^0,w,c
  1060   001530  6ED9               	movwf	fsr2l,c
  1061   001532  6ADA               	clrf	fsr2h,c
  1062   001534  0E04               	movlw	4
  1063   001536  26D9               	addwf	fsr2l,f,c
  1064   001538  0E08               	movlw	8
  1065   00153A  6EDF               	movwf	indf2,c
  1066   00153C                     l481:
  1067   00153C  0012               	return		;funcret
  1068   00153E                     __end_of_build_debug_raw_msg:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _write_timestamp_2bytes *****************
  1072 ;; Defined at:
  1073 ;;		line 9 in file "canlib/message/msg_common.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  timestamp       2    0[COMRAM] unsigned short 
  1076 ;;  output          1    2[COMRAM] PTR struct .
  1077 ;;		 -> main@bob(13), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        3 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_build_debug_raw_msg
  1099 ;;		_build_actuator_cmd_msg
  1100 ;;		_build_actuator_analog_cmd_msg
  1101 ;;		_build_actuator_status_msg
  1102 ;;		_build_general_board_status_msg
  1103 ;;		_build_reset_msg
  1104 ;;		_build_config_set_msg
  1105 ;;		_build_config_status_msg
  1106 ;;		_build_gps_time_msg
  1107 ;;		_build_gps_lat_msg
  1108 ;;		_build_gps_lon_msg
  1109 ;;		_build_gps_alt_msg
  1110 ;;		_build_gps_info_msg
  1111 ;;		_build_alt_arm_cmd_msg
  1112 ;;		_build_alt_arm_status_msg
  1113 ;;		_build_temp_data_msg
  1114 ;;		_build_altitude_data_msg
  1115 ;;		_build_imu_data_msg
  1116 ;;		_build_mag_data_msg
  1117 ;;		_build_analog_data_msg
  1118 ;;		_build_state_est_data_msg
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text7
  1123   001840                     __ptext7:
  1124                           	callstack 0
  1125   001840                     _write_timestamp_2bytes:
  1126                           	callstack 29
  1127   001840                     
  1128                           ;canlib/message/msg_common.c: 10:     output->data[0] = (timestamp >> 8) & 0xff;
  1129   001840  5003               	movf	write_timestamp_2bytes@output^0,w,c
  1130   001842  6ED9               	movwf	fsr2l,c
  1131   001844  6ADA               	clrf	fsr2h,c
  1132   001846  0E05               	movlw	5
  1133   001848  26D9               	addwf	fsr2l,f,c
  1134   00184A  5002               	movf	(write_timestamp_2bytes@timestamp+1)^0,w,c
  1135   00184C  6EDF               	movwf	indf2,c
  1136                           
  1137                           ;canlib/message/msg_common.c: 11:     output->data[1] = (timestamp >> 0) & 0xff;
  1138   00184E  5003               	movf	write_timestamp_2bytes@output^0,w,c
  1139   001850  6ED9               	movwf	fsr2l,c
  1140   001852  6ADA               	clrf	fsr2h,c
  1141   001854  0E06               	movlw	6
  1142   001856  26D9               	addwf	fsr2l,f,c
  1143   001858  0060  F007  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
  1144   00185E  0012               	return		;funcret
  1145   001860                     __end_of_write_timestamp_2bytes:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _memcpy *****************
  1149 ;; Defined at:
  1150 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  d1              2    0[COMRAM] PTR void 
  1153 ;;		 -> bob$data(8), txb_heartbeat@msg_sent(13), can_handle_interrupt@rcvd_msg_1419(13), can_handle_interrupt@rcvd_msg(1
      +3), 
  1154 ;;		 -> TXB0D0(1), main@bob(13), tx_pool(200), 
  1155 ;;  s1              3    2[COMRAM] PTR const void 
  1156 ;;		 -> txb_heartbeat@msg_sent(13), RXB1D0(1), RXB0D0(1), ROM(65535), 
  1157 ;;		 -> main@bob(13), tx_pool(200), 
  1158 ;;  n               2    5[COMRAM] unsigned int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  s               3    7[COMRAM] PTR const unsigned char 
  1161 ;;		 -> txb_heartbeat@msg_sent(13), RXB1D0(1), RXB0D0(1), ROM(65535), 
  1162 ;;		 -> main@bob(13), tx_pool(200), 
  1163 ;;  d               2   10[COMRAM] PTR unsigned char 
  1164 ;;		 -> bob$data(8), txb_heartbeat@msg_sent(13), can_handle_interrupt@rcvd_msg_1419(13), can_handle_interrupt@rcvd_msg(1
      +3), 
  1165 ;;		 -> TXB0D0(1), main@bob(13), tx_pool(200), 
  1166 ;;  tmp             1   12[COMRAM] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    0[COMRAM] PTR void 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:       13 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_can_send
  1186 ;;		_build_debug_raw_msg
  1187 ;;		_can_handle_interrupt
  1188 ;;		_srb_push
  1189 ;;		_srb_pop
  1190 ;;		_srb_peek
  1191 ;;		_get_debug_raw_data
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text8
  1196   0015D8                     __ptext8:
  1197                           	callstack 0
  1198   0015D8                     _memcpy:
  1199                           	callstack 29
  1200   0015D8  C003  F008         	movff	memcpy@s1,memcpy@s
  1201   0015DC  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
  1202   0015E0  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
  1203   0015E4  C001  F00B         	movff	memcpy@d1,memcpy@d
  1204   0015E8  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
  1205   0015EC  EF1F  F00B         	goto	l3301
  1206   0015F0                     l3293:
  1207   0015F0  0060  F023  FFF6   	movff	memcpy@s,tblptrl
  1208   0015F6  0060  F027  FFF7   	movff	memcpy@s+1,tblptrh
  1209   0015FC  0060  F02B  FFF8   	movff	memcpy@s+2,tblptru
  1210   001602  BAF8               	btfsc	tblptru,5,c
  1211   001604  D003               	bra	u2067
  1212   001606  0008               	tblrd		*
  1213   001608  50F5               	movf	tablat,w,c
  1214   00160A  D007               	bra	u2060
  1215   00160C                     u2067:
  1216   00160C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  1217   001612  006F FFDF FFEA     	movff	tblptrh,fsr0h
  1218   001618  50EF               	movf	indf0,w,c
  1219   00161A                     u2060:
  1220   00161A  6E0D               	movwf	memcpy@tmp^0,c
  1221   00161C  0E01               	movlw	1
  1222   00161E  2608               	addwf	memcpy@s^0,f,c
  1223   001620  0E00               	movlw	0
  1224   001622  2209               	addwfc	(memcpy@s+1)^0,f,c
  1225   001624  0E00               	movlw	0
  1226   001626  220A               	addwfc	(memcpy@s+2)^0,f,c
  1227   001628  0060  F02F  FFD9   	movff	memcpy@d,fsr2l
  1228   00162E  0060  F033  FFDA   	movff	memcpy@d+1,fsr2h
  1229   001634  0060  F037  FFDF   	movff	memcpy@tmp,indf2
  1230   00163A  4A0B               	infsnz	memcpy@d^0,f,c
  1231   00163C  2A0C               	incf	(memcpy@d+1)^0,f,c
  1232   00163E                     l3301:
  1233   00163E  0606               	decf	memcpy@n^0,f,c
  1234   001640  A0D8               	btfss	status,0,c
  1235   001642  0607               	decf	(memcpy@n+1)^0,f,c
  1236   001644  2806               	incf	memcpy@n^0,w,c
  1237   001646  E106               	bnz	u2071
  1238   001648  2807               	incf	(memcpy@n+1)^0,w,c
  1239   00164A  A4D8               	btfss	status,2,c
  1240   00164C  EF2A  F00B         	goto	u2071
  1241   001650  EF2C  F00B         	goto	u2070
  1242   001654                     u2071:
  1243   001654  EFF8  F00A         	goto	l3293
  1244   001658                     u2070:
  1245   001658  0012               	return		;funcret
  1246   00165A                     __end_of_memcpy:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function _Board_Init *****************
  1250 ;; Defined at:
  1251 ;;		line 66 in file "main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 4
  1272 ;; This function calls:
  1273 ;;		_ADC_Init
  1274 ;;		_CAN_Init
  1275 ;;		_LEDs_Init
  1276 ;;		_Osc_Init
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text9
  1283   00189A                     __ptext9:
  1284                           	callstack 0
  1285   00189A                     _Board_Init:
  1286                           	callstack 26
  1287   00189A                     
  1288                           ;main.c: 67: 
  1289   00189A  EC6B  F00C         	call	_LEDs_Init	;wreg free
  1290   00189E                     
  1291                           ;main.c: 68:         toggle_LED_Green(0);
  1292   00189E  ECCE  F00B         	call	_Osc_Init	;wreg free
  1293   0018A2                     
  1294                           ;main.c: 69:         toggle_LED_Blue(0);
  1295   0018A2  EC3F  F00C         	call	_ADC_Init	;wreg free
  1296   0018A6                     
  1297                           ;main.c: 71: 
  1298   0018A6  EC9F  F00B         	call	_CAN_Init	;wreg free
  1299   0018AA  0012               	return		;funcret
  1300   0018AC                     __end_of_Board_Init:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _Osc_Init *****************
  1304 ;; Defined at:
  1305 ;;		line 11 in file "clockInit.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  i               2    0[COMRAM] unsigned short 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        2 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_Board_Init
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text10
  1333   00179C                     __ptext10:
  1334                           	callstack 0
  1335   00179C                     _Osc_Init:
  1336                           	callstack 29
  1337   00179C  0E70               	movlw	112
  1338   00179E  0139               	movlb	57	; () banked
  1339   0017A0  6FD9               	movwf	217,b	;volatile
  1340   0017A2                     l747:
  1341                           
  1342                           ; BSR set to: 57
  1343   0017A2  A9DB               	btfss	219,4,b	;volatile
  1344   0017A4  EFD6  F00B         	goto	u61
  1345   0017A8  EFD8  F00B         	goto	u60
  1346   0017AC                     u61:
  1347   0017AC  EFD1  F00B         	goto	l747
  1348   0017B0                     u60:
  1349   0017B0                     
  1350                           ; BSR set to: 57
  1351   0017B0  0E20               	movlw	32
  1352   0017B2  19DA               	xorwf	218,w,b	;volatile
  1353   0017B4  B4D8               	btfsc	status,2,c
  1354   0017B6  EFDF  F00B         	goto	u71
  1355   0017BA  EFE1  F00B         	goto	u70
  1356   0017BE                     u71:
  1357   0017BE  EFF2  F00B         	goto	l753
  1358   0017C2                     u70:
  1359   0017C2                     
  1360                           ; BSR set to: 57
  1361   0017C2  0E00               	movlw	0
  1362   0017C4  6E02               	movwf	(Osc_Init@i+1)^0,c
  1363   0017C6  0E00               	movlw	0
  1364   0017C8  6E01               	movwf	Osc_Init@i^0,c
  1365   0017CA                     l1645:
  1366   0017CA  4A01               	infsnz	Osc_Init@i^0,f,c
  1367   0017CC  2A02               	incf	(Osc_Init@i+1)^0,f,c
  1368   0017CE  0E60               	movlw	96
  1369   0017D0  5C01               	subwf	Osc_Init@i^0,w,c
  1370   0017D2  0EEA               	movlw	234
  1371   0017D4  5802               	subwfb	(Osc_Init@i+1)^0,w,c
  1372   0017D6  A0D8               	btfss	status,0,c
  1373   0017D8  EFF0  F00B         	goto	u81
  1374   0017DC  EFF2  F00B         	goto	u80
  1375   0017E0                     u81:
  1376   0017E0  EFE5  F00B         	goto	l1645
  1377   0017E4                     u80:
  1378   0017E4                     l753:
  1379   0017E4  0012               	return		;funcret
  1380   0017E6                     __end_of_Osc_Init:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _LEDs_Init *****************
  1384 ;; Defined at:
  1385 ;;		line 10 in file "leds.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		None
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_Board_Init
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text11
  1413   0018D6                     __ptext11:
  1414                           	callstack 0
  1415   0018D6                     _LEDs_Init:
  1416                           	callstack 29
  1417   0018D6                     
  1418                           ;leds.c: 12:     TRISAbits.TRISA2 = 0;
  1419   0018D6  94C2               	bcf	194,2,c	;volatile
  1420                           
  1421                           ;leds.c: 13:     TRISAbits.TRISA3 = 0;
  1422   0018D8  96C2               	bcf	194,3,c	;volatile
  1423                           
  1424                           ;leds.c: 14:     TRISAbits.TRISA4 = 0;
  1425   0018DA  98C2               	bcf	194,4,c	;volatile
  1426   0018DC  0012               	return		;funcret
  1427   0018DE                     __end_of_LEDs_Init:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _CAN_Init *****************
  1431 ;; Defined at:
  1432 ;;		line 47 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  can_setup       7   22[COMRAM] struct .
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        7 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 3
  1453 ;; This function calls:
  1454 ;;		_can_generate_timing_params
  1455 ;;		_can_init
  1456 ;;		_txb_init
  1457 ;; This function is called by:
  1458 ;;		_Board_Init
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text12
  1463   00173E                     __ptext12:
  1464                           	callstack 0
  1465   00173E                     _CAN_Init:
  1466                           	callstack 26
  1467   00173E                     
  1468                           ;main.c: 49:     LEDs_Init();
  1469   00173E  92C4               	bcf	16324,1,c	;volatile
  1470   001740                     
  1471                           ;main.c: 50:     Osc_Init();
  1472   001740  0E33               	movlw	51
  1473   001742  013A               	movlb	58	; () banked
  1474   001744  6F11               	movwf	17,b	;volatile
  1475   001746                     
  1476                           ; BSR set to: 58
  1477                           ;main.c: 53:     CAN_Init();
  1478   001746  80C4               	bsf	16324,0,c	;volatile
  1479   001748                     
  1480                           ; BSR set to: 58
  1481                           ;main.c: 54: }
  1482   001748  9160               	bcf	96,0,b	;volatile
  1483                           
  1484                           ;main.c: 55: 
  1485   00174A  0E10               	movlw	16
  1486   00174C  6FED               	movwf	237,b	;volatile
  1487   00174E                     
  1488                           ; BSR set to: 58
  1489                           ;main.c: 58: ;main.c: 59:     while (1) {
  1490   00174E  0E00               	movlw	0
  1491   001750  6E01               	movwf	can_generate_timing_params@can_frequency^0,c
  1492   001752  0E1B               	movlw	27
  1493   001754  6E02               	movwf	(can_generate_timing_params@can_frequency+1)^0,c
  1494   001756  0EB7               	movlw	183
  1495   001758  6E03               	movwf	(can_generate_timing_params@can_frequency+2)^0,c
  1496   00175A  0E00               	movlw	0
  1497   00175C  6E04               	movwf	(can_generate_timing_params@can_frequency+3)^0,c
  1498   00175E  0E17               	movlw	low CAN_Init@can_setup
  1499   001760  6E05               	movwf	can_generate_timing_params@timing^0,c
  1500   001762  EC01  F008         	call	_can_generate_timing_params	;wreg free
  1501   001766                     
  1502                           ;main.c: 60:         __asm(" clrwdt");
  1503   001766  0E17               	movlw	low CAN_Init@can_setup
  1504   001768  6E01               	movwf	can_init@timing^0,c
  1505   00176A  0E00               	movlw	0
  1506   00176C  6E02               	movwf	can_init@receive_callback^0,c
  1507   00176E  0E00               	movlw	0
  1508   001770  6E03               	movwf	(can_init@receive_callback+1)^0,c
  1509   001772  ECB0  F009         	call	_can_init	;wreg free
  1510   001776                     
  1511                           ;main.c: 63:         toggle_LED_Blue(1);
  1512   001776  0E00               	movlw	low _tx_pool
  1513   001778  6E0F               	movwf	txb_init@pool^0,c
  1514   00177A  0E01               	movlw	high _tx_pool
  1515   00177C  6E10               	movwf	(txb_init@pool+1)^0,c
  1516   00177E  0E00               	movlw	0
  1517   001780  6E12               	movwf	(txb_init@pool_size+1)^0,c
  1518   001782  0EC8               	movlw	200
  1519   001784  6E11               	movwf	txb_init@pool_size^0,c
  1520   001786  0EBE               	movlw	low _can_send
  1521   001788  6E13               	movwf	txb_init@can_send_fp^0,c
  1522   00178A  0E11               	movlw	high _can_send
  1523   00178C  6E14               	movwf	(txb_init@can_send_fp+1)^0,c
  1524   00178E  0E00               	movlw	0
  1525   001790  6E15               	movwf	txb_init@can_tx_ready^0,c
  1526   001792  0E00               	movlw	0
  1527   001794  6E16               	movwf	(txb_init@can_tx_ready+1)^0,c
  1528   001796  ECF3  F00B         	call	_txb_init	;wreg free
  1529   00179A  0012               	return		;funcret
  1530   00179C                     __end_of_CAN_Init:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _txb_init *****************
  1534 ;; Defined at:
  1535 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  pool            2   14[COMRAM] PTR void 
  1538 ;;		 -> tx_pool(200), 
  1539 ;;  pool_size       2   16[COMRAM] unsigned int 
  1540 ;;  can_send_fp     2   18[COMRAM] PTR FTN(PTR const struct
  1541 ;;		 -> can_send(1), 
  1542 ;;  can_tx_ready    2   20[COMRAM] PTR FTN()_Bool 
  1543 ;;		 -> can_send_rdy(1), 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:        8 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 2
  1562 ;; This function calls:
  1563 ;;		_srb_init
  1564 ;; This function is called by:
  1565 ;;		_CAN_Init
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text13
  1570   0017E6                     __ptext13:
  1571                           	callstack 0
  1572   0017E6                     _txb_init:
  1573                           	callstack 26
  1574   0017E6                     
  1575                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  1576   0017E6  C013  F034         	movff	txb_init@can_send_fp,_ctx
  1577   0017EA  C014  F035         	movff	txb_init@can_send_fp+1,_ctx+1
  1578                           
  1579                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  1580   0017EE  C015  F036         	movff	txb_init@can_tx_ready,_ctx+2
  1581   0017F2  C016  F037         	movff	txb_init@can_tx_ready+1,_ctx+3
  1582   0017F6                     
  1583                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  1584   0017F6  0E3C               	movlw	low _buf@can_tx_buffer$F1528
  1585   0017F8  6E08               	movwf	srb_init@ctx^0,c
  1586   0017FA  C00F  F009         	movff	txb_init@pool,srb_init@pool
  1587   0017FE  C010  F00A         	movff	txb_init@pool+1,srb_init@pool+1
  1588   001802  C011  F00B         	movff	txb_init@pool_size,srb_init@pool_size
  1589   001806  C012  F00C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  1590   00180A  0E00               	movlw	0
  1591   00180C  6E0E               	movwf	(srb_init@element_size+1)^0,c
  1592   00180E  0E0D               	movlw	13
  1593   001810  6E0D               	movwf	srb_init@element_size^0,c
  1594   001812  EC67  F00B         	call	_srb_init	;wreg free
  1595   001816  0012               	return		;funcret
  1596   001818                     __end_of_txb_init:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _srb_init *****************
  1600 ;; Defined at:
  1601 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  ctx             1    7[COMRAM] PTR struct .
  1604 ;;		 -> buf@can_tx_buffer$F1528(10), buf(10), 
  1605 ;;  pool            2    8[COMRAM] PTR void 
  1606 ;;		 -> tx_pool(200), 
  1607 ;;  pool_size       2   10[COMRAM] unsigned int 
  1608 ;;  element_size    2   12[COMRAM] unsigned int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1620 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;Total ram usage:        7 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 1
  1627 ;; This function calls:
  1628 ;;		___lwdiv
  1629 ;; This function is called by:
  1630 ;;		_txb_init
  1631 ;;		_rcvb_init
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text14
  1636   0016CE                     __ptext14:
  1637                           	callstack 0
  1638   0016CE                     _srb_init:
  1639                           	callstack 26
  1640   0016CE                     
  1641                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  1642   0016CE  5008               	movf	srb_init@ctx^0,w,c
  1643   0016D0  6ED9               	movwf	fsr2l,c
  1644   0016D2  6ADA               	clrf	fsr2h,c
  1645   0016D4  0060  F027  FFDE   	movff	srb_init@pool,postinc2
  1646   0016DA  0060  F02B  FFDD   	movff	srb_init@pool+1,postdec2
  1647   0016E0                     
  1648                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  1649   0016E0  5008               	movf	srb_init@ctx^0,w,c
  1650   0016E2  6ED9               	movwf	fsr2l,c
  1651   0016E4  6ADA               	clrf	fsr2h,c
  1652   0016E6  0E02               	movlw	2
  1653   0016E8  26D9               	addwf	fsr2l,f,c
  1654   0016EA  0060  F037  FFDE   	movff	srb_init@element_size,postinc2
  1655   0016F0  0060  F03B  FFDD   	movff	srb_init@element_size+1,postdec2
  1656   0016F6                     
  1657                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  1658   0016F6  C00B  F001         	movff	srb_init@pool_size,___lwdiv@dividend
  1659   0016FA  C00C  F002         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  1660   0016FE  C00D  F003         	movff	srb_init@element_size,___lwdiv@divisor
  1661   001702  C00E  F004         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  1662   001706  EC2D  F00B         	call	___lwdiv	;wreg free
  1663   00170A  5008               	movf	srb_init@ctx^0,w,c
  1664   00170C  6ED9               	movwf	fsr2l,c
  1665   00170E  6ADA               	clrf	fsr2h,c
  1666   001710  0E04               	movlw	4
  1667   001712  26D9               	addwf	fsr2l,f,c
  1668   001714  0060  F007  FFDE   	movff	?___lwdiv,postinc2
  1669   00171A  0060  F00B  FFDD   	movff	?___lwdiv+1,postdec2
  1670   001720                     
  1671                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  1672   001720  5008               	movf	srb_init@ctx^0,w,c
  1673   001722  6ED9               	movwf	fsr2l,c
  1674   001724  6ADA               	clrf	fsr2h,c
  1675   001726  0E06               	movlw	6
  1676   001728  26D9               	addwf	fsr2l,f,c
  1677   00172A  6ADE               	clrf	postinc2,c
  1678   00172C  6ADD               	clrf	postdec2,c
  1679   00172E                     
  1680                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  1681   00172E  5008               	movf	srb_init@ctx^0,w,c
  1682   001730  6ED9               	movwf	fsr2l,c
  1683   001732  6ADA               	clrf	fsr2h,c
  1684   001734  0E08               	movlw	8
  1685   001736  26D9               	addwf	fsr2l,f,c
  1686   001738  6ADE               	clrf	postinc2,c
  1687   00173A  6ADD               	clrf	postdec2,c
  1688   00173C  0012               	return		;funcret
  1689   00173E                     __end_of_srb_init:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function ___lwdiv *****************
  1693 ;; Defined at:
  1694 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  dividend        2    0[COMRAM] unsigned int 
  1697 ;;  divisor         2    2[COMRAM] unsigned int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  quotient        2    4[COMRAM] unsigned int 
  1700 ;;  counter         1    6[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  2    0[COMRAM] unsigned int 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        7 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_srb_init
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text15
  1724   00165A                     __ptext15:
  1725                           	callstack 0
  1726   00165A                     ___lwdiv:
  1727                           	callstack 26
  1728   00165A  0E00               	movlw	0
  1729   00165C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1730   00165E  0E00               	movlw	0
  1731   001660  6E05               	movwf	___lwdiv@quotient^0,c
  1732   001662  5003               	movf	___lwdiv@divisor^0,w,c
  1733   001664  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1734   001666  B4D8               	btfsc	status,2,c
  1735   001668  EF38  F00B         	goto	u2011
  1736   00166C  EF3A  F00B         	goto	u2010
  1737   001670                     u2011:
  1738   001670  EF62  F00B         	goto	l1247
  1739   001674                     u2010:
  1740   001674  0E01               	movlw	1
  1741   001676  6E07               	movwf	___lwdiv@counter^0,c
  1742   001678  EF42  F00B         	goto	l3101
  1743   00167C                     l3099:
  1744   00167C  90D8               	bcf	status,0,c
  1745   00167E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1746   001680  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1747   001682  2A07               	incf	___lwdiv@counter^0,f,c
  1748   001684                     l3101:
  1749   001684  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1750   001686  EF47  F00B         	goto	u2021
  1751   00168A  EF49  F00B         	goto	u2020
  1752   00168E                     u2021:
  1753   00168E  EF3E  F00B         	goto	l3099
  1754   001692                     u2020:
  1755   001692                     l3103:
  1756   001692  90D8               	bcf	status,0,c
  1757   001694  3605               	rlcf	___lwdiv@quotient^0,f,c
  1758   001696  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1759   001698  5003               	movf	___lwdiv@divisor^0,w,c
  1760   00169A  5C01               	subwf	___lwdiv@dividend^0,w,c
  1761   00169C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1762   00169E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1763   0016A0  A0D8               	btfss	status,0,c
  1764   0016A2  EF55  F00B         	goto	u2031
  1765   0016A6  EF57  F00B         	goto	u2030
  1766   0016AA                     u2031:
  1767   0016AA  EF5C  F00B         	goto	l3111
  1768   0016AE                     u2030:
  1769   0016AE  5003               	movf	___lwdiv@divisor^0,w,c
  1770   0016B0  5E01               	subwf	___lwdiv@dividend^0,f,c
  1771   0016B2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1772   0016B4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1773   0016B6  8005               	bsf	___lwdiv@quotient^0,0,c
  1774   0016B8                     l3111:
  1775   0016B8  90D8               	bcf	status,0,c
  1776   0016BA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1777   0016BC  3203               	rrcf	___lwdiv@divisor^0,f,c
  1778   0016BE  2E07               	decfsz	___lwdiv@counter^0,f,c
  1779   0016C0  EF49  F00B         	goto	l3103
  1780   0016C4                     l1247:
  1781   0016C4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1782   0016C8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1783   0016CC  0012               	return		;funcret
  1784   0016CE                     __end_of___lwdiv:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _can_init *****************
  1788 ;; Defined at:
  1789 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  timing          1    0[COMRAM] PTR const struct .
  1792 ;;		 -> CAN_Init@can_setup(7), 
  1793 ;;  receive_call    2    1[COMRAM] PTR FTN(PTR const struct
  1794 ;;		 -> can_msg_handler(1), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1806 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;Total ram usage:        4 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_CAN_Init
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text16
  1820   001360                     __ptext16:
  1821                           	callstack 0
  1822   001360                     _can_init:
  1823                           	callstack 28
  1824   001360                     
  1825                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
  1826   001360  C002  F038         	movff	can_init@receive_callback,_can_rcv_cb
  1827   001364  C003  F039         	movff	can_init@receive_callback+1,_can_rcv_cb+1
  1828   001368                     
  1829                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
  1830   001368  508F               	movf	143,w,c	;volatile
  1831   00136A  0B1F               	andlw	-225
  1832   00136C  0980               	iorlw	128
  1833   00136E  6E8F               	movwf	143,c	;volatile
  1834   001370                     l3215:
  1835   001370  388E               	swapf	142,w,c	;volatile
  1836   001372  32E8               	rrcf	wreg,f,c
  1837   001374  0B07               	andlw	7
  1838   001376  0A04               	xorlw	4
  1839   001378  A4D8               	btfss	status,2,c
  1840   00137A  EFC1  F009         	goto	u2041
  1841   00137E  EFC3  F009         	goto	u2040
  1842   001382                     u2041:
  1843   001382  EFB8  F009         	goto	l3215
  1844   001386                     u2040:
  1845   001386                     
  1846                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
  1847   001386  0E3F               	movlw	-193
  1848   001388  1691               	andwf	145,f,c	;volatile
  1849   00138A                     
  1850                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
  1851   00138A  0137               	movlb	55	; () banked
  1852   00138C  9100               	bcf	0,0,b	;volatile
  1853   00138E                     
  1854                           ; BSR set to: 55
  1855                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
  1856   00138E  5001               	movf	can_init@timing^0,w,c
  1857   001390  6ED9               	movwf	fsr2l,c
  1858   001392  6ADA               	clrf	fsr2h,c
  1859   001394  0E01               	movlw	1
  1860   001396  26D9               	addwf	fsr2l,f,c
  1861   001398  50DF               	movf	indf2,w,c
  1862   00139A  6E04               	movwf	??_can_init^0,c
  1863   00139C  3A04               	swapf	??_can_init^0,f,c
  1864   00139E  4604               	rlncf	??_can_init^0,f,c
  1865   0013A0  4604               	rlncf	??_can_init^0,f,c
  1866   0013A2  5103               	movf	3,w,b	;volatile
  1867   0013A4  1804               	xorwf	??_can_init^0,w,c
  1868   0013A6  0B3F               	andlw	-193
  1869   0013A8  1804               	xorwf	??_can_init^0,w,c
  1870   0013AA  6F03               	movwf	3,b	;volatile
  1871   0013AC                     
  1872                           ; BSR set to: 55
  1873                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
  1874   0013AC  5001               	movf	can_init@timing^0,w,c
  1875   0013AE  6ED9               	movwf	fsr2l,c
  1876   0013B0  6ADA               	clrf	fsr2h,c
  1877   0013B2  50DF               	movf	indf2,w,c
  1878   0013B4  6E04               	movwf	??_can_init^0,c
  1879   0013B6  5103               	movf	3,w,b	;volatile
  1880   0013B8  1804               	xorwf	??_can_init^0,w,c
  1881   0013BA  0BC0               	andlw	-64
  1882   0013BC  1804               	xorwf	??_can_init^0,w,c
  1883   0013BE  6F03               	movwf	3,b	;volatile
  1884   0013C0                     
  1885                           ; BSR set to: 55
  1886                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
  1887   0013C0  5001               	movf	can_init@timing^0,w,c
  1888   0013C2  6ED9               	movwf	fsr2l,c
  1889   0013C4  6ADA               	clrf	fsr2h,c
  1890   0013C6  0E06               	movlw	6
  1891   0013C8  26D9               	addwf	fsr2l,f,c
  1892   0013CA  50DF               	movf	indf2,w,c
  1893   0013CC  6E04               	movwf	??_can_init^0,c
  1894   0013CE  3204               	rrcf	??_can_init^0,f,c
  1895   0013D0  3204               	rrcf	??_can_init^0,f,c
  1896   0013D2  5104               	movf	4,w,b	;volatile
  1897   0013D4  1804               	xorwf	??_can_init^0,w,c
  1898   0013D6  0B7F               	andlw	-129
  1899   0013D8  1804               	xorwf	??_can_init^0,w,c
  1900   0013DA  6F04               	movwf	4,b	;volatile
  1901   0013DC                     
  1902                           ; BSR set to: 55
  1903                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
  1904   0013DC  5001               	movf	can_init@timing^0,w,c
  1905   0013DE  6ED9               	movwf	fsr2l,c
  1906   0013E0  6ADA               	clrf	fsr2h,c
  1907   0013E2  0E02               	movlw	2
  1908   0013E4  26D9               	addwf	fsr2l,f,c
  1909   0013E6  50DF               	movf	indf2,w,c
  1910   0013E8  6E04               	movwf	??_can_init^0,c
  1911   0013EA  3A04               	swapf	??_can_init^0,f,c
  1912   0013EC  4604               	rlncf	??_can_init^0,f,c
  1913   0013EE  4604               	rlncf	??_can_init^0,f,c
  1914   0013F0  5104               	movf	4,w,b	;volatile
  1915   0013F2  1804               	xorwf	??_can_init^0,w,c
  1916   0013F4  0BBF               	andlw	-65
  1917   0013F6  1804               	xorwf	??_can_init^0,w,c
  1918   0013F8  6F04               	movwf	4,b	;volatile
  1919   0013FA                     
  1920                           ; BSR set to: 55
  1921                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
  1922   0013FA  5001               	movf	can_init@timing^0,w,c
  1923   0013FC  6ED9               	movwf	fsr2l,c
  1924   0013FE  6ADA               	clrf	fsr2h,c
  1925   001400  0E03               	movlw	3
  1926   001402  26D9               	addwf	fsr2l,f,c
  1927   001404  50DF               	movf	indf2,w,c
  1928   001406  6E04               	movwf	??_can_init^0,c
  1929   001408  4604               	rlncf	??_can_init^0,f,c
  1930   00140A  4604               	rlncf	??_can_init^0,f,c
  1931   00140C  4604               	rlncf	??_can_init^0,f,c
  1932   00140E  5104               	movf	4,w,b	;volatile
  1933   001410  1804               	xorwf	??_can_init^0,w,c
  1934   001412  0BC7               	andlw	-57
  1935   001414  1804               	xorwf	??_can_init^0,w,c
  1936   001416  6F04               	movwf	4,b	;volatile
  1937   001418                     
  1938                           ; BSR set to: 55
  1939                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
  1940   001418  5001               	movf	can_init@timing^0,w,c
  1941   00141A  6ED9               	movwf	fsr2l,c
  1942   00141C  6ADA               	clrf	fsr2h,c
  1943   00141E  0E05               	movlw	5
  1944   001420  26D9               	addwf	fsr2l,f,c
  1945   001422  50DF               	movf	indf2,w,c
  1946   001424  6E04               	movwf	??_can_init^0,c
  1947   001426  5104               	movf	4,w,b	;volatile
  1948   001428  1804               	xorwf	??_can_init^0,w,c
  1949   00142A  0BF8               	andlw	-8
  1950   00142C  1804               	xorwf	??_can_init^0,w,c
  1951   00142E  6F04               	movwf	4,b	;volatile
  1952   001430                     
  1953                           ; BSR set to: 55
  1954                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
  1955   001430  5001               	movf	can_init@timing^0,w,c
  1956   001432  6ED9               	movwf	fsr2l,c
  1957   001434  6ADA               	clrf	fsr2h,c
  1958   001436  0E04               	movlw	4
  1959   001438  26D9               	addwf	fsr2l,f,c
  1960   00143A  50DF               	movf	indf2,w,c
  1961   00143C  6E04               	movwf	??_can_init^0,c
  1962   00143E  5105               	movf	5,w,b	;volatile
  1963   001440  1804               	xorwf	??_can_init^0,w,c
  1964   001442  0BF8               	andlw	-8
  1965   001444  1804               	xorwf	??_can_init^0,w,c
  1966   001446  6F05               	movwf	5,b	;volatile
  1967   001448                     
  1968                           ; BSR set to: 55
  1969                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
  1970   001448  8F05               	bsf	5,7,b	;volatile
  1971   00144A                     
  1972                           ; BSR set to: 55
  1973                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
  1974   00144A  9D05               	bcf	5,6,b	;volatile
  1975   00144C                     
  1976                           ; BSR set to: 55
  1977                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
  1978   00144C  0E00               	movlw	0
  1979   00144E  6FB8               	movwf	184,b	;volatile
  1980   001450                     
  1981                           ; BSR set to: 55
  1982                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
  1983   001450  0E00               	movlw	0
  1984   001452  6FB9               	movwf	185,b	;volatile
  1985   001454                     
  1986                           ; BSR set to: 55
  1987                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
  1988   001454  0E00               	movlw	0
  1989   001456  6FBC               	movwf	188,b	;volatile
  1990   001458                     
  1991                           ; BSR set to: 55
  1992                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
  1993   001458  0E00               	movlw	0
  1994   00145A  6FBD               	movwf	189,b	;volatile
  1995   00145C                     
  1996                           ; BSR set to: 55
  1997                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
  1998   00145C  8A80               	bsf	128,5,c	;volatile
  1999   00145E                     
  2000                           ; BSR set to: 55
  2001                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
  2002   00145E  8C80               	bsf	128,6,c	;volatile
  2003   001460                     
  2004                           ; BSR set to: 55
  2005                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
  2006   001460  8480               	bsf	128,2,c	;volatile
  2007   001462                     
  2008                           ; BSR set to: 55
  2009                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
  2010   001462  0139               	movlb	57	; () banked
  2011   001464  8F95               	bsf	149,7,b	;volatile
  2012   001466                     
  2013                           ; BSR set to: 57
  2014                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
  2015   001466  9D95               	bcf	149,6,b	;volatile
  2016   001468                     
  2017                           ; BSR set to: 57
  2018                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
  2019   001468  8B95               	bsf	149,5,b	;volatile
  2020   00146A                     
  2021                           ; BSR set to: 57
  2022                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
  2023   00146A  9995               	bcf	149,4,b	;volatile
  2024   00146C                     
  2025                           ; BSR set to: 57
  2026                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
  2027   00146C  9795               	bcf	149,3,b	;volatile
  2028   00146E                     
  2029                           ; BSR set to: 57
  2030                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
  2031   00146E  9595               	bcf	149,2,b	;volatile
  2032   001470                     
  2033                           ; BSR set to: 57
  2034                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
  2035   001470  8395               	bsf	149,1,b	;volatile
  2036   001472                     
  2037                           ; BSR set to: 57
  2038                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
  2039   001472  8195               	bsf	149,0,b	;volatile
  2040   001474                     
  2041                           ; BSR set to: 57
  2042                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
  2043   001474  0E1F               	movlw	-225
  2044   001476  168F               	andwf	143,f,c	;volatile
  2045   001478                     l3271:
  2046   001478  388E               	swapf	142,w,c	;volatile
  2047   00147A  32E8               	rrcf	wreg,f,c
  2048   00147C  0B07               	andlw	7
  2049   00147E  0900               	iorlw	0
  2050   001480  A4D8               	btfss	status,2,c
  2051   001482  EF45  F00A         	goto	u2051
  2052   001486  EF47  F00A         	goto	u2050
  2053   00148A                     u2051:
  2054   00148A  EF3C  F00A         	goto	l3271
  2055   00148E                     u2050:
  2056   00148E  0012               	return		;funcret
  2057   001490                     __end_of_can_init:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _can_generate_timing_params *****************
  2061 ;; Defined at:
  2062 ;;		line 7 in file "canlib/util/timing_util.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  can_frequenc    4    0[COMRAM] unsigned long 
  2065 ;;  timing          1    4[COMRAM] PTR struct .
  2066 ;;		 -> CAN_Init@can_setup(7), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      _Bool 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        9 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_CAN_Init
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text17
  2092   001002                     __ptext17:
  2093                           	callstack 0
  2094   001002                     _can_generate_timing_params:
  2095                           	callstack 28
  2096   001002                     
  2097                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
  2098   001002  EF8F  F008         	goto	l3177
  2099   001006                     l3127:
  2100                           
  2101                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
  2102   001006  5005               	movf	can_generate_timing_params@timing^0,w,c
  2103   001008  6ED9               	movwf	fsr2l,c
  2104   00100A  6ADA               	clrf	fsr2h,c
  2105   00100C  0E07               	movlw	7
  2106   00100E  6EDF               	movwf	indf2,c
  2107   001010                     
  2108                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
  2109   001010  5005               	movf	can_generate_timing_params@timing^0,w,c
  2110   001012  6ED9               	movwf	fsr2l,c
  2111   001014  6ADA               	clrf	fsr2h,c
  2112   001016  0E01               	movlw	1
  2113   001018  26D9               	addwf	fsr2l,f,c
  2114   00101A  0E03               	movlw	3
  2115   00101C  6EDF               	movwf	indf2,c
  2116   00101E                     
  2117                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
  2118   00101E  5005               	movf	can_generate_timing_params@timing^0,w,c
  2119   001020  6ED9               	movwf	fsr2l,c
  2120   001022  6ADA               	clrf	fsr2h,c
  2121   001024  0E06               	movlw	6
  2122   001026  26D9               	addwf	fsr2l,f,c
  2123   001028  0E01               	movlw	1
  2124   00102A  6EDF               	movwf	indf2,c
  2125   00102C                     
  2126                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
  2127   00102C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2128   00102E  6ED9               	movwf	fsr2l,c
  2129   001030  6ADA               	clrf	fsr2h,c
  2130   001032  0E02               	movlw	2
  2131   001034  26D9               	addwf	fsr2l,f,c
  2132   001036  6ADF               	clrf	indf2,c
  2133   001038                     
  2134                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
  2135   001038  5005               	movf	can_generate_timing_params@timing^0,w,c
  2136   00103A  6ED9               	movwf	fsr2l,c
  2137   00103C  6ADA               	clrf	fsr2h,c
  2138   00103E  0E03               	movlw	3
  2139   001040  26D9               	addwf	fsr2l,f,c
  2140   001042  0E04               	movlw	4
  2141   001044  6EDF               	movwf	indf2,c
  2142   001046                     
  2143                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
  2144   001046  5005               	movf	can_generate_timing_params@timing^0,w,c
  2145   001048  6ED9               	movwf	fsr2l,c
  2146   00104A  6ADA               	clrf	fsr2h,c
  2147   00104C  0E05               	movlw	5
  2148   00104E  26D9               	addwf	fsr2l,f,c
  2149   001050  6ADF               	clrf	indf2,c
  2150   001052                     
  2151                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
  2152   001052  5005               	movf	can_generate_timing_params@timing^0,w,c
  2153   001054  6ED9               	movwf	fsr2l,c
  2154   001056  6ADA               	clrf	fsr2h,c
  2155   001058  0E04               	movlw	4
  2156   00105A  26D9               	addwf	fsr2l,f,c
  2157   00105C  0E04               	movlw	4
  2158   00105E  6EDF               	movwf	indf2,c
  2159   001060  EFDE  F008         	goto	l391
  2160   001064                     l3143:
  2161                           
  2162                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
  2163   001064  5005               	movf	can_generate_timing_params@timing^0,w,c
  2164   001066  6ED9               	movwf	fsr2l,c
  2165   001068  6ADA               	clrf	fsr2h,c
  2166   00106A  0E01               	movlw	1
  2167   00106C  6EDF               	movwf	indf2,c
  2168   00106E                     
  2169                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
  2170   00106E  5005               	movf	can_generate_timing_params@timing^0,w,c
  2171   001070  6ED9               	movwf	fsr2l,c
  2172   001072  6ADA               	clrf	fsr2h,c
  2173   001074  0E01               	movlw	1
  2174   001076  26D9               	addwf	fsr2l,f,c
  2175   001078  0E03               	movlw	3
  2176   00107A  6EDF               	movwf	indf2,c
  2177   00107C                     
  2178                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
  2179   00107C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2180   00107E  6ED9               	movwf	fsr2l,c
  2181   001080  6ADA               	clrf	fsr2h,c
  2182   001082  0E06               	movlw	6
  2183   001084  26D9               	addwf	fsr2l,f,c
  2184   001086  0E01               	movlw	1
  2185   001088  6EDF               	movwf	indf2,c
  2186   00108A                     
  2187                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
  2188   00108A  5005               	movf	can_generate_timing_params@timing^0,w,c
  2189   00108C  6ED9               	movwf	fsr2l,c
  2190   00108E  6ADA               	clrf	fsr2h,c
  2191   001090  0E02               	movlw	2
  2192   001092  26D9               	addwf	fsr2l,f,c
  2193   001094  6ADF               	clrf	indf2,c
  2194   001096                     
  2195                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
  2196   001096  5005               	movf	can_generate_timing_params@timing^0,w,c
  2197   001098  6ED9               	movwf	fsr2l,c
  2198   00109A  6ADA               	clrf	fsr2h,c
  2199   00109C  0E03               	movlw	3
  2200   00109E  26D9               	addwf	fsr2l,f,c
  2201   0010A0  0E04               	movlw	4
  2202   0010A2  6EDF               	movwf	indf2,c
  2203   0010A4                     
  2204                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
  2205   0010A4  5005               	movf	can_generate_timing_params@timing^0,w,c
  2206   0010A6  6ED9               	movwf	fsr2l,c
  2207   0010A8  6ADA               	clrf	fsr2h,c
  2208   0010AA  0E05               	movlw	5
  2209   0010AC  26D9               	addwf	fsr2l,f,c
  2210   0010AE  6ADF               	clrf	indf2,c
  2211   0010B0                     
  2212                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
  2213   0010B0  5005               	movf	can_generate_timing_params@timing^0,w,c
  2214   0010B2  6ED9               	movwf	fsr2l,c
  2215   0010B4  6ADA               	clrf	fsr2h,c
  2216   0010B6  0E04               	movlw	4
  2217   0010B8  26D9               	addwf	fsr2l,f,c
  2218   0010BA  0E04               	movlw	4
  2219   0010BC  6EDF               	movwf	indf2,c
  2220   0010BE  EFDE  F008         	goto	l391
  2221   0010C2                     l3159:
  2222                           
  2223                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
  2224   0010C2  5005               	movf	can_generate_timing_params@timing^0,w,c
  2225   0010C4  6ED9               	movwf	fsr2l,c
  2226   0010C6  6ADA               	clrf	fsr2h,c
  2227   0010C8  6ADF               	clrf	indf2,c
  2228   0010CA                     
  2229                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
  2230   0010CA  5005               	movf	can_generate_timing_params@timing^0,w,c
  2231   0010CC  6ED9               	movwf	fsr2l,c
  2232   0010CE  6ADA               	clrf	fsr2h,c
  2233   0010D0  0E01               	movlw	1
  2234   0010D2  26D9               	addwf	fsr2l,f,c
  2235   0010D4  0E03               	movlw	3
  2236   0010D6  6EDF               	movwf	indf2,c
  2237   0010D8                     
  2238                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
  2239   0010D8  5005               	movf	can_generate_timing_params@timing^0,w,c
  2240   0010DA  6ED9               	movwf	fsr2l,c
  2241   0010DC  6ADA               	clrf	fsr2h,c
  2242   0010DE  0E06               	movlw	6
  2243   0010E0  26D9               	addwf	fsr2l,f,c
  2244   0010E2  0E01               	movlw	1
  2245   0010E4  6EDF               	movwf	indf2,c
  2246   0010E6                     
  2247                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
  2248   0010E6  5005               	movf	can_generate_timing_params@timing^0,w,c
  2249   0010E8  6ED9               	movwf	fsr2l,c
  2250   0010EA  6ADA               	clrf	fsr2h,c
  2251   0010EC  0E02               	movlw	2
  2252   0010EE  26D9               	addwf	fsr2l,f,c
  2253   0010F0  6ADF               	clrf	indf2,c
  2254   0010F2                     
  2255                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
  2256   0010F2  5005               	movf	can_generate_timing_params@timing^0,w,c
  2257   0010F4  6ED9               	movwf	fsr2l,c
  2258   0010F6  6ADA               	clrf	fsr2h,c
  2259   0010F8  0E03               	movlw	3
  2260   0010FA  26D9               	addwf	fsr2l,f,c
  2261   0010FC  0E04               	movlw	4
  2262   0010FE  6EDF               	movwf	indf2,c
  2263   001100                     
  2264                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
  2265   001100  5005               	movf	can_generate_timing_params@timing^0,w,c
  2266   001102  6ED9               	movwf	fsr2l,c
  2267   001104  6ADA               	clrf	fsr2h,c
  2268   001106  0E05               	movlw	5
  2269   001108  26D9               	addwf	fsr2l,f,c
  2270   00110A  6ADF               	clrf	indf2,c
  2271   00110C                     
  2272                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
  2273   00110C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2274   00110E  6ED9               	movwf	fsr2l,c
  2275   001110  6ADA               	clrf	fsr2h,c
  2276   001112  0E04               	movlw	4
  2277   001114  26D9               	addwf	fsr2l,f,c
  2278   001116  0E04               	movlw	4
  2279   001118  6EDF               	movwf	indf2,c
  2280   00111A  EFDE  F008         	goto	l391
  2281   00111E                     l3177:
  2282   00111E  C001  F006         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
  2283   001122  C002  F007         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
  2284   001126  C003  F008         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
  2285   00112A  C004  F009         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 2, Range of values is 0 to 2
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            7     4 (average)
  2293                           ;	Chosen strategy is simple_byte
  2294   00112E  5009               	movf	(??_can_generate_timing_params+3)^0,w,c
  2295   001130  0A00               	xorlw	0	; case 0
  2296   001132  B4D8               	btfsc	status,2,c
  2297   001134  EFCC  F008         	goto	l4119
  2298   001138  0A02               	xorlw	2	; case 2
  2299   00113A  B4D8               	btfsc	status,2,c
  2300   00113C  EFD7  F008         	goto	l4121
  2301   001140  EFDE  F008         	goto	l391
  2302   001144                     l4113:
  2303                           
  2304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2305                           ; Switch size 1, requested type "simple"
  2306                           ; Number of cases is 1, Range of values is 141 to 141
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte            4     3 (average)
  2310                           ;	Chosen strategy is simple_byte
  2311   001144  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2312   001146  0A8D               	xorlw	141	; case 141
  2313   001148  B4D8               	btfsc	status,2,c
  2314   00114A  EFA9  F008         	goto	l4123
  2315   00114E  EFDE  F008         	goto	l391
  2316   001152                     l4123:
  2317                           
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 1, Range of values is 128 to 128
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte            4     3 (average)
  2323                           ;	Chosen strategy is simple_byte
  2324   001152  5006               	movf	??_can_generate_timing_params^0,w,c
  2325   001154  0A80               	xorlw	128	; case 128
  2326   001156  B4D8               	btfsc	status,2,c
  2327   001158  EF61  F008         	goto	l3159
  2328   00115C  EFDE  F008         	goto	l391
  2329   001160                     l4115:
  2330                           
  2331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 1, Range of values is 27 to 27
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte            4     3 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338   001160  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2339   001162  0A1B               	xorlw	27	; case 27
  2340   001164  B4D8               	btfsc	status,2,c
  2341   001166  EFB7  F008         	goto	l4125
  2342   00116A  EFDE  F008         	goto	l391
  2343   00116E                     l4125:
  2344                           
  2345                           ; Switch size 1, requested type "simple"
  2346                           ; Number of cases is 1, Range of values is 0 to 0
  2347                           ; switch strategies available:
  2348                           ; Name         Instructions Cycles
  2349                           ; simple_byte            4     3 (average)
  2350                           ;	Chosen strategy is simple_byte
  2351   00116E  5006               	movf	??_can_generate_timing_params^0,w,c
  2352   001170  0A00               	xorlw	0	; case 0
  2353   001172  B4D8               	btfsc	status,2,c
  2354   001174  EF32  F008         	goto	l3143
  2355   001178  EFDE  F008         	goto	l391
  2356   00117C                     l4117:
  2357                           
  2358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 1, Range of values is 108 to 108
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte            4     3 (average)
  2364                           ;	Chosen strategy is simple_byte
  2365   00117C  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2366   00117E  0A6C               	xorlw	108	; case 108
  2367   001180  B4D8               	btfsc	status,2,c
  2368   001182  EFC5  F008         	goto	l4127
  2369   001186  EFDE  F008         	goto	l391
  2370   00118A                     l4127:
  2371                           
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   00118A  5006               	movf	??_can_generate_timing_params^0,w,c
  2379   00118C  0A00               	xorlw	0	; case 0
  2380   00118E  B4D8               	btfsc	status,2,c
  2381   001190  EF03  F008         	goto	l3127
  2382   001194  EFDE  F008         	goto	l391
  2383   001198                     l4119:
  2384                           
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 2, Range of values is 91 to 183
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte            7     4 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391   001198  5008               	movf	(??_can_generate_timing_params+2)^0,w,c
  2392   00119A  0A5B               	xorlw	91	; case 91
  2393   00119C  B4D8               	btfsc	status,2,c
  2394   00119E  EFA2  F008         	goto	l4113
  2395   0011A2  0AEC               	xorlw	236	; case 183
  2396   0011A4  B4D8               	btfsc	status,2,c
  2397   0011A6  EFB0  F008         	goto	l4115
  2398   0011AA  EFDE  F008         	goto	l391
  2399   0011AE                     l4121:
  2400                           
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 220 to 220
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ;	Chosen strategy is simple_byte
  2407   0011AE  5008               	movf	(??_can_generate_timing_params+2)^0,w,c
  2408   0011B0  0ADC               	xorlw	220	; case 220
  2409   0011B2  B4D8               	btfsc	status,2,c
  2410   0011B4  EFBE  F008         	goto	l4117
  2411   0011B8  EFDE  F008         	goto	l391
  2412   0011BC                     l391:
  2413   0011BC  0012               	return		;funcret
  2414   0011BE                     __end_of_can_generate_timing_params:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _ADC_Init *****************
  2418 ;; Defined at:
  2419 ;;		line 12 in file "adc.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_Board_Init
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text18
  2447   00187E                     __ptext18:
  2448                           	callstack 0
  2449   00187E                     _ADC_Init:
  2450                           	callstack 29
  2451   00187E                     
  2452                           ;adc.c: 13:     ADCON0bits.FM = 1;
  2453   00187E  013E               	movlb	62	; () banked
  2454   001880  51F8               	movf	248,w,b	;volatile
  2455   001882  0BF3               	andlw	-13
  2456   001884  0904               	iorlw	4
  2457   001886  6FF8               	movwf	248,b	;volatile
  2458   001888                     
  2459                           ; BSR set to: 62
  2460                           ;adc.c: 14:     ADCON0bits.CS = 1;
  2461   001888  89F8               	bsf	248,4,b	;volatile
  2462                           
  2463                           ;adc.c: 15:     ADPCH = 0x00;
  2464   00188A  0E00               	movlw	0
  2465   00188C  6FF1               	movwf	241,b	;volatile
  2466   00188E                     
  2467                           ; BSR set to: 62
  2468                           ;adc.c: 16:     TRISAbits.TRISA0 = 1;
  2469   00188E  80C2               	bsf	194,0,c	;volatile
  2470   001890                     
  2471                           ; BSR set to: 62
  2472                           ;adc.c: 17:     ANSELAbits.ANSELA0 = 1;
  2473   001890  013A               	movlb	58	; () banked
  2474   001892  8140               	bsf	64,0,b	;volatile
  2475   001894                     
  2476                           ; BSR set to: 58
  2477                           ;adc.c: 18:     ADCON0bits.ON = 1;
  2478   001894  013E               	movlb	62	; () banked
  2479   001896  8FF8               	bsf	248,7,b	;volatile
  2480   001898                     
  2481                           ; BSR set to: 62
  2482   001898  0012               	return		;funcret
  2483   00189A                     __end_of_ADC_Init:
  2484                           	callstack 0
  2485                           
  2486                           	psect	smallconst
  2487   001000                     __psmallconst:
  2488                           	callstack 0
  2489   001000  00                 	db	0
  2490   001001  00                 	db	0	; dummy byte at the end
  2491   000000                     
  2492                           	psect	rparam
  2493   000000                     
  2494                           	psect	config
  2495                           
  2496                           ;Config register CONFIG1L @ 0x300000
  2497                           ;	External Oscillator Selection
  2498                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2499                           ;	Reset Oscillator Selection
  2500                           ;	RSTOSC = 0x7, unprogrammed default
  2501   300000                     	org	3145728
  2502   300000  FA                 	db	250
  2503                           
  2504                           ;Config register CONFIG1H @ 0x300001
  2505                           ;	unspecified, using default values
  2506                           ;	Clock out Enable bit
  2507                           ;	CLKOUTEN = 0x1, unprogrammed default
  2508                           ;	PRLOCKED One-Way Set Enable bit
  2509                           ;	PR1WAY = 0x1, unprogrammed default
  2510                           ;	Clock Switch Enable bit
  2511                           ;	CSWEN = 0x1, unprogrammed default
  2512                           ;	Fail-Safe Clock Monitor Enable bit
  2513                           ;	FCMEN = 0x1, unprogrammed default
  2514   300001                     	org	3145729
  2515   300001  FF                 	db	255
  2516                           
  2517                           ;Config register CONFIG3L @ 0x300004
  2518                           ;	WDT Period selection bits
  2519                           ;	WDTCPS = 0x1F, unprogrammed default
  2520                           ;	WDT operating mode
  2521                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2522   300004                     	org	3145732
  2523   300004  9F                 	db	159
  2524                           
  2525                           ;Config register CONFIG3H @ 0x300005
  2526                           ;	unspecified, using default values
  2527                           ;	WDT Window Select bits
  2528                           ;	WDTCWS = 0x7, unprogrammed default
  2529                           ;	WDT input clock selector
  2530                           ;	WDTCCS = 0x7, unprogrammed default
  2531   300005                     	org	3145733
  2532   300005  FF                 	db	255
  2533                           tosu	equ	0x3FFF
  2534                           tosh	equ	0x3FFE
  2535                           tosl	equ	0x3FFD
  2536                           stkptr	equ	0x3FFC
  2537                           pclatu	equ	0x3FFB
  2538                           pclath	equ	0x3FFA
  2539                           pcl	equ	0x3FF9
  2540                           tblptru	equ	0x3FF8
  2541                           tblptrh	equ	0x3FF7
  2542                           tblptrl	equ	0x3FF6
  2543                           tablat	equ	0x3FF5
  2544                           prodh	equ	0x3FF4
  2545                           prodl	equ	0x3FF3
  2546                           indf0	equ	0x3FEF
  2547                           postinc0	equ	0x3FEE
  2548                           postdec0	equ	0x3FED
  2549                           preinc0	equ	0x3FEC
  2550                           plusw0	equ	0x3FEB
  2551                           fsr0h	equ	0x3FEA
  2552                           fsr0l	equ	0x3FE9
  2553                           wreg	equ	0x3FE8
  2554                           indf1	equ	0x3FE7
  2555                           postinc1	equ	0x3FE6
  2556                           postdec1	equ	0x3FE5
  2557                           preinc1	equ	0x3FE4
  2558                           plusw1	equ	0x3FE3
  2559                           fsr1h	equ	0x3FE2
  2560                           fsr1l	equ	0x3FE1
  2561                           bsr	equ	0x3FE0
  2562                           indf2	equ	0x3FDF
  2563                           postinc2	equ	0x3FDE
  2564                           postdec2	equ	0x3FDD
  2565                           preinc2	equ	0x3FDC
  2566                           plusw2	equ	0x3FDB
  2567                           fsr2h	equ	0x3FDA
  2568                           fsr2l	equ	0x3FD9
  2569                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         232
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      79
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    build_debug_raw_msg@data	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    build_debug_raw_msg@output	PTR struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), 

    can_generate_timing_params@timing	PTR struct . size(1) Largest target is 7
		 -> CAN_Init@can_setup(COMRAM[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(1) Largest target is 7
		 -> CAN_Init@can_setup(COMRAM[7]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), 

    can_send@message	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    can_send_fp$0	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> bob$data(COMRAM[8]), can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), main@bob(COMRAM[13]), 
		 -> tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@d1	PTR void  size(2) Largest target is 200
		 -> bob$data(COMRAM[8]), can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), main@bob(COMRAM[13]), 
		 -> tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 65535
		 -> main@bob(COMRAM[13]), ROM(CODE[65535]), RXB0D0(BITBIGSFRlhhhllhlh[1]), RXB1D0(BITBIGSFRllhhhlhhl[1]), 
		 -> tx_pool(BANK1[200]), txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@s1	PTR const void  size(3) Largest target is 65535
		 -> main@bob(COMRAM[13]), ROM(CODE[65535]), RXB0D0(BITBIGSFRlhhhllhlh[1]), RXB1D0(BITBIGSFRllhhhlhhl[1]), 
		 -> tx_pool(BANK1[200]), txb_heartbeat@msg_sent(COMRAM[13]), 

    NULL$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), 

    S1434$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    S1512$0$0	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    S1512$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1512$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    sp__memcpy	PTR void  size(2) Largest target is 200
		 -> bob$data(COMRAM[8]), can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1419(COMRAM[13]), main@bob(COMRAM[13]), 
		 -> tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), txb_heartbeat@msg_sent(COMRAM[13]), 

    srb_init@ctx	PTR struct . size(1) Largest target is 11
		 -> buf(COMRAM[10]), buf@can_tx_buffer$F1528(COMRAM[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_init@pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    write_timestamp_2bytes@output	PTR struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _can_send->_memcpy
    _build_debug_raw_msg->_memcpy
    _Board_Init->_CAN_Init
    _CAN_Init->_txb_init
    _txb_init->_srb_init
    _srb_init->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   10767
                                             29 COMRAM    18    18      0
                         _Board_Init
                _build_debug_raw_msg
                           _can_send
                           _read_ADC
                    _toggle_LED_Blue
                   _toggle_LED_Green
                     _toggle_LED_Red
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Red                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Green                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Blue                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _can_send                                            10     9      1    2316
                                             13 COMRAM    10     9      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _build_debug_raw_msg                                 15     9      6    5651
                                             13 COMRAM    15     9      6
                             _memcpy
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (2) _write_timestamp_2bytes                               3     0      3    3280
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              13     6      7    1967
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (1) _Board_Init                                           0     0      0    2599
                           _ADC_Init
                           _CAN_Init
                          _LEDs_Init
                           _Osc_Init
 ---------------------------------------------------------------------------------
 (2) _Osc_Init                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LEDs_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Init                                             7     7      0    2569
                                             22 COMRAM     7     7      0
         _can_generate_timing_params
                           _can_init
                           _txb_init
 ---------------------------------------------------------------------------------
 (3) _txb_init                                             8     0      8    1512
                                             14 COMRAM     8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (4) _srb_init                                             7     0      7    1120
                                              7 COMRAM     7     0      7
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _can_init                                             4     1      3     328
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _can_generate_timing_params                           9     4      5     636
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_Init
     _ADC_Init
     _CAN_Init
       _can_generate_timing_params
       _can_init
       _txb_init
         _srb_init
           ___lwdiv
     _LEDs_Init
     _Osc_Init
   _build_debug_raw_msg
     _memcpy
     _write_timestamp_2bytes
   _can_send
     _memcpy
   _read_ADC
   _toggle_LED_Blue
   _toggle_LED_Green
   _toggle_LED_Red

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    222      0       0      48        0.0%
BITBIGSFRlhhhll    1D5      0       0      45        0.0%
BITBIGSFRllhhhl    19C      0       0      56        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBIGSFRllhl       B2      0       0      60        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhhl       8C      0       0      49        0.0%
BITBIGSFRlhhhll     87      0       0      43        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      4F       1       83.2%
BITBIGSFRllhhhh     35      0       0      52        0.0%
BITBIGSFRllhhhh     33      0       0      53        0.0%
BITBIGSFRlhll       2E      0       0      51        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhll     26      0       0      41        0.0%
BITBIGSFRllhhhl     22      0       0      58        0.0%
BITBIGSFRlhlh       1F      0       0      50        0.0%
BITBIGSFRllhhhh      F      0       0      54        0.0%
BITBIGSFRllhhhl      9      0       0      57        0.0%
BITBIGSFRlhhhll      7      0       0      42        0.0%
BITBIGSFRlhhhlh      7      0       0      40        0.0%
BITBIGSFRhl          7      0       0      38        0.0%
BITBIGSFRlhhhll      6      0       0      44        0.0%
BITBIGSFRhhl         5      0       0      37        0.0%
BITBIGSFRllhhl       2      0       0      59        0.0%
BITBIGSFRlhhhll      2      0       0      47        0.0%
BITBIGSFRlll         2      0       0      61        0.0%
BITBIGSFRllhhhl      1      0       0      55        0.0%
BITBIGSFRlhhhll      1      0       0      46        0.0%
BITBIGSFRlhhhh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117      62        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Mar 24 10:53:50 2025

                           srb_init@pool 0009                                       l56 179A  
                                     l64 1542                                       l81 18C6  
                                     l59 18AA                                       l84 18D4  
                                     l78 18DC                                       l87 18B8  
                                     u60 17B0                                       u61 17AC  
                                     u70 17C2                                       u71 17BE  
                                     u80 17E4                                       u81 17E0  
                        ?_toggle_LED_Red 0001    timer0_handle_interrupt@internal_count 003A  
                                    l102 1898                                      l105 181C  
                                    l108 183E                                      l250 148E  
                                    l340 1816                                      l254 135E  
                                    l360 173C                                      l391 11BC  
                                    l447 185E                                      l481 153C  
                                    l753 17E4                                      l747 17A2  
                                    u145 18C4                                      u146 18C6  
                                    u155 18D2                                      u156 18D4  
                                    u165 18B6                                      u166 18B8  
                       ?_toggle_LED_Blue 0001                                      _buf 0046  
                                    _ctx 0034                                      wreg 3FE8  
              build_debug_raw_msg@output 0013                 ??_write_timestamp_2bytes 0004  
                                   l3101 1684                                     l1254 16CC  
                                   l3111 16B8                                     l3103 1692  
                                   l1247 16C4                                     l3113 16BE  
                                   l3105 1698                                     l3121 1720  
                                   l1433 1658                                     l3131 101E  
                                   l3211 1360                                     l3107 16AE  
                                   l3123 172E                                     l3115 16CE  
                                   l3133 102C                                     l3125 1002  
                                   l3221 138E                                     l3213 1368  
                                   l3109 16B6                                     l3117 16E0  
                                   l3301 163E                                     l3151 1096  
                                   l3143 1064                                     l3135 1038  
                                   l3127 1006                                     l3231 1418  
                                   l3223 13AC                                     l3215 1370  
                                   l3119 16F6                                     l3311 18A6  
                                   l3303 1840                                     l1711 18AE  
                                   l4113 1144                                     l4121 11AE  
                                   l3161 10CA                                     l3153 10A4  
                                   l3145 106E                                     l3137 1046  
                                   l3129 1010                                     l3241 1450  
                                   l3233 1430                                     l3225 13C0  
                                   l3217 1386                                     l1633 18D6  
                                   l3305 189A                                     l3321 1492  
                                   l3313 1818                                     l1651 1888  
                                   l4115 1160                                     l4123 1152  
                                   l3171 110C                                     l3163 10D8  
                                   l3155 10B0                                     l3147 107C  
                                   l3139 1052                                     l3251 1460  
                                   l3243 1454                                     l3235 1448  
                                   l3227 13DC                                     l3219 138A  
                                   l1635 179C                                     l3307 189E  
                                   l3331 152E                                     l3315 182A  
                                   l1653 188E                                     l4117 117C  
                                   l4125 116E                                     l3165 10E6  
                                   l3149 108A                                     l3261 146C  
                                   l3253 1462                                     l3245 1458  
                                   l3237 144A                                     l3229 13FA  
                                   l3093 165A                                     l1645 17CA  
                                   l1637 17B0                                     l3309 18A2  
                                   l3325 14A6                                     l3341 11EC  
                                   l3317 1836                                     l1709 18CA  
                                   l1655 1890                                     l4127 118A  
                                   l4119 1198                                     l3167 10F2  
                                   l3159 10C2                                     l3271 1478  
                                   l3263 146E                                     l3255 1466  
                                   l3247 145C                                     l3239 144C  
                                   l3095 1662                                     l1647 17CE  
                                   l1639 17C2                                     l3327 14F8  
                                   l3351 1300                                     l3343 120E  
                                   l3335 11BE                                     l1657 1894  
                                   l1649 187E                                     l3169 1100  
                                   l3177 111E                                     l3265 1470  
                                   l3257 1468                                     l3249 145E  
                                   l3097 1674                                     l3273 17E6  
                                   l3281 1746                                     l3329 1508  
                                   l3353 130A                                     l3345 1212  
                                   l3361 153E                                     l3267 1472  
                                   l3259 146A                                     l3099 167C  
                                   l3275 17F6                                     l3283 1748  
                                   l3291 15D8                                     l3355 130C  
                                   l3347 124A                                     l3339 11D2  
                                   l3371 156C                                     l3363 1544  
                                   l3269 1474                                     l3285 174E  
                                   l3277 173E                                     l3293 15F0  
                                   l3357 1324                                     l3349 12D0  
                                   l3381 15A0                                     l3373 1572  
                                   l3365 154A                                     l3287 1766  
                                   l3279 1740                                     l3295 161C  
                                   l3359 135A                                     l3383 15A0  
                                   l3375 1578                                     l3367 1550  
                                   l3289 1776                                     l3297 1628  
                                   l3385 15A0                                     l3377 157E  
                                   l3369 1556                                     l3299 163A  
                                   l1699 18BC                                     l3387 15C8  
                                   l3379 1594                                     u2010 1674  
                                   u2011 1670                                     u2020 1692  
                                   u2021 168E                                     u2030 16AE  
                                   u2110 11CE                                     u2031 16AA  
                                   u2111 11CA                                     u2040 1386  
                                   u2120 11EC                                     u2041 1382  
                                   u2105 14B2                                     u2121 11E8  
                                   u2050 148E                                     u2130 120A  
                                   u2051 148A                                     u2131 1206  
                                   u2060 161A                                     u2140 1240  
                                   u2070 1658                                     u2150 1278  
                                   u2071 1654                                     u3007 1560  
                                   u2160 12B0                                     u2080 182A  
                                   u2145 1236                                     u2081 1826  
                                   u3017 1588                                     u2090 14A2  
                                   u2067 160C                                     u2091 149E  
                                   u2155 126E                                     u2165 12A6  
                                   u2175 12BE                        ?_toggle_LED_Green 0001  
                                   _main 153E                                     fsr0h 3FEA  
                                   indf0 3FEF                                     fsr2h 3FDA  
                                   fsr0l 3FE9                                     indf2 3FDF  
                                   fsr2l 3FD9                         __end_of_ADC_Init 189A  
                                   start FFFC                       ??_toggle_LED_Green 0001  
                       __end_of_CAN_Init 179C                               _Board_Init 189A  
                         _SPI1STATUSbits 3D17                             ___param_bank 0000  
                  toggle_LED_Blue@LED_On 0001                     toggle_LED_Red@LED_On 0001  
                                  ?_main 0001                                    _ADPCH 3EF1  
                                  _LATA2 1FDD2                                    _LATA3 1FDD3  
                                  _LATA4 1FDD4                                    _LATA5 1FDD5  
                        __end_of___lwdiv 16CE                  build_debug_raw_msg@data 0010  
                build_debug_raw_msg@prio 001C                                    tablat 3FF5  
                                  status 3FD8                          __initialization 1860  
                           __end_of_main 15D8         can_generate_timing_params@timing 0005  
                       __end_of_Osc_Init 17E6                                   ??_main 001E  
                          __activetblptr 0003                        srb_init@pool_size 000B  
                                 _ADRESH 3EF0                                   _ADRESL 3EEF  
                      __end_of_LEDs_Init 18DE                                   _RC1PPS 3A11  
                                 _RXB0D0 3F86                                   _RXB1D0 37F6  
                                 _TXB0D0 37E6                         __end_of_can_init 1490  
                                 _TRISC0 1FE20                                   _TRISC1 1FE21  
                       __end_of_can_send 1360                           can_init@timing 0001  
                            ?_Board_Init 0001  can_generate_timing_params@can_frequency 0001  
                              ??___lwdiv 0005                         __end_of_read_ADC 1840  
                                 _memcpy 15D8                                   clear_0 1866  
                                 clear_1 1872             build_debug_raw_msg@timestamp 000E  
                                 isa$std 0001                             _can_send_rdy 0000  
                              ?_ADC_Init 0001                             __mediumconst 0000  
                       __end_of_srb_init 173E                                   tblptrh 3FF7  
                                 tblptrl 3FF6                                   tblptru 3FF8  
                              ?_CAN_Init 0001                         __end_of_txb_init 1818  
                             __accesstop 0060                  __end_of__initialization 1878  
                          ___rparam_used 0001                         ??_toggle_LED_Red 0001  
                         __pcstackCOMRAM 0001                   _write_timestamp_2bytes 1840  
                           txb_init@pool 000F                           read_ADC@result 0005  
                             ??_ADC_Init 0001                               ??_CAN_Init 0017  
                             _can_rcv_cb 0038                               __pbssBANK1 0100  
                              ?_Osc_Init 0001                  _buf@can_tx_buffer$F1528 003C  
                                ?_memcpy 0001                                  _ANSELC0 1D300  
                 toggle_LED_Green@LED_On 0001                                ?_can_init 0001  
                              ?_can_send 000E                                  _OSCCON1 39D9  
                                _OSCCON2 39DA                                  _SPI1RXB 3D10  
                                _SPI1TXB 3D11                                ?_read_ADC 0001  
                             ??_Osc_Init 0001                                  __Hparam 0000  
                                __Lparam 0000                                ?_srb_init 0008  
                                ___lwdiv 165A                             __psmallconst 1000  
                              ?_txb_init 000F                                  __pcinit 1860  
                                __ramtop 1000                                  __ptext0 153E  
                                __ptext1 18AC                                  __ptext2 18BA  
                                __ptext3 18C8                                  __ptext4 1818  
                                __ptext5 11BE                                  __ptext6 1490  
                                __ptext7 1840                                  __ptext8 15D8  
                                __ptext9 189A                               ??_can_init 0004  
                             ??_can_send 000F                                  main@bob 0023  
                                _tx_pool 0100                     end_of_initialization 1878  
                             ??_read_ADC 0003                                  memcpy@d 000B  
                                memcpy@n 0006                                  memcpy@s 0008  
                              _LEDs_Init 18D6                      _build_debug_raw_msg 1490  
                           ??_Board_Init 001E                               ??_srb_init 000F  
                                postdec2 3FDD                                  postinc0 3FEE  
                                postinc2 3FDE                               ??_txb_init 0017  
                              _PORTCbits 3FCC                     ?_build_debug_raw_msg 000E  
                              _TRISAbits 3FC2                                _TRISCbits 3FC4  
                            srb_init@ctx 0008                       __end_of_Board_Init 18AC  
                             ?_LEDs_Init 0001                               main@curVal 0021  
                ?_write_timestamp_2bytes 0001                        ??_toggle_LED_Blue 0001  
                        can_send@message 000E                         _toggle_LED_Green 18BA  
                  ??_build_debug_raw_msg 0014                              _ECANCONbits 3F91  
                         __end_of_memcpy 165A                                Osc_Init@i 0001  
                    start_initialization 1860                              _CANSTATbits 3F8E  
         __end_of_write_timestamp_2bytes 1860       __end_of_can_generate_timing_params 11BE  
             _can_generate_timing_params 1002                                 ??_memcpy 0008  
                            __pbssCOMRAM 0030                              _BRGCON1bits 3703  
                            _BRGCON2bits 3704                              _BRGCON3bits 3705  
                            ??_LEDs_Init 0001                         ___lwdiv@dividend 0001  
                               ?___lwdiv 0001                              __smallconst 1000  
                            _COMSTATbits 3F90                                 _ADC_Init 187E  
                               _CANRXPPS 3AED                                 _CAN_Init 173E  
                       ___lwdiv@quotient 0005                                 _LATAbits 3FBA  
                               _PIE3bits 3993                                 _PIE5bits 3995  
                           _SPI1CON0bits 3D14                             _SPI1CON1bits 3D15  
                           _SPI1CON2bits 3D16                                 _SPI1BAUD 3D19  
                               _PIR5bits 39A5                                 _RXB0EIDH 3F83  
                               _RXB0EIDL 3F84                                 _RXB1EIDH 37F3  
                               _RXB1EIDL 37F4                                 _RXB0SIDH 3F81  
                               _RXB0SIDL 3F82                                 _RXB1SIDH 37F1  
                               _RXB1SIDL 37F2                                 _TXB0EIDH 37E3  
                               _TXB0EIDL 37E4                                 _TXB0SIDH 37E1  
                               _TXB0SIDL 37E2                                 _RXM0SIDH 37B8  
                               _RXM0SIDL 37B9                                 _RXM1SIDH 37BC  
                               _RXM1SIDL 37BD                          _can_msg_handler 0000  
                             _ADCON0bits 3EF8                     srb_init@element_size 000D  
                        _toggle_LED_Blue 18C8                              _INTCON0bits 3FD2  
                             _CANCONbits 3F8F                 __end_of_toggle_LED_Green 18C8  
                               _Osc_Init 179C                                 __Hrparam 0000  
                              memcpy@tmp 000D                                 __Lrparam 0000  
                             _CIOCONbits 3700                        CAN_Init@can_setup 0017  
           ??_can_generate_timing_params 0006                               _ANSELAbits 3A40  
                      txb_init@pool_size 0011                                 _can_init 1360  
                               _can_send 11BE                               _T0CON0bits 3FB8  
                             _T0CON1bits 3FB9                          ___lwdiv@divisor 0003  
                        ___lwdiv@counter 0007                                 __ptext10 179C  
                               __ptext11 18D6                                 __ptext12 173E  
                               __ptext13 17E6                                 __ptext14 16CE  
                               __ptext15 165A                                 __ptext16 1360  
                               __ptext17 1002                                 __ptext18 187E  
                            _OSCCON3bits 39DB                                 _read_ADC 1818  
        write_timestamp_2bytes@timestamp 0001              __end_of_build_debug_raw_msg 153E  
                               isa$xinst 0000                                 _srb_init 16CE  
               can_init@receive_callback 0002              ?_can_generate_timing_params 0001  
                               _txb_init 17E6                           _millis_counter 0030  
                            _RXB0DLCbits 3F85                           _toggle_LED_Red 18AC  
                            _RXB1DLCbits 37F5                  __end_of_toggle_LED_Blue 18D6  
                            _RXB0CONbits 3F80                              _RXB1CONbits 37F0  
                               memcpy@d1 0001                                 memcpy@s1 0003  
                   txb_init@can_tx_ready 0015                              _TXB0DLCbits 37E5  
                            _TXB0CONbits 37E0                      txb_init@can_send_fp 0013  
                          _overflow_flag 003B                   __end_of_toggle_LED_Red 18BA  
           write_timestamp_2bytes@output 0003  
