

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 21 17:06:46 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 12/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F26K83 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68 ;; Function _can_msg_handler is unused but had its address taken
    69   000000                     
    70 ;; Function _can_send_rdy is unused but had its address taken
    71   000000                     _OSCCON2	set	14810
    72   000000                     _OSCCON3bits	set	14811
    73   000000                     _T0CON1bits	set	16313
    74   000000                     _COMSTATbits	set	16272
    75   000000                     _ECANCONbits	set	16273
    76   000000                     _LATAbits	set	16314
    77   000000                     _TRISCbits	set	16324
    78   000000                     _LATA5	set	130517
    79   000000                     _LATA4	set	130516
    80   000000                     _LATA3	set	130515
    81   000000                     _TRISC0	set	130592
    82   000000                     _BRGCON1bits	set	14083
    83   000000                     _CIOCONbits	set	14080
    84   000000                     _RC1PPS	set	14865
    85   000000                     _TRISC1	set	130593
    86   000000                     _PORTCbits	set	16332
    87   000000                     _ANSELAbits	set	14912
    88   000000                     _ANSELC0	set	119552
    89   000000                     _CANRXPPS	set	15085
    90   000000                     _SPI1RXB	set	15632
    91   000000                     _SPI1CON0bits	set	15636
    92   000000                     _ADRESL	set	16111
    93   000000                     _ADRESH	set	16112
    94   000000                     _ADPCH	set	16113
    95   000000                     _ADCON0bits	set	16120
    96   000000                     _TRISAbits	set	16322
    97   000000                     _LATA2	set	130514
    98   000000                     _RXB0CONbits	set	16256
    99   000000                     _CANSTATbits	set	16270
   100   000000                     _CANCONbits	set	16271
   101   000000                     _SPI1STATUSbits	set	15639
   102   000000                     _SPI1BAUD	set	15641
   103   000000                     _SPI1CON2bits	set	15638
   104   000000                     _SPI1CON1bits	set	15637
   105   000000                     _SPI1TXB	set	15633
   106   000000                     _INTCON0bits	set	16338
   107   000000                     _T0CON0bits	set	16312
   108   000000                     _RXM0SIDH	set	14264
   109   000000                     _BRGCON3bits	set	14085
   110   000000                     _BRGCON2bits	set	14084
   111   000000                     _RXM1SIDH	set	14268
   112   000000                     _RXM0SIDL	set	14265
   113   000000                     _TXB0CONbits	set	14304
   114   000000                     _PIE5bits	set	14741
   115   000000                     _RXM1SIDL	set	14269
   116   000000                     _RXB0DLCbits	set	16261
   117   000000                     _RXB0EIDL	set	16260
   118   000000                     _RXB0EIDH	set	16259
   119   000000                     _RXB0SIDL	set	16258
   120   000000                     _RXB0SIDH	set	16257
   121   000000                     _RXB0D0	set	16262
   122   000000                     _PIR5bits	set	14757
   123   000000                     _RXB1CONbits	set	14320
   124   000000                     _RXB1SIDH	set	14321
   125   000000                     _TXB0DLCbits	set	14309
   126   000000                     _TXB0EIDL	set	14308
   127   000000                     _TXB0EIDH	set	14307
   128   000000                     _TXB0SIDL	set	14306
   129   000000                     _TXB0SIDH	set	14305
   130   000000                     _TXB0D0	set	14310
   131   000000                     _OSCCON1	set	14809
   132   000000                     _PIE3bits	set	14739
   133   000000                     _RXB1DLCbits	set	14325
   134   000000                     _RXB1EIDL	set	14324
   135   000000                     _RXB1EIDH	set	14323
   136   000000                     _RXB1SIDL	set	14322
   137   000000                     _RXB1D0	set	14326
   138                           
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142   0017FC                     __pcinit:
   143                           	callstack 0
   144   0017FC                     start_initialization:
   145                           	callstack 0
   146   0017FC                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Clear objects allocated to BANK1 (200 bytes)
   150   0017FC  EE00  F100         	lfsr	0,__pbssBANK1
   151   001800  0EC8               	movlw	200
   152   001802                     clear_0:
   153   001802  6AEE               	clrf	postinc0,c
   154   001804  06E8               	decf	wreg,f,c
   155   001806  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (32 bytes)
   158   001808  EE00  F02F         	lfsr	0,__pbssCOMRAM
   159   00180C  0E20               	movlw	32
   160   00180E                     clear_1:
   161   00180E  6AEE               	clrf	postinc0,c
   162   001810  06E8               	decf	wreg,f,c
   163   001812  E1FD               	bnz	clear_1
   164   001814                     end_of_initialization:
   165                           	callstack 0
   166   001814                     __end_of__initialization:
   167                           	callstack 0
   168   001814  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169   001816  6EF8               	movwf	tblptru,c
   170   001818  0100               	movlb	0
   171   00181A  EF9F  F00A         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174   00002F                     __pbssCOMRAM:
   175                           	callstack 0
   176   00002F                     _millis_counter:
   177                           	callstack 0
   178   00002F                     	ds	4
   179   000033                     _ctx:
   180                           	callstack 0
   181   000033                     	ds	4
   182   000037                     _can_rcv_cb:
   183                           	callstack 0
   184   000037                     	ds	2
   185   000039                     timer0_handle_interrupt@internal_count:
   186                           	callstack 0
   187   000039                     	ds	1
   188   00003A                     _overflow_flag:
   189                           	callstack 0
   190   00003A                     	ds	1
   191   00003B                     _buf@can_tx_buffer$F1555:
   192                           	callstack 0
   193   00003B                     	ds	10
   194   000045                     _buf:
   195                           	callstack 0
   196   000045                     	ds	10
   197                           
   198                           	psect	bssBANK1
   199   000100                     __pbssBANK1:
   200                           	callstack 0
   201   000100                     _tx_pool:
   202                           	callstack 0
   203   000100                     	ds	200
   204                           
   205                           	psect	cstackCOMRAM
   206   000001                     __pcstackCOMRAM:
   207                           	callstack 0
   208   000001                     ?_read_ADC:
   209                           	callstack 0
   210   000001                     ?___lwdiv:
   211                           	callstack 0
   212   000001                     toggle_LED_Green@LED_On:
   213                           	callstack 0
   214   000001                     toggle_LED_Blue@LED_On:
   215                           	callstack 0
   216   000001                     toggle_LED_Red@LED_On:
   217                           	callstack 0
   218   000001                     can_init@timing:
   219                           	callstack 0
   220   000001                     write_timestamp_2bytes@timestamp:
   221                           	callstack 0
   222   000001                     Osc_Init@i:
   223                           	callstack 0
   224   000001                     ___lwdiv@dividend:
   225                           	callstack 0
   226   000001                     memcpy@d1:
   227                           	callstack 0
   228   000001                     can_generate_timing_params@can_frequency:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x0
   232   000001                     	ds	1
   233   000002                     can_init@receive_callback:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x1
   237   000002                     	ds	1
   238   000003                     ??_read_ADC:
   239   000003                     write_timestamp_2bytes@output:
   240                           	callstack 0
   241   000003                     ___lwdiv@divisor:
   242                           	callstack 0
   243   000003                     memcpy@s1:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247   000003                     	ds	1
   248   000004                     ??_can_init:
   249   000004                     build_analog_data_msg@timestamp:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x3
   253   000004                     	ds	1
   254   000005                     can_generate_timing_params@timing:
   255                           	callstack 0
   256   000005                     read_ADC@result:
   257                           	callstack 0
   258   000005                     ___lwdiv@quotient:
   259                           	callstack 0
   260   000005                     memcpy@n:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264   000005                     	ds	1
   265   000006                     ??_can_generate_timing_params:
   266   000006                     build_analog_data_msg@sensor_id:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270   000006                     	ds	1
   271   000007                     ___lwdiv@counter:
   272                           	callstack 0
   273   000007                     build_analog_data_msg@sensor_data:
   274                           	callstack 0
   275   000007                     memcpy@d:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x6
   279   000007                     	ds	1
   280   000008                     srb_init@ctx:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x7
   284   000008                     	ds	1
   285   000009                     build_analog_data_msg@output:
   286                           	callstack 0
   287   000009                     srb_init@pool:
   288                           	callstack 0
   289   000009                     memcpy@s:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x8
   293   000009                     	ds	1
   294   00000A                     ??_build_analog_data_msg:
   295                           
   296                           ; 1 bytes @ 0x9
   297   00000A                     	ds	1
   298   00000B                     memcpy@tmp:
   299                           	callstack 0
   300   00000B                     srb_init@pool_size:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xA
   304   00000B                     	ds	1
   305   00000C                     can_send@message:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xB
   309   00000C                     	ds	1
   310   00000D                     ??_can_send:
   311   00000D                     srb_init@element_size:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xC
   315   00000D                     	ds	2
   316   00000F                     txb_init@pool:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xE
   320   00000F                     	ds	2
   321   000011                     txb_init@pool_size:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x10
   325   000011                     	ds	1
   326   000012                     build_analog_data_msg@prio:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x11
   330   000012                     	ds	1
   331   000013                     txb_init@can_send_fp:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x12
   335   000013                     	ds	2
   336   000015                     txb_init@can_tx_ready:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x14
   340   000015                     	ds	2
   341   000017                     CAN_Init@can_setup:
   342                           	callstack 0
   343                           
   344                           ; 7 bytes @ 0x16
   345   000017                     	ds	7
   346   00001E                     ??_main:
   347                           
   348                           ; 1 bytes @ 0x1D
   349   00001E                     	ds	2
   350   000020                     main@curVal:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x1F
   354   000020                     	ds	2
   355   000022                     main@bob:
   356                           	callstack 0
   357                           
   358                           ; 13 bytes @ 0x21
   359   000022                     	ds	13
   360                           
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 172 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  bob            13   33[COMRAM] struct .
   371 ;;  time            2    0        unsigned short 
   372 ;;  curVal          2   31[COMRAM] unsigned short 
   373 ;;  bobID           1    0        enum E22930
   374 ;;  bobPrio         1    0        enum E22794
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;Total ram usage:       17 bytes
   389 ;; Hardware stack levels required when called: 5
   390 ;; This function calls:
   391 ;;		_Board_Init
   392 ;;		_build_analog_data_msg
   393 ;;		_can_send
   394 ;;		_read_ADC
   395 ;;		_toggle_LED_Blue
   396 ;;		_toggle_LED_Green
   397 ;;		_toggle_LED_Red
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text0
   404   00153E                     __ptext0:
   405                           	callstack 0
   406   00153E                     _main:
   407                           	callstack 26
   408   00153E  EC2D  F00C         	call	_Board_Init	;wreg free
   409   001542                     l64:
   410   001542  0004               	clrwdt		;# 
   411   001544  0E01               	movlw	1
   412   001546  EC3D  F00C         	call	_toggle_LED_Green
   413   00154A  0E01               	movlw	1
   414   00154C  EC44  F00C         	call	_toggle_LED_Blue
   415   001550  0E01               	movlw	1
   416   001552  EC36  F00C         	call	_toggle_LED_Red
   417   001556  0E10               	movlw	16
   418   001558  6E1F               	movwf	(??_main+1)^0,c
   419   00155A  0E39               	movlw	57
   420   00155C  6E1E               	movwf	??_main^0,c
   421   00155E  0E0E               	movlw	14
   422   001560                     u2987:
   423   001560  2EE8               	decfsz	wreg,f,c
   424   001562  D7FE               	bra	u2987
   425   001564  2E1E               	decfsz	??_main^0,f,c
   426   001566  D7FC               	bra	u2987
   427   001568  2E1F               	decfsz	(??_main+1)^0,f,c
   428   00156A  D7FA               	bra	u2987
   429   00156C  0E10               	movlw	16
   430   00156E  6E1F               	movwf	(??_main+1)^0,c
   431   001570  0E39               	movlw	57
   432   001572  6E1E               	movwf	??_main^0,c
   433   001574  0E0E               	movlw	14
   434   001576                     u2997:
   435   001576  2EE8               	decfsz	wreg,f,c
   436   001578  D7FE               	bra	u2997
   437   00157A  2E1E               	decfsz	??_main^0,f,c
   438   00157C  D7FC               	bra	u2997
   439   00157E  2E1F               	decfsz	(??_main+1)^0,f,c
   440   001580  D7FA               	bra	u2997
   441   001582  ECEA  F00B         	call	_read_ADC	;wreg free
   442   001586  C001  F020         	movff	?_read_ADC,main@curVal
   443   00158A  C002  F021         	movff	?_read_ADC+1,main@curVal+1
   444   00158E  0E00               	movlw	0
   445   001590  6E05               	movwf	(build_analog_data_msg@timestamp+1)^0,c
   446   001592  0E00               	movlw	0
   447   001594  6E04               	movwf	build_analog_data_msg@timestamp^0,c
   448   001596  0E10               	movlw	16
   449   001598  6E06               	movwf	build_analog_data_msg@sensor_id^0,c
   450   00159A  C020  F007         	movff	main@curVal,build_analog_data_msg@sensor_data
   451   00159E  C021  F008         	movff	main@curVal+1,build_analog_data_msg@sensor_data+1
   452   0015A2  0E22               	movlw	low main@bob
   453   0015A4  6E09               	movwf	build_analog_data_msg@output^0,c
   454   0015A6  0E01               	movlw	1
   455   0015A8  EC44  F00A         	call	_build_analog_data_msg
   456   0015AC  0E22               	movlw	low main@bob
   457   0015AE  6E0C               	movwf	can_send@message^0,c
   458   0015B0  ECDF  F008         	call	_can_send	;wreg free
   459   0015B4  EFA1  F00A         	goto	l64
   460   0015B8  EFFE  F07F         	goto	start
   461   0015BC                     __end_of_main:
   462                           	callstack 0
   463                           
   464 ;; *************** function _toggle_LED_Red *****************
   465 ;; Defined at:
   466 ;;		line 25 in file "leds.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  LED_On          1    wreg     _Bool 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  LED_On          1    0[COMRAM] _Bool 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text1
   494   00186C                     __ptext1:
   495                           	callstack 0
   496   00186C                     _toggle_LED_Red:
   497                           	callstack 30
   498                           
   499                           ;incstack = 0
   500                           ;toggle_LED_Red@LED_On stored from wreg
   501   00186C  6E01               	movwf	toggle_LED_Red@LED_On^0,c
   502   00186E                     
   503                           ;leds.c: 26:     LATA4 = LED_On;
   504   00186E  B001               	btfsc	toggle_LED_Red@LED_On^0,0,c
   505   001870  D002               	bra	u155
   506   001872  98BA               	bcf	16314,4,c	;volatile
   507   001874  D001               	bra	u156
   508   001876                     u155:
   509   001876  88BA               	bsf	16314,4,c	;volatile
   510   001878                     u156:
   511   001878  0012               	return		;funcret
   512   00187A                     __end_of_toggle_LED_Red:
   513                           	callstack 0
   514                           
   515 ;; *************** function _toggle_LED_Green *****************
   516 ;; Defined at:
   517 ;;		line 17 in file "leds.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  LED_On          1    wreg     _Bool 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  LED_On          1    0[COMRAM] _Bool 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        1 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_main
   541 ;;		_can_msg_handler
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text2
   546   00187A                     __ptext2:
   547                           	callstack 0
   548   00187A                     _toggle_LED_Green:
   549                           	callstack 30
   550                           
   551                           ;incstack = 0
   552                           ;toggle_LED_Green@LED_On stored from wreg
   553   00187A  6E01               	movwf	toggle_LED_Green@LED_On^0,c
   554   00187C                     
   555                           ;leds.c: 18:     LATA2 = LED_On;
   556   00187C  B001               	btfsc	toggle_LED_Green@LED_On^0,0,c
   557   00187E  D002               	bra	u135
   558   001880  94BA               	bcf	16314,2,c	;volatile
   559   001882  D001               	bra	u136
   560   001884                     u135:
   561   001884  84BA               	bsf	16314,2,c	;volatile
   562   001886                     u136:
   563   001886  0012               	return		;funcret
   564   001888                     __end_of_toggle_LED_Green:
   565                           	callstack 0
   566                           
   567 ;; *************** function _toggle_LED_Blue *****************
   568 ;; Defined at:
   569 ;;		line 21 in file "leds.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  LED_On          1    wreg     _Bool 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  LED_On          1    0[COMRAM] _Bool 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text3
   597   001888                     __ptext3:
   598                           	callstack 0
   599   001888                     _toggle_LED_Blue:
   600                           	callstack 30
   601                           
   602                           ;incstack = 0
   603                           ;toggle_LED_Blue@LED_On stored from wreg
   604   001888  6E01               	movwf	toggle_LED_Blue@LED_On^0,c
   605   00188A                     
   606                           ;leds.c: 22:     LATA3 = LED_On;
   607   00188A  B001               	btfsc	toggle_LED_Blue@LED_On^0,0,c
   608   00188C  D002               	bra	u145
   609   00188E  96BA               	bcf	16314,3,c	;volatile
   610   001890  D001               	bra	u146
   611   001892                     u145:
   612   001892  86BA               	bsf	16314,3,c	;volatile
   613   001894                     u146:
   614   001894  0012               	return		;funcret
   615   001896                     __end_of_toggle_LED_Blue:
   616                           	callstack 0
   617                           
   618 ;; *************** function _read_ADC *****************
   619 ;; Defined at:
   620 ;;		line 21 in file "adc.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  result          2    4[COMRAM] unsigned short 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  2    0[COMRAM] unsigned short 
   627 ;; Registers used:
   628 ;;		wreg, status,2
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;Total ram usage:        6 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text4
   648   0017D4                     __ptext4:
   649                           	callstack 0
   650   0017D4                     _read_ADC:
   651                           	callstack 30
   652   0017D4                     
   653                           ;adc.c: 22:     ADCON0bits.GO = 1;
   654   0017D4  013E               	movlb	62	; () banked
   655   0017D6  81F8               	bsf	248,0,b	;volatile
   656   0017D8                     l105:
   657                           
   658                           ; BSR set to: 62
   659   0017D8  B1F8               	btfsc	248,0,b	;volatile
   660   0017DA  EFF1  F00B         	goto	u2061
   661   0017DE  EFF3  F00B         	goto	u2060
   662   0017E2                     u2061:
   663   0017E2  EFEC  F00B         	goto	l105
   664   0017E6                     u2060:
   665   0017E6                     
   666                           ; BSR set to: 62
   667                           ;adc.c: 24:     uint16_t result = ((uint16_t)ADRESH << 8) | ADRESL;
   668   0017E6  51F0               	movf	240,w,b	;volatile
   669   0017E8  6E03               	movwf	??_read_ADC^0,c
   670   0017EA  51EF               	movf	239,w,b	;volatile
   671   0017EC  6E05               	movwf	read_ADC@result^0,c
   672   0017EE  C003  F006         	movff	??_read_ADC,read_ADC@result+1
   673   0017F2                     
   674                           ; BSR set to: 62
   675                           ;adc.c: 26:     return result;
   676   0017F2  C005  F001         	movff	read_ADC@result,?_read_ADC
   677   0017F6  C006  F002         	movff	read_ADC@result+1,?_read_ADC+1
   678   0017FA                     
   679                           ; BSR set to: 62
   680   0017FA  0012               	return		;funcret
   681   0017FC                     __end_of_read_ADC:
   682                           	callstack 0
   683                           
   684 ;; *************** function _can_send *****************
   685 ;; Defined at:
   686 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  message         1   11[COMRAM] PTR const struct .
   689 ;;		 -> txb_heartbeat@msg_sent(13), main@bob(13), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:       10 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		_memcpy
   710 ;; This function is called by:
   711 ;;		_CAN_Init
   712 ;;		_main
   713 ;;		_txb_heartbeat
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text5
   718   0011BE                     __ptext5:
   719                           	callstack 0
   720   0011BE                     _can_send:
   721                           	callstack 29
   722   0011BE                     
   723                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
   724   0011BE  0137               	movlb	55	; () banked
   725   0011C0  A7E0               	btfss	224,3,b	;volatile
   726   0011C2  EFE5  F008         	goto	u2091
   727   0011C6  EFE7  F008         	goto	u2090
   728   0011CA                     u2091:
   729   0011CA  EFE9  F008         	goto	l3337
   730   0011CE                     u2090:
   731   0011CE  EFAB  F009         	goto	l254
   732   0011D2                     l3337:
   733                           
   734                           ; BSR set to: 55
   735                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x1FFFFFFF) {
   736   0011D2  500C               	movf	can_send@message^0,w,c
   737   0011D4  6ED9               	movwf	fsr2l,c
   738   0011D6  6ADA               	clrf	fsr2h,c
   739   0011D8  0E04               	movlw	4
   740   0011DA  26D9               	addwf	fsr2l,f,c
   741   0011DC  0E09               	movlw	9
   742   0011DE  60DF               	cpfslt	indf2,c
   743   0011E0  EFF4  F008         	goto	u2101
   744   0011E4  EFF6  F008         	goto	u2100
   745   0011E8                     u2101:
   746   0011E8  EFAB  F009         	goto	l254
   747   0011EC                     u2100:
   748   0011EC                     
   749                           ; BSR set to: 55
   750   0011EC  500C               	movf	can_send@message^0,w,c
   751   0011EE  6ED9               	movwf	fsr2l,c
   752   0011F0  6ADA               	clrf	fsr2h,c
   753   0011F2  52DE               	movf	postinc2,f,c
   754   0011F4  52DE               	movf	postinc2,f,c
   755   0011F6  52DE               	movf	postinc2,f,c
   756   0011F8  0E20               	movlw	32
   757   0011FA  5CDE               	subwf	postinc2,w,c
   758   0011FC  A0D8               	btfss	status,0,c
   759   0011FE  EF03  F009         	goto	u2111
   760   001202  EF05  F009         	goto	u2110
   761   001206                     u2111:
   762   001206  EF07  F009         	goto	l3341
   763   00120A                     u2110:
   764   00120A  EFAB  F009         	goto	l254
   765   00120E                     l3341:
   766                           
   767                           ; BSR set to: 55
   768                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
   769   00120E  0EFC               	movlw	-4
   770   001210  17E0               	andwf	224,f,b	;volatile
   771   001212                     
   772                           ; BSR set to: 55
   773                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = (message->sid >> 21);
   774   001212  500C               	movf	can_send@message^0,w,c
   775   001214  6ED9               	movwf	fsr2l,c
   776   001216  6ADA               	clrf	fsr2h,c
   777   001218  006F FF78  F00D    	movff	postinc2,??_can_send
   778   00121E  006F FF78  F00E    	movff	postinc2,??_can_send+1
   779   001224  006F FF78  F00F    	movff	postinc2,??_can_send+2
   780   00122A  006F FF78  F010    	movff	postinc2,??_can_send+3
   781   001230  0E16               	movlw	22
   782   001232  EF20  F009         	goto	u2120
   783   001236                     u2125:
   784   001236  90D8               	bcf	status,0,c
   785   001238  3210               	rrcf	(??_can_send+3)^0,f,c
   786   00123A  320F               	rrcf	(??_can_send+2)^0,f,c
   787   00123C  320E               	rrcf	(??_can_send+1)^0,f,c
   788   00123E  320D               	rrcf	??_can_send^0,f,c
   789   001240                     u2120:
   790   001240  2EE8               	decfsz	wreg,f,c
   791   001242  EF1B  F009         	goto	u2125
   792   001246  500D               	movf	??_can_send^0,w,c
   793   001248  6FE1               	movwf	225,b	;volatile
   794   00124A                     
   795                           ; BSR set to: 55
   796                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid >> 18) & 0x7) 
      +                          << 5) | (1 << 3) | ((message->sid >> 16) & 0x3);
   797   00124A  500C               	movf	can_send@message^0,w,c
   798   00124C  6ED9               	movwf	fsr2l,c
   799   00124E  6ADA               	clrf	fsr2h,c
   800   001250  006F FF78  F00D    	movff	postinc2,??_can_send
   801   001256  006F FF78  F00E    	movff	postinc2,??_can_send+1
   802   00125C  006F FF78  F00F    	movff	postinc2,??_can_send+2
   803   001262  006F FF78  F010    	movff	postinc2,??_can_send+3
   804   001268  0E11               	movlw	17
   805   00126A  EF3C  F009         	goto	u2130
   806   00126E                     u2135:
   807   00126E  90D8               	bcf	status,0,c
   808   001270  3210               	rrcf	(??_can_send+3)^0,f,c
   809   001272  320F               	rrcf	(??_can_send+2)^0,f,c
   810   001274  320E               	rrcf	(??_can_send+1)^0,f,c
   811   001276  320D               	rrcf	??_can_send^0,f,c
   812   001278                     u2130:
   813   001278  2EE8               	decfsz	wreg,f,c
   814   00127A  EF37  F009         	goto	u2135
   815   00127E  0E03               	movlw	3
   816   001280  160D               	andwf	??_can_send^0,f,c
   817   001282  500C               	movf	can_send@message^0,w,c
   818   001284  6ED9               	movwf	fsr2l,c
   819   001286  6ADA               	clrf	fsr2h,c
   820   001288  006F FF78  F011    	movff	postinc2,??_can_send+4
   821   00128E  006F FF78  F012    	movff	postinc2,??_can_send+5
   822   001294  006F FF78  F013    	movff	postinc2,??_can_send+6
   823   00129A  006F FF78  F014    	movff	postinc2,??_can_send+7
   824   0012A0  0E13               	movlw	19
   825   0012A2  EF58  F009         	goto	u2140
   826   0012A6                     u2145:
   827   0012A6  90D8               	bcf	status,0,c
   828   0012A8  3214               	rrcf	(??_can_send+7)^0,f,c
   829   0012AA  3213               	rrcf	(??_can_send+6)^0,f,c
   830   0012AC  3212               	rrcf	(??_can_send+5)^0,f,c
   831   0012AE  3211               	rrcf	(??_can_send+4)^0,f,c
   832   0012B0                     u2140:
   833   0012B0  2EE8               	decfsz	wreg,f,c
   834   0012B2  EF53  F009         	goto	u2145
   835   0012B6  0E07               	movlw	7
   836   0012B8  1611               	andwf	(??_can_send+4)^0,f,c
   837   0012BA  0E05               	movlw	5
   838   0012BC  6E15               	movwf	(??_can_send+8)^0,c
   839   0012BE                     u2155:
   840   0012BE  90D8               	bcf	status,0,c
   841   0012C0  3611               	rlcf	(??_can_send+4)^0,f,c
   842   0012C2  2E15               	decfsz	(??_can_send+8)^0,f,c
   843   0012C4  EF5F  F009         	goto	u2155
   844   0012C8  5011               	movf	(??_can_send+4)^0,w,c
   845   0012CA  100D               	iorwf	??_can_send^0,w,c
   846   0012CC  0908               	iorlw	8
   847   0012CE  6FE2               	movwf	226,b	;volatile
   848   0012D0                     
   849                           ; BSR set to: 55
   850                           ;canlib/pic18f26k83/pic18f26k83_can.c: 100:     TXB0EIDH = message->sid >> 8;
   851   0012D0  500C               	movf	can_send@message^0,w,c
   852   0012D2  6ED9               	movwf	fsr2l,c
   853   0012D4  6ADA               	clrf	fsr2h,c
   854   0012D6  006F FF78  F00D    	movff	postinc2,??_can_send
   855   0012DC  006F FF78  F00E    	movff	postinc2,??_can_send+1
   856   0012E2  006F FF78  F00F    	movff	postinc2,??_can_send+2
   857   0012E8  006F FF78  F010    	movff	postinc2,??_can_send+3
   858   0012EE  C00E  F00D         	movff	??_can_send+1,??_can_send
   859   0012F2  C00F  F00E         	movff	??_can_send+2,??_can_send+1
   860   0012F6  C010  F00F         	movff	??_can_send+3,??_can_send+2
   861   0012FA  6A10               	clrf	(??_can_send+3)^0,c
   862   0012FC  500D               	movf	??_can_send^0,w,c
   863   0012FE  6FE3               	movwf	227,b	;volatile
   864   001300                     
   865                           ; BSR set to: 55
   866                           ;canlib/pic18f26k83/pic18f26k83_can.c: 101:     TXB0EIDL = message->sid;
   867   001300  500C               	movf	can_send@message^0,w,c
   868   001302  6ED9               	movwf	fsr2l,c
   869   001304  6ADA               	clrf	fsr2h,c
   870   001306  50DF               	movf	indf2,w,c
   871   001308  6FE4               	movwf	228,b	;volatile
   872   00130A                     
   873                           ; BSR set to: 55
   874                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.TXRTR = 0;
   875   00130A  9DE5               	bcf	229,6,b	;volatile
   876   00130C                     
   877                           ; BSR set to: 55
   878                           ;canlib/pic18f26k83/pic18f26k83_can.c: 106:     TXB0DLCbits.DLC = message->data_len;
   879   00130C  500C               	movf	can_send@message^0,w,c
   880   00130E  6ED9               	movwf	fsr2l,c
   881   001310  6ADA               	clrf	fsr2h,c
   882   001312  0E04               	movlw	4
   883   001314  26D9               	addwf	fsr2l,f,c
   884   001316  50DF               	movf	indf2,w,c
   885   001318  6E0D               	movwf	??_can_send^0,c
   886   00131A  51E5               	movf	229,w,b	;volatile
   887   00131C  180D               	xorwf	??_can_send^0,w,c
   888   00131E  0BF0               	andlw	-16
   889   001320  180D               	xorwf	??_can_send^0,w,c
   890   001322  6FE5               	movwf	229,b	;volatile
   891   001324                     
   892                           ; BSR set to: 55
   893                           ;canlib/pic18f26k83/pic18f26k83_can.c: 110:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
   894   001324  0EE6               	movlw	230
   895   001326  6E01               	movwf	memcpy@d1^0,c
   896   001328  0E37               	movlw	55
   897   00132A  6E02               	movwf	(memcpy@d1+1)^0,c
   898   00132C  C00C  F00D         	movff	can_send@message,??_can_send
   899   001330  0E05               	movlw	5
   900   001332  260D               	addwf	??_can_send^0,f,c
   901   001334  C00D  F003         	movff	??_can_send,memcpy@s1
   902   001338  6A04               	clrf	(memcpy@s1+1)^0,c
   903   00133A  500C               	movf	can_send@message^0,w,c
   904   00133C  6ED9               	movwf	fsr2l,c
   905   00133E  6ADA               	clrf	fsr2h,c
   906   001340  0E04               	movlw	4
   907   001342  26D9               	addwf	fsr2l,f,c
   908   001344  50DF               	movf	indf2,w,c
   909   001346  6E0E               	movwf	(??_can_send+1)^0,c
   910   001348  500E               	movf	(??_can_send+1)^0,w,c
   911   00134A  6E05               	movwf	memcpy@n^0,c
   912   00134C  6A06               	clrf	(memcpy@n+1)^0,c
   913   00134E  EC7F  F00B         	call	_memcpy	;wreg free
   914   001352                     
   915                           ;canlib/pic18f26k83/pic18f26k83_can.c: 113:     TXB0CONbits.TXREQ = 1;
   916   001352  0137               	movlb	55	; () banked
   917   001354  87E0               	bsf	224,3,b	;volatile
   918   001356                     l254:
   919                           
   920                           ; BSR set to: 55
   921   001356  0012               	return		;funcret
   922   001358                     __end_of_can_send:
   923                           	callstack 0
   924                           
   925 ;; *************** function _memcpy *****************
   926 ;; Defined at:
   927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  d1              2    0[COMRAM] PTR void 
   930 ;;		 -> txb_heartbeat@msg_sent(13), can_handle_interrupt@rcvd_msg_1446(13), can_handle_interrupt@rcvd_msg(13), TXB0D0(1)
      +, 
   931 ;;		 -> tx_pool(200), 
   932 ;;  s1              2    2[COMRAM] PTR const void 
   933 ;;		 -> txb_heartbeat@msg_sent(13), RXB1D0(1), RXB0D0(1), main@bob(13), 
   934 ;;		 -> tx_pool(200), 
   935 ;;  n               2    4[COMRAM] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  s               2    8[COMRAM] PTR const unsigned char 
   938 ;;		 -> txb_heartbeat@msg_sent(13), RXB1D0(1), RXB0D0(1), main@bob(13), 
   939 ;;		 -> tx_pool(200), 
   940 ;;  d               2    6[COMRAM] PTR unsigned char 
   941 ;;		 -> txb_heartbeat@msg_sent(13), can_handle_interrupt@rcvd_msg_1446(13), can_handle_interrupt@rcvd_msg(13), TXB0D0(1)
      +, 
   942 ;;		 -> tx_pool(200), 
   943 ;;  tmp             1   10[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[COMRAM] PTR void 
   946 ;; Registers used:
   947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:       11 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_can_send
   963 ;;		_can_handle_interrupt
   964 ;;		_srb_push
   965 ;;		_srb_pop
   966 ;;		_srb_peek
   967 ;;		_build_debug_raw_msg
   968 ;;		_get_debug_raw_data
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text6
   973   0016FE                     __ptext6:
   974                           	callstack 0
   975   0016FE                     _memcpy:
   976                           	callstack 29
   977   0016FE  C003  F009         	movff	memcpy@s1,memcpy@s
   978   001702  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
   979   001706  C001  F007         	movff	memcpy@d1,memcpy@d
   980   00170A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
   981   00170E  EF9E  F00B         	goto	l3295
   982   001712                     l3287:
   983   001712  0060  F027  FFD9   	movff	memcpy@s,fsr2l
   984   001718  0060  F02B  FFDA   	movff	memcpy@s+1,fsr2h
   985   00171E  50DF               	movf	indf2,w,c
   986   001720  6E0B               	movwf	memcpy@tmp^0,c
   987   001722  4A09               	infsnz	memcpy@s^0,f,c
   988   001724  2A0A               	incf	(memcpy@s+1)^0,f,c
   989   001726  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
   990   00172C  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
   991   001732  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
   992   001738  4A07               	infsnz	memcpy@d^0,f,c
   993   00173A  2A08               	incf	(memcpy@d+1)^0,f,c
   994   00173C                     l3295:
   995   00173C  0605               	decf	memcpy@n^0,f,c
   996   00173E  A0D8               	btfss	status,0,c
   997   001740  0606               	decf	(memcpy@n+1)^0,f,c
   998   001742  2805               	incf	memcpy@n^0,w,c
   999   001744  E106               	bnz	u2051
  1000   001746  2806               	incf	(memcpy@n+1)^0,w,c
  1001   001748  A4D8               	btfss	status,2,c
  1002   00174A  EFA9  F00B         	goto	u2051
  1003   00174E  EFAB  F00B         	goto	u2050
  1004   001752                     u2051:
  1005   001752  EF89  F00B         	goto	l3287
  1006   001756                     u2050:
  1007   001756  0012               	return		;funcret
  1008   001758                     __end_of_memcpy:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _build_analog_data_msg *****************
  1012 ;; Defined at:
  1013 ;;		line 100 in file "canlib/message/msg_sensor.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  prio            1    wreg     enum E51
  1016 ;;  timestamp       2    3[COMRAM] unsigned short 
  1017 ;;  sensor_id       1    5[COMRAM] enum E187
  1018 ;;  sensor_data     2    6[COMRAM] unsigned short 
  1019 ;;  output          1    8[COMRAM] PTR struct .
  1020 ;;		 -> main@bob(13), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  prio            1   17[COMRAM] enum E51
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      _Bool 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:       15 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 1
  1039 ;; This function calls:
  1040 ;;		_write_timestamp_2bytes
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047   001488                     __ptext7:
  1048                           	callstack 0
  1049   001488                     _build_analog_data_msg:
  1050                           	callstack 29
  1051                           
  1052                           ;incstack = 0
  1053                           ;build_analog_data_msg@prio stored from wreg
  1054   001488  6E12               	movwf	build_analog_data_msg@prio^0,c
  1055   00148A                     
  1056                           ;canlib/message/msg_sensor.c: 101:     can_msg_prio_t prio, uint16_t timestamp, can_anal
      +                          og_sensor_id_t sensor_id, uint16_t sensor_data,;canlib/message/msg_sensor.c: 102:     ca
      +                          n_msg_t *output;canlib/message/msg_sensor.c: 103: ) {;canlib/message/msg_sensor.c: 104: 
      +                              if (!output) {
  1057   00148A  5009               	movf	build_analog_data_msg@output^0,w,c
  1058   00148C  A4D8               	btfss	status,2,c
  1059   00148E  EF4B  F00A         	goto	u2071
  1060   001492  EF4D  F00A         	goto	u2070
  1061   001496                     u2071:
  1062   001496  EF4F  F00A         	goto	l3319
  1063   00149A                     u2070:
  1064   00149A  EF9E  F00A         	goto	l645
  1065   00149E                     l3319:
  1066                           
  1067                           ;canlib/message/msg_sensor.c: 108:     output->sid = (((uint32_t)prio << 27) | ((uint32_
      +                          t)MSG_SENSOR_ANALOG << 18) | ((uint32_t)BOARD_TYPE_ID_TELEMETRY << 8) | BOARD_INST_ID_GE
      +                          NERIC);
  1068   00149E  C012  F00A         	movff	build_analog_data_msg@prio,??_build_analog_data_msg
  1069   0014A2  6A0B               	clrf	(??_build_analog_data_msg+1)^0,c
  1070   0014A4  6A0C               	clrf	(??_build_analog_data_msg+2)^0,c
  1071   0014A6  6A0D               	clrf	(??_build_analog_data_msg+3)^0,c
  1072   0014A8  0E1B               	movlw	27
  1073   0014AA                     u2085:
  1074   0014AA  90D8               	bcf	status,0,c
  1075   0014AC  360A               	rlcf	??_build_analog_data_msg^0,f,c
  1076   0014AE  360B               	rlcf	(??_build_analog_data_msg+1)^0,f,c
  1077   0014B0  360C               	rlcf	(??_build_analog_data_msg+2)^0,f,c
  1078   0014B2  360D               	rlcf	(??_build_analog_data_msg+3)^0,f,c
  1079   0014B4  2EE8               	decfsz	wreg,f,c
  1080   0014B6  EF55  F00A         	goto	u2085
  1081   0014BA  0E01               	movlw	1
  1082   0014BC  100A               	iorwf	??_build_analog_data_msg^0,w,c
  1083   0014BE  6E0E               	movwf	(??_build_analog_data_msg+4)^0,c
  1084   0014C0  0E07               	movlw	7
  1085   0014C2  100B               	iorwf	(??_build_analog_data_msg+1)^0,w,c
  1086   0014C4  6E0F               	movwf	(??_build_analog_data_msg+5)^0,c
  1087   0014C6  0E4C               	movlw	76
  1088   0014C8  100C               	iorwf	(??_build_analog_data_msg+2)^0,w,c
  1089   0014CA  6E10               	movwf	(??_build_analog_data_msg+6)^0,c
  1090   0014CC  0E00               	movlw	0
  1091   0014CE  100D               	iorwf	(??_build_analog_data_msg+3)^0,w,c
  1092   0014D0  6E11               	movwf	(??_build_analog_data_msg+7)^0,c
  1093   0014D2  5009               	movf	build_analog_data_msg@output^0,w,c
  1094   0014D4  6ED9               	movwf	fsr2l,c
  1095   0014D6  6ADA               	clrf	fsr2h,c
  1096   0014D8  0060  F03B  FFDE   	movff	??_build_analog_data_msg+4,postinc2
  1097   0014DE  0060  F03F  FFDE   	movff	??_build_analog_data_msg+5,postinc2
  1098   0014E4  0060  F043  FFDE   	movff	??_build_analog_data_msg+6,postinc2
  1099   0014EA  0060  F047  FFDE   	movff	??_build_analog_data_msg+7,postinc2
  1100   0014F0                     
  1101                           ;canlib/message/msg_sensor.c: 109:     write_timestamp_2bytes(timestamp, output);
  1102   0014F0  C004  F001         	movff	build_analog_data_msg@timestamp,write_timestamp_2bytes@timestamp
  1103   0014F4  C005  F002         	movff	build_analog_data_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
  1104   0014F8  C009  F003         	movff	build_analog_data_msg@output,write_timestamp_2bytes@output
  1105   0014FC  EC0F  F00C         	call	_write_timestamp_2bytes	;wreg free
  1106   001500                     
  1107                           ;canlib/message/msg_sensor.c: 111:     output->data[2] = (uint8_t)sensor_id;
  1108   001500  5009               	movf	build_analog_data_msg@output^0,w,c
  1109   001502  6ED9               	movwf	fsr2l,c
  1110   001504  6ADA               	clrf	fsr2h,c
  1111   001506  0E07               	movlw	7
  1112   001508  26D9               	addwf	fsr2l,f,c
  1113   00150A  0060  F01B  FFDF   	movff	build_analog_data_msg@sensor_id,indf2
  1114   001510                     
  1115                           ;canlib/message/msg_sensor.c: 112:     output->data[3] = (sensor_data >> 8) & 0xff;
  1116   001510  5009               	movf	build_analog_data_msg@output^0,w,c
  1117   001512  6ED9               	movwf	fsr2l,c
  1118   001514  6ADA               	clrf	fsr2h,c
  1119   001516  0E08               	movlw	8
  1120   001518  26D9               	addwf	fsr2l,f,c
  1121   00151A  5008               	movf	(build_analog_data_msg@sensor_data+1)^0,w,c
  1122   00151C  6EDF               	movwf	indf2,c
  1123   00151E                     
  1124                           ;canlib/message/msg_sensor.c: 113:     output->data[4] = (sensor_data >> 0) & 0xff;
  1125   00151E  5009               	movf	build_analog_data_msg@output^0,w,c
  1126   001520  6ED9               	movwf	fsr2l,c
  1127   001522  6ADA               	clrf	fsr2h,c
  1128   001524  0E09               	movlw	9
  1129   001526  26D9               	addwf	fsr2l,f,c
  1130   001528  0060  F01F  FFDF   	movff	build_analog_data_msg@sensor_data,indf2
  1131   00152E                     
  1132                           ;canlib/message/msg_sensor.c: 115:     output->data_len = 5;
  1133   00152E  5009               	movf	build_analog_data_msg@output^0,w,c
  1134   001530  6ED9               	movwf	fsr2l,c
  1135   001532  6ADA               	clrf	fsr2h,c
  1136   001534  0E04               	movlw	4
  1137   001536  26D9               	addwf	fsr2l,f,c
  1138   001538  0E05               	movlw	5
  1139   00153A  6EDF               	movwf	indf2,c
  1140   00153C                     l645:
  1141   00153C  0012               	return		;funcret
  1142   00153E                     __end_of_build_analog_data_msg:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _write_timestamp_2bytes *****************
  1146 ;; Defined at:
  1147 ;;		line 9 in file "canlib/message/msg_common.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  timestamp       2    0[COMRAM] unsigned short 
  1150 ;;  output          1    2[COMRAM] PTR struct .
  1151 ;;		 -> main@bob(13), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        3 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_build_analog_data_msg
  1173 ;;		_build_actuator_cmd_msg
  1174 ;;		_build_actuator_analog_cmd_msg
  1175 ;;		_build_actuator_status_msg
  1176 ;;		_build_general_board_status_msg
  1177 ;;		_build_reset_msg
  1178 ;;		_build_debug_raw_msg
  1179 ;;		_build_config_set_msg
  1180 ;;		_build_config_status_msg
  1181 ;;		_build_gps_time_msg
  1182 ;;		_build_gps_lat_msg
  1183 ;;		_build_gps_lon_msg
  1184 ;;		_build_gps_alt_msg
  1185 ;;		_build_gps_info_msg
  1186 ;;		_build_alt_arm_cmd_msg
  1187 ;;		_build_alt_arm_status_msg
  1188 ;;		_build_temp_data_msg
  1189 ;;		_build_altitude_data_msg
  1190 ;;		_build_imu_data_msg
  1191 ;;		_build_mag_data_msg
  1192 ;;		_build_state_est_data_msg
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text8
  1197   00181E                     __ptext8:
  1198                           	callstack 0
  1199   00181E                     _write_timestamp_2bytes:
  1200                           	callstack 29
  1201   00181E                     
  1202                           ;canlib/message/msg_common.c: 10:     output->data[0] = (timestamp >> 8) & 0xff;
  1203   00181E  5003               	movf	write_timestamp_2bytes@output^0,w,c
  1204   001820  6ED9               	movwf	fsr2l,c
  1205   001822  6ADA               	clrf	fsr2h,c
  1206   001824  0E05               	movlw	5
  1207   001826  26D9               	addwf	fsr2l,f,c
  1208   001828  5002               	movf	(write_timestamp_2bytes@timestamp+1)^0,w,c
  1209   00182A  6EDF               	movwf	indf2,c
  1210                           
  1211                           ;canlib/message/msg_common.c: 11:     output->data[1] = (timestamp >> 0) & 0xff;
  1212   00182C  5003               	movf	write_timestamp_2bytes@output^0,w,c
  1213   00182E  6ED9               	movwf	fsr2l,c
  1214   001830  6ADA               	clrf	fsr2h,c
  1215   001832  0E06               	movlw	6
  1216   001834  26D9               	addwf	fsr2l,f,c
  1217   001836  0060  F007  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
  1218   00183C  0012               	return		;funcret
  1219   00183E                     __end_of_write_timestamp_2bytes:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _Board_Init *****************
  1223 ;; Defined at:
  1224 ;;		line 164 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 4
  1245 ;; This function calls:
  1246 ;;		_ADC_Init
  1247 ;;		_CAN_Init
  1248 ;;		_LEDs_Init
  1249 ;;		_Osc_Init
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text9
  1256   00185A                     __ptext9:
  1257                           	callstack 0
  1258   00185A                     _Board_Init:
  1259                           	callstack 26
  1260   00185A  EC4B  F00C         	call	_LEDs_Init	;wreg free
  1261   00185E  ECAC  F00B         	call	_Osc_Init	;wreg free
  1262   001862  EC1F  F00C         	call	_ADC_Init	;wreg free
  1263   001866  EC50  F00B         	call	_CAN_Init	;wreg free
  1264   00186A  0012               	return		;funcret
  1265   00186C                     __end_of_Board_Init:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _Osc_Init *****************
  1269 ;; Defined at:
  1270 ;;		line 11 in file "clockInit.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  i               2    0[COMRAM] unsigned short 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_Board_Init
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text10
  1298   001758                     __ptext10:
  1299                           	callstack 0
  1300   001758                     _Osc_Init:
  1301                           	callstack 29
  1302   001758  0E70               	movlw	112
  1303   00175A  0139               	movlb	57	; () banked
  1304   00175C  6FD9               	movwf	217,b	;volatile
  1305   00175E                     l747:
  1306                           
  1307                           ; BSR set to: 57
  1308   00175E  A9DB               	btfss	219,4,b	;volatile
  1309   001760  EFB4  F00B         	goto	u61
  1310   001764  EFB6  F00B         	goto	u60
  1311   001768                     u61:
  1312   001768  EFAF  F00B         	goto	l747
  1313   00176C                     u60:
  1314   00176C                     
  1315                           ; BSR set to: 57
  1316   00176C  0E20               	movlw	32
  1317   00176E  19DA               	xorwf	218,w,b	;volatile
  1318   001770  B4D8               	btfsc	status,2,c
  1319   001772  EFBD  F00B         	goto	u71
  1320   001776  EFBF  F00B         	goto	u70
  1321   00177A                     u71:
  1322   00177A  EFD0  F00B         	goto	l753
  1323   00177E                     u70:
  1324   00177E                     
  1325                           ; BSR set to: 57
  1326   00177E  0E00               	movlw	0
  1327   001780  6E02               	movwf	(Osc_Init@i+1)^0,c
  1328   001782  0E00               	movlw	0
  1329   001784  6E01               	movwf	Osc_Init@i^0,c
  1330   001786                     l1645:
  1331   001786  4A01               	infsnz	Osc_Init@i^0,f,c
  1332   001788  2A02               	incf	(Osc_Init@i+1)^0,f,c
  1333   00178A  0E60               	movlw	96
  1334   00178C  5C01               	subwf	Osc_Init@i^0,w,c
  1335   00178E  0EEA               	movlw	234
  1336   001790  5802               	subwfb	(Osc_Init@i+1)^0,w,c
  1337   001792  A0D8               	btfss	status,0,c
  1338   001794  EFCE  F00B         	goto	u81
  1339   001798  EFD0  F00B         	goto	u80
  1340   00179C                     u81:
  1341   00179C  EFC3  F00B         	goto	l1645
  1342   0017A0                     u80:
  1343   0017A0                     l753:
  1344   0017A0  0012               	return		;funcret
  1345   0017A2                     __end_of_Osc_Init:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _LEDs_Init *****************
  1349 ;; Defined at:
  1350 ;;		line 10 in file "leds.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		None
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_Board_Init
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text11
  1378   001896                     __ptext11:
  1379                           	callstack 0
  1380   001896                     _LEDs_Init:
  1381                           	callstack 29
  1382   001896                     
  1383                           ;leds.c: 12:     TRISAbits.TRISA2 = 0;
  1384   001896  94C2               	bcf	194,2,c	;volatile
  1385                           
  1386                           ;leds.c: 13:     TRISAbits.TRISA3 = 0;
  1387   001898  96C2               	bcf	194,3,c	;volatile
  1388                           
  1389                           ;leds.c: 14:     TRISAbits.TRISA4 = 0;
  1390   00189A  98C2               	bcf	194,4,c	;volatile
  1391   00189C  0012               	return		;funcret
  1392   00189E                     __end_of_LEDs_Init:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _CAN_Init *****************
  1396 ;; Defined at:
  1397 ;;		line 145 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  can_setup       7   22[COMRAM] struct .
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        7 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 3
  1418 ;; This function calls:
  1419 ;;		_can_generate_timing_params
  1420 ;;		_can_init
  1421 ;;		_txb_init
  1422 ;; This function is called by:
  1423 ;;		_Board_Init
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text12
  1428   0016A0                     __ptext12:
  1429                           	callstack 0
  1430   0016A0                     _CAN_Init:
  1431                           	callstack 26
  1432   0016A0  92C4               	bcf	16324,1,c	;volatile
  1433   0016A2  0E33               	movlw	51
  1434   0016A4  013A               	movlb	58	; () banked
  1435   0016A6  6F11               	movwf	17,b	;volatile
  1436   0016A8                     
  1437                           ; BSR set to: 58
  1438   0016A8  80C4               	bsf	16324,0,c	;volatile
  1439   0016AA                     
  1440                           ; BSR set to: 58
  1441   0016AA  9160               	bcf	96,0,b	;volatile
  1442   0016AC  0E10               	movlw	16
  1443   0016AE  6FED               	movwf	237,b	;volatile
  1444   0016B0                     
  1445                           ; BSR set to: 58
  1446   0016B0  0E00               	movlw	0
  1447   0016B2  6E01               	movwf	can_generate_timing_params@can_frequency^0,c
  1448   0016B4  0E1B               	movlw	27
  1449   0016B6  6E02               	movwf	(can_generate_timing_params@can_frequency+1)^0,c
  1450   0016B8  0EB7               	movlw	183
  1451   0016BA  6E03               	movwf	(can_generate_timing_params@can_frequency+2)^0,c
  1452   0016BC  0E00               	movlw	0
  1453   0016BE  6E04               	movwf	(can_generate_timing_params@can_frequency+3)^0,c
  1454   0016C0  0E17               	movlw	low CAN_Init@can_setup
  1455   0016C2  6E05               	movwf	can_generate_timing_params@timing^0,c
  1456   0016C4  EC01  F008         	call	_can_generate_timing_params	;wreg free
  1457   0016C8  0E17               	movlw	low CAN_Init@can_setup
  1458   0016CA  6E01               	movwf	can_init@timing^0,c
  1459   0016CC  0E00               	movlw	0
  1460   0016CE  6E02               	movwf	can_init@receive_callback^0,c
  1461   0016D0  0E00               	movlw	0
  1462   0016D2  6E03               	movwf	(can_init@receive_callback+1)^0,c
  1463   0016D4  ECAC  F009         	call	_can_init	;wreg free
  1464   0016D8  0E00               	movlw	low _tx_pool
  1465   0016DA  6E0F               	movwf	txb_init@pool^0,c
  1466   0016DC  0E01               	movlw	high _tx_pool
  1467   0016DE  6E10               	movwf	(txb_init@pool+1)^0,c
  1468   0016E0  0E00               	movlw	0
  1469   0016E2  6E12               	movwf	(txb_init@pool_size+1)^0,c
  1470   0016E4  0EC8               	movlw	200
  1471   0016E6  6E11               	movwf	txb_init@pool_size^0,c
  1472   0016E8  0EBE               	movlw	low _can_send
  1473   0016EA  6E13               	movwf	txb_init@can_send_fp^0,c
  1474   0016EC  0E11               	movlw	high _can_send
  1475   0016EE  6E14               	movwf	(txb_init@can_send_fp+1)^0,c
  1476   0016F0  0E00               	movlw	0
  1477   0016F2  6E15               	movwf	txb_init@can_tx_ready^0,c
  1478   0016F4  0E00               	movlw	0
  1479   0016F6  6E16               	movwf	(txb_init@can_tx_ready+1)^0,c
  1480   0016F8  ECD1  F00B         	call	_txb_init	;wreg free
  1481   0016FC  0012               	return		;funcret
  1482   0016FE                     __end_of_CAN_Init:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _txb_init *****************
  1486 ;; Defined at:
  1487 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  pool            2   14[COMRAM] PTR void 
  1490 ;;		 -> tx_pool(200), 
  1491 ;;  pool_size       2   16[COMRAM] unsigned int 
  1492 ;;  can_send_fp     2   18[COMRAM] PTR FTN(PTR const struct
  1493 ;;		 -> can_send(1), 
  1494 ;;  can_tx_ready    2   20[COMRAM] PTR FTN()_Bool 
  1495 ;;		 -> can_send_rdy(1), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        8 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 2
  1514 ;; This function calls:
  1515 ;;		_srb_init
  1516 ;; This function is called by:
  1517 ;;		_CAN_Init
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text13
  1522   0017A2                     __ptext13:
  1523                           	callstack 0
  1524   0017A2                     _txb_init:
  1525                           	callstack 26
  1526   0017A2                     
  1527                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  1528   0017A2  C013  F033         	movff	txb_init@can_send_fp,_ctx
  1529   0017A6  C014  F034         	movff	txb_init@can_send_fp+1,_ctx+1
  1530                           
  1531                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  1532   0017AA  C015  F035         	movff	txb_init@can_tx_ready,_ctx+2
  1533   0017AE  C016  F036         	movff	txb_init@can_tx_ready+1,_ctx+3
  1534   0017B2                     
  1535                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  1536   0017B2  0E3B               	movlw	low _buf@can_tx_buffer$F1555
  1537   0017B4  6E08               	movwf	srb_init@ctx^0,c
  1538   0017B6  C00F  F009         	movff	txb_init@pool,srb_init@pool
  1539   0017BA  C010  F00A         	movff	txb_init@pool+1,srb_init@pool+1
  1540   0017BE  C011  F00B         	movff	txb_init@pool_size,srb_init@pool_size
  1541   0017C2  C012  F00C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  1542   0017C6  0E00               	movlw	0
  1543   0017C8  6E0E               	movwf	(srb_init@element_size+1)^0,c
  1544   0017CA  0E0D               	movlw	13
  1545   0017CC  6E0D               	movwf	srb_init@element_size^0,c
  1546   0017CE  EC18  F00B         	call	_srb_init	;wreg free
  1547   0017D2  0012               	return		;funcret
  1548   0017D4                     __end_of_txb_init:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _srb_init *****************
  1552 ;; Defined at:
  1553 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  ctx             1    7[COMRAM] PTR struct .
  1556 ;;		 -> buf@can_tx_buffer$F1555(10), buf(10), 
  1557 ;;  pool            2    8[COMRAM] PTR void 
  1558 ;;		 -> tx_pool(200), 
  1559 ;;  pool_size       2   10[COMRAM] unsigned int 
  1560 ;;  element_size    2   12[COMRAM] unsigned int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:        7 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 1
  1579 ;; This function calls:
  1580 ;;		___lwdiv
  1581 ;; This function is called by:
  1582 ;;		_txb_init
  1583 ;;		_rcvb_init
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text14
  1588   001630                     __ptext14:
  1589                           	callstack 0
  1590   001630                     _srb_init:
  1591                           	callstack 26
  1592   001630                     
  1593                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  1594   001630  5008               	movf	srb_init@ctx^0,w,c
  1595   001632  6ED9               	movwf	fsr2l,c
  1596   001634  6ADA               	clrf	fsr2h,c
  1597   001636  0060  F027  FFDE   	movff	srb_init@pool,postinc2
  1598   00163C  0060  F02B  FFDD   	movff	srb_init@pool+1,postdec2
  1599   001642                     
  1600                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  1601   001642  5008               	movf	srb_init@ctx^0,w,c
  1602   001644  6ED9               	movwf	fsr2l,c
  1603   001646  6ADA               	clrf	fsr2h,c
  1604   001648  0E02               	movlw	2
  1605   00164A  26D9               	addwf	fsr2l,f,c
  1606   00164C  0060  F037  FFDE   	movff	srb_init@element_size,postinc2
  1607   001652  0060  F03B  FFDD   	movff	srb_init@element_size+1,postdec2
  1608   001658                     
  1609                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  1610   001658  C00B  F001         	movff	srb_init@pool_size,___lwdiv@dividend
  1611   00165C  C00C  F002         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  1612   001660  C00D  F003         	movff	srb_init@element_size,___lwdiv@divisor
  1613   001664  C00E  F004         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  1614   001668  ECDE  F00A         	call	___lwdiv	;wreg free
  1615   00166C  5008               	movf	srb_init@ctx^0,w,c
  1616   00166E  6ED9               	movwf	fsr2l,c
  1617   001670  6ADA               	clrf	fsr2h,c
  1618   001672  0E04               	movlw	4
  1619   001674  26D9               	addwf	fsr2l,f,c
  1620   001676  0060  F007  FFDE   	movff	?___lwdiv,postinc2
  1621   00167C  0060  F00B  FFDD   	movff	?___lwdiv+1,postdec2
  1622   001682                     
  1623                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  1624   001682  5008               	movf	srb_init@ctx^0,w,c
  1625   001684  6ED9               	movwf	fsr2l,c
  1626   001686  6ADA               	clrf	fsr2h,c
  1627   001688  0E06               	movlw	6
  1628   00168A  26D9               	addwf	fsr2l,f,c
  1629   00168C  6ADE               	clrf	postinc2,c
  1630   00168E  6ADD               	clrf	postdec2,c
  1631   001690                     
  1632                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  1633   001690  5008               	movf	srb_init@ctx^0,w,c
  1634   001692  6ED9               	movwf	fsr2l,c
  1635   001694  6ADA               	clrf	fsr2h,c
  1636   001696  0E08               	movlw	8
  1637   001698  26D9               	addwf	fsr2l,f,c
  1638   00169A  6ADE               	clrf	postinc2,c
  1639   00169C  6ADD               	clrf	postdec2,c
  1640   00169E  0012               	return		;funcret
  1641   0016A0                     __end_of_srb_init:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function ___lwdiv *****************
  1645 ;; Defined at:
  1646 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  dividend        2    0[COMRAM] unsigned int 
  1649 ;;  divisor         2    2[COMRAM] unsigned int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  quotient        2    4[COMRAM] unsigned int 
  1652 ;;  counter         1    6[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2    0[COMRAM] unsigned int 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;Total ram usage:        7 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_srb_init
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text15
  1676   0015BC                     __ptext15:
  1677                           	callstack 0
  1678   0015BC                     ___lwdiv:
  1679                           	callstack 26
  1680   0015BC  0E00               	movlw	0
  1681   0015BE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1682   0015C0  0E00               	movlw	0
  1683   0015C2  6E05               	movwf	___lwdiv@quotient^0,c
  1684   0015C4  5003               	movf	___lwdiv@divisor^0,w,c
  1685   0015C6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1686   0015C8  B4D8               	btfsc	status,2,c
  1687   0015CA  EFE9  F00A         	goto	u2001
  1688   0015CE  EFEB  F00A         	goto	u2000
  1689   0015D2                     u2001:
  1690   0015D2  EF13  F00B         	goto	l1247
  1691   0015D6                     u2000:
  1692   0015D6  0E01               	movlw	1
  1693   0015D8  6E07               	movwf	___lwdiv@counter^0,c
  1694   0015DA  EFF3  F00A         	goto	l3095
  1695   0015DE                     l3093:
  1696   0015DE  90D8               	bcf	status,0,c
  1697   0015E0  3603               	rlcf	___lwdiv@divisor^0,f,c
  1698   0015E2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1699   0015E4  2A07               	incf	___lwdiv@counter^0,f,c
  1700   0015E6                     l3095:
  1701   0015E6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1702   0015E8  EFF8  F00A         	goto	u2011
  1703   0015EC  EFFA  F00A         	goto	u2010
  1704   0015F0                     u2011:
  1705   0015F0  EFEF  F00A         	goto	l3093
  1706   0015F4                     u2010:
  1707   0015F4                     l3097:
  1708   0015F4  90D8               	bcf	status,0,c
  1709   0015F6  3605               	rlcf	___lwdiv@quotient^0,f,c
  1710   0015F8  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1711   0015FA  5003               	movf	___lwdiv@divisor^0,w,c
  1712   0015FC  5C01               	subwf	___lwdiv@dividend^0,w,c
  1713   0015FE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1714   001600  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1715   001602  A0D8               	btfss	status,0,c
  1716   001604  EF06  F00B         	goto	u2021
  1717   001608  EF08  F00B         	goto	u2020
  1718   00160C                     u2021:
  1719   00160C  EF0D  F00B         	goto	l3105
  1720   001610                     u2020:
  1721   001610  5003               	movf	___lwdiv@divisor^0,w,c
  1722   001612  5E01               	subwf	___lwdiv@dividend^0,f,c
  1723   001614  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1724   001616  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1725   001618  8005               	bsf	___lwdiv@quotient^0,0,c
  1726   00161A                     l3105:
  1727   00161A  90D8               	bcf	status,0,c
  1728   00161C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1729   00161E  3203               	rrcf	___lwdiv@divisor^0,f,c
  1730   001620  2E07               	decfsz	___lwdiv@counter^0,f,c
  1731   001622  EFFA  F00A         	goto	l3097
  1732   001626                     l1247:
  1733   001626  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1734   00162A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1735   00162E  0012               	return		;funcret
  1736   001630                     __end_of___lwdiv:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _can_init *****************
  1740 ;; Defined at:
  1741 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  timing          1    0[COMRAM] PTR const struct .
  1744 ;;		 -> CAN_Init@can_setup(7), 
  1745 ;;  receive_call    2    1[COMRAM] PTR FTN(PTR const struct
  1746 ;;		 -> can_msg_handler(1), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;Total ram usage:        4 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_CAN_Init
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text16
  1772   001358                     __ptext16:
  1773                           	callstack 0
  1774   001358                     _can_init:
  1775                           	callstack 28
  1776   001358                     
  1777                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
  1778   001358  C002  F037         	movff	can_init@receive_callback,_can_rcv_cb
  1779   00135C  C003  F038         	movff	can_init@receive_callback+1,_can_rcv_cb+1
  1780   001360                     
  1781                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
  1782   001360  508F               	movf	143,w,c	;volatile
  1783   001362  0B1F               	andlw	-225
  1784   001364  0980               	iorlw	128
  1785   001366  6E8F               	movwf	143,c	;volatile
  1786   001368                     l3209:
  1787   001368  388E               	swapf	142,w,c	;volatile
  1788   00136A  32E8               	rrcf	wreg,f,c
  1789   00136C  0B07               	andlw	7
  1790   00136E  0A04               	xorlw	4
  1791   001370  A4D8               	btfss	status,2,c
  1792   001372  EFBD  F009         	goto	u2031
  1793   001376  EFBF  F009         	goto	u2030
  1794   00137A                     u2031:
  1795   00137A  EFB4  F009         	goto	l3209
  1796   00137E                     u2030:
  1797   00137E                     
  1798                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
  1799   00137E  0E3F               	movlw	-193
  1800   001380  1691               	andwf	145,f,c	;volatile
  1801   001382                     
  1802                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
  1803   001382  0137               	movlb	55	; () banked
  1804   001384  9100               	bcf	0,0,b	;volatile
  1805   001386                     
  1806                           ; BSR set to: 55
  1807                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
  1808   001386  5001               	movf	can_init@timing^0,w,c
  1809   001388  6ED9               	movwf	fsr2l,c
  1810   00138A  6ADA               	clrf	fsr2h,c
  1811   00138C  0E01               	movlw	1
  1812   00138E  26D9               	addwf	fsr2l,f,c
  1813   001390  50DF               	movf	indf2,w,c
  1814   001392  6E04               	movwf	??_can_init^0,c
  1815   001394  3A04               	swapf	??_can_init^0,f,c
  1816   001396  4604               	rlncf	??_can_init^0,f,c
  1817   001398  4604               	rlncf	??_can_init^0,f,c
  1818   00139A  5103               	movf	3,w,b	;volatile
  1819   00139C  1804               	xorwf	??_can_init^0,w,c
  1820   00139E  0B3F               	andlw	-193
  1821   0013A0  1804               	xorwf	??_can_init^0,w,c
  1822   0013A2  6F03               	movwf	3,b	;volatile
  1823   0013A4                     
  1824                           ; BSR set to: 55
  1825                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
  1826   0013A4  5001               	movf	can_init@timing^0,w,c
  1827   0013A6  6ED9               	movwf	fsr2l,c
  1828   0013A8  6ADA               	clrf	fsr2h,c
  1829   0013AA  50DF               	movf	indf2,w,c
  1830   0013AC  6E04               	movwf	??_can_init^0,c
  1831   0013AE  5103               	movf	3,w,b	;volatile
  1832   0013B0  1804               	xorwf	??_can_init^0,w,c
  1833   0013B2  0BC0               	andlw	-64
  1834   0013B4  1804               	xorwf	??_can_init^0,w,c
  1835   0013B6  6F03               	movwf	3,b	;volatile
  1836   0013B8                     
  1837                           ; BSR set to: 55
  1838                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
  1839   0013B8  5001               	movf	can_init@timing^0,w,c
  1840   0013BA  6ED9               	movwf	fsr2l,c
  1841   0013BC  6ADA               	clrf	fsr2h,c
  1842   0013BE  0E06               	movlw	6
  1843   0013C0  26D9               	addwf	fsr2l,f,c
  1844   0013C2  50DF               	movf	indf2,w,c
  1845   0013C4  6E04               	movwf	??_can_init^0,c
  1846   0013C6  3204               	rrcf	??_can_init^0,f,c
  1847   0013C8  3204               	rrcf	??_can_init^0,f,c
  1848   0013CA  5104               	movf	4,w,b	;volatile
  1849   0013CC  1804               	xorwf	??_can_init^0,w,c
  1850   0013CE  0B7F               	andlw	-129
  1851   0013D0  1804               	xorwf	??_can_init^0,w,c
  1852   0013D2  6F04               	movwf	4,b	;volatile
  1853   0013D4                     
  1854                           ; BSR set to: 55
  1855                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
  1856   0013D4  5001               	movf	can_init@timing^0,w,c
  1857   0013D6  6ED9               	movwf	fsr2l,c
  1858   0013D8  6ADA               	clrf	fsr2h,c
  1859   0013DA  0E02               	movlw	2
  1860   0013DC  26D9               	addwf	fsr2l,f,c
  1861   0013DE  50DF               	movf	indf2,w,c
  1862   0013E0  6E04               	movwf	??_can_init^0,c
  1863   0013E2  3A04               	swapf	??_can_init^0,f,c
  1864   0013E4  4604               	rlncf	??_can_init^0,f,c
  1865   0013E6  4604               	rlncf	??_can_init^0,f,c
  1866   0013E8  5104               	movf	4,w,b	;volatile
  1867   0013EA  1804               	xorwf	??_can_init^0,w,c
  1868   0013EC  0BBF               	andlw	-65
  1869   0013EE  1804               	xorwf	??_can_init^0,w,c
  1870   0013F0  6F04               	movwf	4,b	;volatile
  1871   0013F2                     
  1872                           ; BSR set to: 55
  1873                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
  1874   0013F2  5001               	movf	can_init@timing^0,w,c
  1875   0013F4  6ED9               	movwf	fsr2l,c
  1876   0013F6  6ADA               	clrf	fsr2h,c
  1877   0013F8  0E03               	movlw	3
  1878   0013FA  26D9               	addwf	fsr2l,f,c
  1879   0013FC  50DF               	movf	indf2,w,c
  1880   0013FE  6E04               	movwf	??_can_init^0,c
  1881   001400  4604               	rlncf	??_can_init^0,f,c
  1882   001402  4604               	rlncf	??_can_init^0,f,c
  1883   001404  4604               	rlncf	??_can_init^0,f,c
  1884   001406  5104               	movf	4,w,b	;volatile
  1885   001408  1804               	xorwf	??_can_init^0,w,c
  1886   00140A  0BC7               	andlw	-57
  1887   00140C  1804               	xorwf	??_can_init^0,w,c
  1888   00140E  6F04               	movwf	4,b	;volatile
  1889   001410                     
  1890                           ; BSR set to: 55
  1891                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
  1892   001410  5001               	movf	can_init@timing^0,w,c
  1893   001412  6ED9               	movwf	fsr2l,c
  1894   001414  6ADA               	clrf	fsr2h,c
  1895   001416  0E05               	movlw	5
  1896   001418  26D9               	addwf	fsr2l,f,c
  1897   00141A  50DF               	movf	indf2,w,c
  1898   00141C  6E04               	movwf	??_can_init^0,c
  1899   00141E  5104               	movf	4,w,b	;volatile
  1900   001420  1804               	xorwf	??_can_init^0,w,c
  1901   001422  0BF8               	andlw	-8
  1902   001424  1804               	xorwf	??_can_init^0,w,c
  1903   001426  6F04               	movwf	4,b	;volatile
  1904   001428                     
  1905                           ; BSR set to: 55
  1906                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
  1907   001428  5001               	movf	can_init@timing^0,w,c
  1908   00142A  6ED9               	movwf	fsr2l,c
  1909   00142C  6ADA               	clrf	fsr2h,c
  1910   00142E  0E04               	movlw	4
  1911   001430  26D9               	addwf	fsr2l,f,c
  1912   001432  50DF               	movf	indf2,w,c
  1913   001434  6E04               	movwf	??_can_init^0,c
  1914   001436  5105               	movf	5,w,b	;volatile
  1915   001438  1804               	xorwf	??_can_init^0,w,c
  1916   00143A  0BF8               	andlw	-8
  1917   00143C  1804               	xorwf	??_can_init^0,w,c
  1918   00143E  6F05               	movwf	5,b	;volatile
  1919   001440                     
  1920                           ; BSR set to: 55
  1921                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
  1922   001440  8F05               	bsf	5,7,b	;volatile
  1923   001442                     
  1924                           ; BSR set to: 55
  1925                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
  1926   001442  9D05               	bcf	5,6,b	;volatile
  1927   001444                     
  1928                           ; BSR set to: 55
  1929                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
  1930   001444  0E00               	movlw	0
  1931   001446  6FB8               	movwf	184,b	;volatile
  1932   001448                     
  1933                           ; BSR set to: 55
  1934                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
  1935   001448  0E00               	movlw	0
  1936   00144A  6FB9               	movwf	185,b	;volatile
  1937   00144C                     
  1938                           ; BSR set to: 55
  1939                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
  1940   00144C  0E00               	movlw	0
  1941   00144E  6FBC               	movwf	188,b	;volatile
  1942   001450                     
  1943                           ; BSR set to: 55
  1944                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
  1945   001450  0E00               	movlw	0
  1946   001452  6FBD               	movwf	189,b	;volatile
  1947   001454                     
  1948                           ; BSR set to: 55
  1949                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
  1950   001454  8A80               	bsf	128,5,c	;volatile
  1951   001456                     
  1952                           ; BSR set to: 55
  1953                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
  1954   001456  8C80               	bsf	128,6,c	;volatile
  1955   001458                     
  1956                           ; BSR set to: 55
  1957                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
  1958   001458  8480               	bsf	128,2,c	;volatile
  1959   00145A                     
  1960                           ; BSR set to: 55
  1961                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
  1962   00145A  0139               	movlb	57	; () banked
  1963   00145C  8F95               	bsf	149,7,b	;volatile
  1964   00145E                     
  1965                           ; BSR set to: 57
  1966                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
  1967   00145E  9D95               	bcf	149,6,b	;volatile
  1968   001460                     
  1969                           ; BSR set to: 57
  1970                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
  1971   001460  8B95               	bsf	149,5,b	;volatile
  1972   001462                     
  1973                           ; BSR set to: 57
  1974                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
  1975   001462  9995               	bcf	149,4,b	;volatile
  1976   001464                     
  1977                           ; BSR set to: 57
  1978                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
  1979   001464  9795               	bcf	149,3,b	;volatile
  1980   001466                     
  1981                           ; BSR set to: 57
  1982                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
  1983   001466  9595               	bcf	149,2,b	;volatile
  1984   001468                     
  1985                           ; BSR set to: 57
  1986                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
  1987   001468  8395               	bsf	149,1,b	;volatile
  1988   00146A                     
  1989                           ; BSR set to: 57
  1990                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
  1991   00146A  8195               	bsf	149,0,b	;volatile
  1992   00146C                     
  1993                           ; BSR set to: 57
  1994                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
  1995   00146C  0E1F               	movlw	-225
  1996   00146E  168F               	andwf	143,f,c	;volatile
  1997   001470                     l3265:
  1998   001470  388E               	swapf	142,w,c	;volatile
  1999   001472  32E8               	rrcf	wreg,f,c
  2000   001474  0B07               	andlw	7
  2001   001476  0900               	iorlw	0
  2002   001478  A4D8               	btfss	status,2,c
  2003   00147A  EF41  F00A         	goto	u2041
  2004   00147E  EF43  F00A         	goto	u2040
  2005   001482                     u2041:
  2006   001482  EF38  F00A         	goto	l3265
  2007   001486                     u2040:
  2008   001486  0012               	return		;funcret
  2009   001488                     __end_of_can_init:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function _can_generate_timing_params *****************
  2013 ;; Defined at:
  2014 ;;		line 7 in file "canlib/util/timing_util.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  can_frequenc    4    0[COMRAM] unsigned long 
  2017 ;;  timing          1    4[COMRAM] PTR struct .
  2018 ;;		 -> CAN_Init@can_setup(7), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      _Bool 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        9 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_CAN_Init
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text17
  2044   001002                     __ptext17:
  2045                           	callstack 0
  2046   001002                     _can_generate_timing_params:
  2047                           	callstack 28
  2048   001002                     
  2049                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
  2050   001002  EF8F  F008         	goto	l3171
  2051   001006                     l3121:
  2052                           
  2053                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
  2054   001006  5005               	movf	can_generate_timing_params@timing^0,w,c
  2055   001008  6ED9               	movwf	fsr2l,c
  2056   00100A  6ADA               	clrf	fsr2h,c
  2057   00100C  0E07               	movlw	7
  2058   00100E  6EDF               	movwf	indf2,c
  2059   001010                     
  2060                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
  2061   001010  5005               	movf	can_generate_timing_params@timing^0,w,c
  2062   001012  6ED9               	movwf	fsr2l,c
  2063   001014  6ADA               	clrf	fsr2h,c
  2064   001016  0E01               	movlw	1
  2065   001018  26D9               	addwf	fsr2l,f,c
  2066   00101A  0E03               	movlw	3
  2067   00101C  6EDF               	movwf	indf2,c
  2068   00101E                     
  2069                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
  2070   00101E  5005               	movf	can_generate_timing_params@timing^0,w,c
  2071   001020  6ED9               	movwf	fsr2l,c
  2072   001022  6ADA               	clrf	fsr2h,c
  2073   001024  0E06               	movlw	6
  2074   001026  26D9               	addwf	fsr2l,f,c
  2075   001028  0E01               	movlw	1
  2076   00102A  6EDF               	movwf	indf2,c
  2077   00102C                     
  2078                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
  2079   00102C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2080   00102E  6ED9               	movwf	fsr2l,c
  2081   001030  6ADA               	clrf	fsr2h,c
  2082   001032  0E02               	movlw	2
  2083   001034  26D9               	addwf	fsr2l,f,c
  2084   001036  6ADF               	clrf	indf2,c
  2085   001038                     
  2086                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
  2087   001038  5005               	movf	can_generate_timing_params@timing^0,w,c
  2088   00103A  6ED9               	movwf	fsr2l,c
  2089   00103C  6ADA               	clrf	fsr2h,c
  2090   00103E  0E03               	movlw	3
  2091   001040  26D9               	addwf	fsr2l,f,c
  2092   001042  0E04               	movlw	4
  2093   001044  6EDF               	movwf	indf2,c
  2094   001046                     
  2095                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
  2096   001046  5005               	movf	can_generate_timing_params@timing^0,w,c
  2097   001048  6ED9               	movwf	fsr2l,c
  2098   00104A  6ADA               	clrf	fsr2h,c
  2099   00104C  0E05               	movlw	5
  2100   00104E  26D9               	addwf	fsr2l,f,c
  2101   001050  6ADF               	clrf	indf2,c
  2102   001052                     
  2103                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
  2104   001052  5005               	movf	can_generate_timing_params@timing^0,w,c
  2105   001054  6ED9               	movwf	fsr2l,c
  2106   001056  6ADA               	clrf	fsr2h,c
  2107   001058  0E04               	movlw	4
  2108   00105A  26D9               	addwf	fsr2l,f,c
  2109   00105C  0E04               	movlw	4
  2110   00105E  6EDF               	movwf	indf2,c
  2111   001060  EFDE  F008         	goto	l391
  2112   001064                     l3137:
  2113                           
  2114                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
  2115   001064  5005               	movf	can_generate_timing_params@timing^0,w,c
  2116   001066  6ED9               	movwf	fsr2l,c
  2117   001068  6ADA               	clrf	fsr2h,c
  2118   00106A  0E01               	movlw	1
  2119   00106C  6EDF               	movwf	indf2,c
  2120   00106E                     
  2121                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
  2122   00106E  5005               	movf	can_generate_timing_params@timing^0,w,c
  2123   001070  6ED9               	movwf	fsr2l,c
  2124   001072  6ADA               	clrf	fsr2h,c
  2125   001074  0E01               	movlw	1
  2126   001076  26D9               	addwf	fsr2l,f,c
  2127   001078  0E03               	movlw	3
  2128   00107A  6EDF               	movwf	indf2,c
  2129   00107C                     
  2130                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
  2131   00107C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2132   00107E  6ED9               	movwf	fsr2l,c
  2133   001080  6ADA               	clrf	fsr2h,c
  2134   001082  0E06               	movlw	6
  2135   001084  26D9               	addwf	fsr2l,f,c
  2136   001086  0E01               	movlw	1
  2137   001088  6EDF               	movwf	indf2,c
  2138   00108A                     
  2139                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
  2140   00108A  5005               	movf	can_generate_timing_params@timing^0,w,c
  2141   00108C  6ED9               	movwf	fsr2l,c
  2142   00108E  6ADA               	clrf	fsr2h,c
  2143   001090  0E02               	movlw	2
  2144   001092  26D9               	addwf	fsr2l,f,c
  2145   001094  6ADF               	clrf	indf2,c
  2146   001096                     
  2147                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
  2148   001096  5005               	movf	can_generate_timing_params@timing^0,w,c
  2149   001098  6ED9               	movwf	fsr2l,c
  2150   00109A  6ADA               	clrf	fsr2h,c
  2151   00109C  0E03               	movlw	3
  2152   00109E  26D9               	addwf	fsr2l,f,c
  2153   0010A0  0E04               	movlw	4
  2154   0010A2  6EDF               	movwf	indf2,c
  2155   0010A4                     
  2156                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
  2157   0010A4  5005               	movf	can_generate_timing_params@timing^0,w,c
  2158   0010A6  6ED9               	movwf	fsr2l,c
  2159   0010A8  6ADA               	clrf	fsr2h,c
  2160   0010AA  0E05               	movlw	5
  2161   0010AC  26D9               	addwf	fsr2l,f,c
  2162   0010AE  6ADF               	clrf	indf2,c
  2163   0010B0                     
  2164                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
  2165   0010B0  5005               	movf	can_generate_timing_params@timing^0,w,c
  2166   0010B2  6ED9               	movwf	fsr2l,c
  2167   0010B4  6ADA               	clrf	fsr2h,c
  2168   0010B6  0E04               	movlw	4
  2169   0010B8  26D9               	addwf	fsr2l,f,c
  2170   0010BA  0E04               	movlw	4
  2171   0010BC  6EDF               	movwf	indf2,c
  2172   0010BE  EFDE  F008         	goto	l391
  2173   0010C2                     l3153:
  2174                           
  2175                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
  2176   0010C2  5005               	movf	can_generate_timing_params@timing^0,w,c
  2177   0010C4  6ED9               	movwf	fsr2l,c
  2178   0010C6  6ADA               	clrf	fsr2h,c
  2179   0010C8  6ADF               	clrf	indf2,c
  2180   0010CA                     
  2181                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
  2182   0010CA  5005               	movf	can_generate_timing_params@timing^0,w,c
  2183   0010CC  6ED9               	movwf	fsr2l,c
  2184   0010CE  6ADA               	clrf	fsr2h,c
  2185   0010D0  0E01               	movlw	1
  2186   0010D2  26D9               	addwf	fsr2l,f,c
  2187   0010D4  0E03               	movlw	3
  2188   0010D6  6EDF               	movwf	indf2,c
  2189   0010D8                     
  2190                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
  2191   0010D8  5005               	movf	can_generate_timing_params@timing^0,w,c
  2192   0010DA  6ED9               	movwf	fsr2l,c
  2193   0010DC  6ADA               	clrf	fsr2h,c
  2194   0010DE  0E06               	movlw	6
  2195   0010E0  26D9               	addwf	fsr2l,f,c
  2196   0010E2  0E01               	movlw	1
  2197   0010E4  6EDF               	movwf	indf2,c
  2198   0010E6                     
  2199                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
  2200   0010E6  5005               	movf	can_generate_timing_params@timing^0,w,c
  2201   0010E8  6ED9               	movwf	fsr2l,c
  2202   0010EA  6ADA               	clrf	fsr2h,c
  2203   0010EC  0E02               	movlw	2
  2204   0010EE  26D9               	addwf	fsr2l,f,c
  2205   0010F0  6ADF               	clrf	indf2,c
  2206   0010F2                     
  2207                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
  2208   0010F2  5005               	movf	can_generate_timing_params@timing^0,w,c
  2209   0010F4  6ED9               	movwf	fsr2l,c
  2210   0010F6  6ADA               	clrf	fsr2h,c
  2211   0010F8  0E03               	movlw	3
  2212   0010FA  26D9               	addwf	fsr2l,f,c
  2213   0010FC  0E04               	movlw	4
  2214   0010FE  6EDF               	movwf	indf2,c
  2215   001100                     
  2216                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
  2217   001100  5005               	movf	can_generate_timing_params@timing^0,w,c
  2218   001102  6ED9               	movwf	fsr2l,c
  2219   001104  6ADA               	clrf	fsr2h,c
  2220   001106  0E05               	movlw	5
  2221   001108  26D9               	addwf	fsr2l,f,c
  2222   00110A  6ADF               	clrf	indf2,c
  2223   00110C                     
  2224                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
  2225   00110C  5005               	movf	can_generate_timing_params@timing^0,w,c
  2226   00110E  6ED9               	movwf	fsr2l,c
  2227   001110  6ADA               	clrf	fsr2h,c
  2228   001112  0E04               	movlw	4
  2229   001114  26D9               	addwf	fsr2l,f,c
  2230   001116  0E04               	movlw	4
  2231   001118  6EDF               	movwf	indf2,c
  2232   00111A  EFDE  F008         	goto	l391
  2233   00111E                     l3171:
  2234   00111E  C001  F006         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
  2235   001122  C002  F007         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
  2236   001126  C003  F008         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
  2237   00112A  C004  F009         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
  2238                           
  2239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 2, Range of values is 0 to 2
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte            7     4 (average)
  2245                           ;	Chosen strategy is simple_byte
  2246   00112E  5009               	movf	(??_can_generate_timing_params+3)^0,w,c
  2247   001130  0A00               	xorlw	0	; case 0
  2248   001132  B4D8               	btfsc	status,2,c
  2249   001134  EFCC  F008         	goto	l4107
  2250   001138  0A02               	xorlw	2	; case 2
  2251   00113A  B4D8               	btfsc	status,2,c
  2252   00113C  EFD7  F008         	goto	l4109
  2253   001140  EFDE  F008         	goto	l391
  2254   001144                     l4101:
  2255                           
  2256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 1, Range of values is 141 to 141
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte            4     3 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263   001144  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2264   001146  0A8D               	xorlw	141	; case 141
  2265   001148  B4D8               	btfsc	status,2,c
  2266   00114A  EFA9  F008         	goto	l4111
  2267   00114E  EFDE  F008         	goto	l391
  2268   001152                     l4111:
  2269                           
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 1, Range of values is 128 to 128
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte            4     3 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276   001152  5006               	movf	??_can_generate_timing_params^0,w,c
  2277   001154  0A80               	xorlw	128	; case 128
  2278   001156  B4D8               	btfsc	status,2,c
  2279   001158  EF61  F008         	goto	l3153
  2280   00115C  EFDE  F008         	goto	l391
  2281   001160                     l4103:
  2282                           
  2283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2284                           ; Switch size 1, requested type "simple"
  2285                           ; Number of cases is 1, Range of values is 27 to 27
  2286                           ; switch strategies available:
  2287                           ; Name         Instructions Cycles
  2288                           ; simple_byte            4     3 (average)
  2289                           ;	Chosen strategy is simple_byte
  2290   001160  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2291   001162  0A1B               	xorlw	27	; case 27
  2292   001164  B4D8               	btfsc	status,2,c
  2293   001166  EFB7  F008         	goto	l4113
  2294   00116A  EFDE  F008         	goto	l391
  2295   00116E                     l4113:
  2296                           
  2297                           ; Switch size 1, requested type "simple"
  2298                           ; Number of cases is 1, Range of values is 0 to 0
  2299                           ; switch strategies available:
  2300                           ; Name         Instructions Cycles
  2301                           ; simple_byte            4     3 (average)
  2302                           ;	Chosen strategy is simple_byte
  2303   00116E  5006               	movf	??_can_generate_timing_params^0,w,c
  2304   001170  0A00               	xorlw	0	; case 0
  2305   001172  B4D8               	btfsc	status,2,c
  2306   001174  EF32  F008         	goto	l3137
  2307   001178  EFDE  F008         	goto	l391
  2308   00117C                     l4105:
  2309                           
  2310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2311                           ; Switch size 1, requested type "simple"
  2312                           ; Number of cases is 1, Range of values is 108 to 108
  2313                           ; switch strategies available:
  2314                           ; Name         Instructions Cycles
  2315                           ; simple_byte            4     3 (average)
  2316                           ;	Chosen strategy is simple_byte
  2317   00117C  5007               	movf	(??_can_generate_timing_params+1)^0,w,c
  2318   00117E  0A6C               	xorlw	108	; case 108
  2319   001180  B4D8               	btfsc	status,2,c
  2320   001182  EFC5  F008         	goto	l4115
  2321   001186  EFDE  F008         	goto	l391
  2322   00118A                     l4115:
  2323                           
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330   00118A  5006               	movf	??_can_generate_timing_params^0,w,c
  2331   00118C  0A00               	xorlw	0	; case 0
  2332   00118E  B4D8               	btfsc	status,2,c
  2333   001190  EF03  F008         	goto	l3121
  2334   001194  EFDE  F008         	goto	l391
  2335   001198                     l4107:
  2336                           
  2337                           ; Switch size 1, requested type "simple"
  2338                           ; Number of cases is 2, Range of values is 91 to 183
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte            7     4 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343   001198  5008               	movf	(??_can_generate_timing_params+2)^0,w,c
  2344   00119A  0A5B               	xorlw	91	; case 91
  2345   00119C  B4D8               	btfsc	status,2,c
  2346   00119E  EFA2  F008         	goto	l4101
  2347   0011A2  0AEC               	xorlw	236	; case 183
  2348   0011A4  B4D8               	btfsc	status,2,c
  2349   0011A6  EFB0  F008         	goto	l4103
  2350   0011AA  EFDE  F008         	goto	l391
  2351   0011AE                     l4109:
  2352                           
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 1, Range of values is 220 to 220
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte            4     3 (average)
  2358                           ;	Chosen strategy is simple_byte
  2359   0011AE  5008               	movf	(??_can_generate_timing_params+2)^0,w,c
  2360   0011B0  0ADC               	xorlw	220	; case 220
  2361   0011B2  B4D8               	btfsc	status,2,c
  2362   0011B4  EFBE  F008         	goto	l4105
  2363   0011B8  EFDE  F008         	goto	l391
  2364   0011BC                     l391:
  2365   0011BC  0012               	return		;funcret
  2366   0011BE                     __end_of_can_generate_timing_params:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _ADC_Init *****************
  2370 ;; Defined at:
  2371 ;;		line 12 in file "adc.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_Board_Init
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text18
  2399   00183E                     __ptext18:
  2400                           	callstack 0
  2401   00183E                     _ADC_Init:
  2402                           	callstack 29
  2403   00183E                     
  2404                           ;adc.c: 13:     ADCON0bits.FM = 1;
  2405   00183E  013E               	movlb	62	; () banked
  2406   001840  51F8               	movf	248,w,b	;volatile
  2407   001842  0BF3               	andlw	-13
  2408   001844  0904               	iorlw	4
  2409   001846  6FF8               	movwf	248,b	;volatile
  2410   001848                     
  2411                           ; BSR set to: 62
  2412                           ;adc.c: 14:     ADCON0bits.CS = 1;
  2413   001848  89F8               	bsf	248,4,b	;volatile
  2414                           
  2415                           ;adc.c: 15:     ADPCH = 0x00;
  2416   00184A  0E00               	movlw	0
  2417   00184C  6FF1               	movwf	241,b	;volatile
  2418   00184E                     
  2419                           ; BSR set to: 62
  2420                           ;adc.c: 16:     TRISAbits.TRISA0 = 1;
  2421   00184E  80C2               	bsf	194,0,c	;volatile
  2422   001850                     
  2423                           ; BSR set to: 62
  2424                           ;adc.c: 17:     ANSELAbits.ANSELA0 = 1;
  2425   001850  013A               	movlb	58	; () banked
  2426   001852  8140               	bsf	64,0,b	;volatile
  2427   001854                     
  2428                           ; BSR set to: 58
  2429                           ;adc.c: 18:     ADCON0bits.ON = 1;
  2430   001854  013E               	movlb	62	; () banked
  2431   001856  8FF8               	bsf	248,7,b	;volatile
  2432   001858                     
  2433                           ; BSR set to: 62
  2434   001858  0012               	return		;funcret
  2435   00185A                     __end_of_ADC_Init:
  2436                           	callstack 0
  2437                           
  2438                           	psect	smallconst
  2439   001000                     __psmallconst:
  2440                           	callstack 0
  2441   001000  00                 	db	0
  2442   001001  00                 	db	0	; dummy byte at the end
  2443   000000                     
  2444                           	psect	rparam
  2445   000000                     
  2446                           	psect	config
  2447                           
  2448                           ;Config register CONFIG1L @ 0x300000
  2449                           ;	External Oscillator Selection
  2450                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2451                           ;	Reset Oscillator Selection
  2452                           ;	RSTOSC = 0x7, unprogrammed default
  2453   300000                     	org	3145728
  2454   300000  FA                 	db	250
  2455                           
  2456                           ;Config register CONFIG1H @ 0x300001
  2457                           ;	unspecified, using default values
  2458                           ;	Clock out Enable bit
  2459                           ;	CLKOUTEN = 0x1, unprogrammed default
  2460                           ;	PRLOCKED One-Way Set Enable bit
  2461                           ;	PR1WAY = 0x1, unprogrammed default
  2462                           ;	Clock Switch Enable bit
  2463                           ;	CSWEN = 0x1, unprogrammed default
  2464                           ;	Fail-Safe Clock Monitor Enable bit
  2465                           ;	FCMEN = 0x1, unprogrammed default
  2466   300001                     	org	3145729
  2467   300001  FF                 	db	255
  2468                           
  2469                           ;Config register CONFIG3L @ 0x300004
  2470                           ;	WDT Period selection bits
  2471                           ;	WDTCPS = 0x1F, unprogrammed default
  2472                           ;	WDT operating mode
  2473                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2474   300004                     	org	3145732
  2475   300004  9F                 	db	159
  2476                           
  2477                           ;Config register CONFIG3H @ 0x300005
  2478                           ;	unspecified, using default values
  2479                           ;	WDT Window Select bits
  2480                           ;	WDTCWS = 0x7, unprogrammed default
  2481                           ;	WDT input clock selector
  2482                           ;	WDTCCS = 0x7, unprogrammed default
  2483   300005                     	org	3145733
  2484   300005  FF                 	db	255
  2485                           tosu	equ	0x3FFF
  2486                           tosh	equ	0x3FFE
  2487                           tosl	equ	0x3FFD
  2488                           stkptr	equ	0x3FFC
  2489                           pclatu	equ	0x3FFB
  2490                           pclath	equ	0x3FFA
  2491                           pcl	equ	0x3FF9
  2492                           tblptru	equ	0x3FF8
  2493                           tblptrh	equ	0x3FF7
  2494                           tblptrl	equ	0x3FF6
  2495                           tablat	equ	0x3FF5
  2496                           prodh	equ	0x3FF4
  2497                           prodl	equ	0x3FF3
  2498                           indf0	equ	0x3FEF
  2499                           postinc0	equ	0x3FEE
  2500                           postdec0	equ	0x3FED
  2501                           preinc0	equ	0x3FEC
  2502                           plusw0	equ	0x3FEB
  2503                           fsr0h	equ	0x3FEA
  2504                           fsr0l	equ	0x3FE9
  2505                           wreg	equ	0x3FE8
  2506                           indf1	equ	0x3FE7
  2507                           postinc1	equ	0x3FE6
  2508                           postdec1	equ	0x3FE5
  2509                           preinc1	equ	0x3FE4
  2510                           plusw1	equ	0x3FE3
  2511                           fsr1h	equ	0x3FE2
  2512                           fsr1l	equ	0x3FE1
  2513                           bsr	equ	0x3FE0
  2514                           indf2	equ	0x3FDF
  2515                           postinc2	equ	0x3FDE
  2516                           postdec2	equ	0x3FDD
  2517                           preinc2	equ	0x3FDC
  2518                           plusw2	equ	0x3FDB
  2519                           fsr2h	equ	0x3FDA
  2520                           fsr2l	equ	0x3FD9
  2521                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         232
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      78
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    build_analog_data_msg@output	PTR struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), 

    can_generate_timing_params@timing	PTR struct . size(1) Largest target is 7
		 -> CAN_Init@can_setup(COMRAM[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(1) Largest target is 7
		 -> CAN_Init@can_setup(COMRAM[7]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), 

    can_send@message	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    can_send_fp$0	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), 
		 -> txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@d1	PTR void  size(2) Largest target is 200
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), 
		 -> txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 200
		 -> main@bob(COMRAM[13]), RXB0D0(BITBIGSFRlhhhllhlh[1]), RXB1D0(BITBIGSFRllhhhlhhl[1]), tx_pool(BANK1[200]), 
		 -> txb_heartbeat@msg_sent(COMRAM[13]), 

    memcpy@s1	PTR const void  size(2) Largest target is 200
		 -> main@bob(COMRAM[13]), RXB0D0(BITBIGSFRlhhhllhlh[1]), RXB1D0(BITBIGSFRllhhhlhhl[1]), tx_pool(BANK1[200]), 
		 -> txb_heartbeat@msg_sent(COMRAM[13]), 

    NULL$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 13
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), 

    S1461$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    S1539$0$0	PTR const struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), txb_heartbeat@msg_sent(COMRAM[13]), 

    S1539$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1539$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    sp__memcpy	PTR void  size(2) Largest target is 200
		 -> can_handle_interrupt@rcvd_msg(COMRAM[13]), can_handle_interrupt@rcvd_msg_1446(COMRAM[13]), tx_pool(BANK1[200]), TXB0D0(BITBIGSFRllhhhlhl[1]), 
		 -> txb_heartbeat@msg_sent(COMRAM[13]), 

    srb_init@ctx	PTR struct . size(1) Largest target is 11
		 -> buf(COMRAM[10]), buf@can_tx_buffer$F1555(COMRAM[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_init@pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 200
		 -> tx_pool(BANK1[200]), 

    write_timestamp_2bytes@output	PTR struct . size(1) Largest target is 13
		 -> main@bob(COMRAM[13]), 


Critical Paths under _main in COMRAM

    _can_send->_memcpy
    _build_analog_data_msg->_write_timestamp_2bytes
    _Board_Init->_CAN_Init
    _CAN_Init->_txb_init
    _txb_init->_srb_init
    _srb_init->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    8991
                                             29 COMRAM    17    17      0
                         _Board_Init
              _build_analog_data_msg
                           _can_send
                           _read_ADC
                    _toggle_LED_Blue
                   _toggle_LED_Green
                     _toggle_LED_Red
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Red                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Green                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggle_LED_Blue                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _can_send                                            10     9      1    2316
                                             11 COMRAM    10     9      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1967
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _build_analog_data_msg                               15     9      6    3848
                                              3 COMRAM    15     9      6
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (2) _write_timestamp_2bytes                               3     0      3    3280
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Board_Init                                           0     0      0    2599
                           _ADC_Init
                           _CAN_Init
                          _LEDs_Init
                           _Osc_Init
 ---------------------------------------------------------------------------------
 (2) _Osc_Init                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LEDs_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Init                                             7     7      0    2569
                                             22 COMRAM     7     7      0
         _can_generate_timing_params
                           _can_init
                           _txb_init
 ---------------------------------------------------------------------------------
 (3) _txb_init                                             8     0      8    1512
                                             14 COMRAM     8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (4) _srb_init                                             7     0      7    1120
                                              7 COMRAM     7     0      7
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _can_init                                             4     1      3     328
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _can_generate_timing_params                           9     4      5     636
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_Init
     _ADC_Init
     _CAN_Init
       _can_generate_timing_params
       _can_init
       _txb_init
         _srb_init
           ___lwdiv
     _LEDs_Init
     _Osc_Init
   _build_analog_data_msg
     _write_timestamp_2bytes
   _can_send
     _memcpy
   _read_ADC
   _toggle_LED_Blue
   _toggle_LED_Green
   _toggle_LED_Red

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    222      0       0      48        0.0%
BITBIGSFRlhhhll    1D5      0       0      45        0.0%
BITBIGSFRllhhhl    19C      0       0      56        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBIGSFRllhl       B2      0       0      60        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhhl       8C      0       0      49        0.0%
BITBIGSFRlhhhll     87      0       0      43        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      4E       1       82.1%
BITBIGSFRllhhhh     35      0       0      52        0.0%
BITBIGSFRllhhhh     33      0       0      53        0.0%
BITBIGSFRlhll       2E      0       0      51        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhll     26      0       0      41        0.0%
BITBIGSFRllhhhl     22      0       0      58        0.0%
BITBIGSFRlhlh       1F      0       0      50        0.0%
BITBIGSFRllhhhh      F      0       0      54        0.0%
BITBIGSFRllhhhl      9      0       0      57        0.0%
BITBIGSFRlhhhll      7      0       0      42        0.0%
BITBIGSFRlhhhlh      7      0       0      40        0.0%
BITBIGSFRhl          7      0       0      38        0.0%
BITBIGSFRlhhhll      6      0       0      44        0.0%
BITBIGSFRhhl         5      0       0      37        0.0%
BITBIGSFRllhhl       2      0       0      59        0.0%
BITBIGSFRlhhhll      2      0       0      47        0.0%
BITBIGSFRlll         2      0       0      61        0.0%
BITBIGSFRllhhhl      1      0       0      55        0.0%
BITBIGSFRlhhhll      1      0       0      46        0.0%
BITBIGSFRlhhhh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      62        0.0%
DATA                 0      0     116       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 21 17:06:46 2025

                           srb_init@pool 0009                                       l56 16FC  
                                     l64 1542                                       l81 1886  
                                     l59 186A                                       l84 1894  
                                     l78 189C                                       l87 1878  
                                     u60 176C                                       u61 1768  
                                     u70 177E                                       u71 177A  
                                     u80 17A0                                       u81 179C  
                        ?_toggle_LED_Red 0001    timer0_handle_interrupt@internal_count 0039  
                                    l102 1858                                      l105 17D8  
                                    l108 17FA                                      l250 1486  
                                    l340 17D2                                      l254 1356  
                                    l360 169E                                      l391 11BC  
                                    l447 183C                                      l645 153C  
                                    l753 17A0                                      l747 175E  
                                    u135 1884                                      u136 1886  
                                    u145 1892                                      u146 1894  
                                    u155 1876                                      u156 1878  
                       ?_toggle_LED_Blue 0001                                      _buf 0045  
                                    _ctx 0033                                      wreg 3FE8  
               ??_write_timestamp_2bytes 0004                                     l3101 1610  
                                   l1254 162E                                     l3103 1618  
                                   l1247 1626                                     l3111 1642  
                                   l3121 1006                                     l3105 161A  
                                   l3113 1658                                     l1433 1756  
                                   l3131 1046                                     l3123 1010  
                                   l3211 137E                                     l3107 1620  
                                   l3115 1682                                     l4101 1144  
                                   l3141 107C                                     l3133 1052  
                                   l3125 101E                                     l3221 13D4  
                                   l3213 1382                                     l3205 1358  
                                   l3117 1690                                     l3109 1630  
                                   l3301 185E                                     l4103 1160  
                                   l4111 1152                                     l3143 108A  
                                   l3127 102C                                     l3119 1002  
                                   l3231 1442                                     l3223 13F2  
                                   l3215 1386                                     l3207 1360  
                                   l3303 1862                                     l3311 17F2  
                                   l1711 186E                                     l4105 117C  
                                   l4113 116E                                     l3161 10F2  
                                   l3153 10C2                                     l3145 1096  
                                   l3137 1064                                     l3129 1038  
                                   l3241 1454                                     l3233 1444  
                                   l3225 1410                                     l3217 13A4  
                                   l3209 1368                                     l1633 1896  
                                   l3305 1866                                     l3321 14F0  
                                   l1651 1848                                     l4115 118A  
                                   l4107 1198                                     l3163 1100  
                                   l3155 10CA                                     l3147 10A4  
                                   l3139 106E                                     l3171 111E  
                                   l3251 1460                                     l3243 1456  
                                   l3235 1448                                     l3227 1428  
                                   l3219 13B8                                     l3091 15D6  
                                   l1635 1758                                     l3323 1500  
                                   l3315 148A                                     l3307 17D4  
                                   l1653 184E                                     l4109 11AE  
                                   l3165 110C                                     l3157 10D8  
                                   l3149 10B0                                     l3261 146A  
                                   l3253 1462                                     l3245 1458  
                                   l3237 144C                                     l3229 1440  
                                   l3093 15DE                                     l1645 1786  
                                   l1637 176C                                     l3325 1510  
                                   l3341 120E                                     l3333 11BE  
                                   l3309 17E6                                     l1709 188A  
                                   l1655 1850                                     l3159 10E6  
                                   l3263 146C                                     l3255 1464  
                                   l3247 145A                                     l3239 1450  
                                   l3095 15E6                                     l3087 15BC  
                                   l3271 16A0                                     l1647 178A  
                                   l1639 177E                                     l3327 151E  
                                   l3319 149E                                     l3351 130A  
                                   l3343 1212                                     l1657 1854  
                                   l1649 183E                                     l3265 1470  
                                   l3257 1466                                     l3249 145E  
                                   l3097 15F4                                     l3089 15C4  
                                   l3281 16C8                                     l3273 16A2  
                                   l3329 152E                                     l3353 130C  
                                   l3345 124A                                     l3337 11D2  
                                   l3361 1544                                     l3259 1468  
                                   l3099 15FA                                     l3267 17A2  
                                   l3283 16D8                                     l3275 16A8  
                                   l3291 1726                                     l3355 1324  
                                   l3347 12D0                                     l3339 11EC  
                                   l3371 1582                                     l3363 154A  
                                   l3269 17B2                                     l3277 16AA  
                                   l3293 1738                                     l3285 16FE  
                                   l3357 1352                                     l3349 1300  
                                   l3381 15AC                                     l3373 158E  
                                   l3365 1550                                     l3279 16B0  
                                   l3287 1712                                     l3295 173C  
                                   l3375 158E                                     l3367 1556  
                                   l3359 153E                                     l3297 181E  
                                   l3289 1722                                     l3377 158E  
                                   l3369 156C                                     l3299 185A  
                                   l1699 187C                                     l3379 158E  
                                   u2000 15D6                                     u2001 15D2  
                                   u2010 15F4                                     u2011 15F0  
                                   u2020 1610                                     u2100 11EC  
                                   u2021 160C                                     u2101 11E8  
                                   u2030 137E                                     u2110 120A  
                                   u2031 137A                                     u2111 1206  
                                   u2040 1486                                     u2120 1240  
                                   u2041 1482                                     u2050 1756  
                                   u2130 1278                                     u2051 1752  
                                   u2140 12B0                                     u2060 17E6  
                                   u2125 1236                                     u2061 17E2  
                                   u2070 149A                                     u2071 1496  
                                   u2135 126E                                     u2145 12A6  
                                   u2090 11CE                                     u2155 12BE  
                                   u2091 11CA                                     u2085 14AA  
                                   u2987 1560                                     u2997 1576  
                      ?_toggle_LED_Green 0001                                     _main 153E  
                                   fsr2h 3FDA                                     indf2 3FDF  
                                   fsr2l 3FD9                         __end_of_ADC_Init 185A  
                                   start FFFC                       ??_toggle_LED_Green 0001  
                       __end_of_CAN_Init 16FE                               _Board_Init 185A  
                         _SPI1STATUSbits 3D17              build_analog_data_msg@output 0009  
                           ___param_bank 0000                    toggle_LED_Blue@LED_On 0001  
                   toggle_LED_Red@LED_On 0001                                    ?_main 0001  
                                  _ADPCH 3EF1                                    _LATA2 1FDD2  
                                  _LATA3 1FDD3                                    _LATA4 1FDD4  
                                  _LATA5 1FDD5                          __end_of___lwdiv 1630  
                 ?_build_analog_data_msg 0004                                    status 3FD8  
                        __initialization 17FC                             __end_of_main 15BC  
       can_generate_timing_params@timing 0005                         __end_of_Osc_Init 17A2  
                                 ??_main 001E                            __activetblptr 0002  
                      srb_init@pool_size 000B                                   _ADRESH 3EF0  
                                 _ADRESL 3EEF                        __end_of_LEDs_Init 189E  
                                 _RC1PPS 3A11                                   _RXB0D0 3F86  
                                 _RXB1D0 37F6                                   _TXB0D0 37E6  
                       __end_of_can_init 1488                                   _TRISC0 1FE20  
                                 _TRISC1 1FE21                         __end_of_can_send 1358  
                         can_init@timing 0001                              ?_Board_Init 0001  
can_generate_timing_params@can_frequency 0001                                ??___lwdiv 0005  
                       __end_of_read_ADC 17FC                                   _memcpy 16FE  
                                 clear_0 1802                                   clear_1 180E  
                                 isa$std 0001                             _can_send_rdy 0000  
                              ?_ADC_Init 0001                             __mediumconst 0000  
                       __end_of_srb_init 16A0                                   tblptru 3FF8  
                              ?_CAN_Init 0001                         __end_of_txb_init 17D4  
                             __accesstop 0060                  __end_of__initialization 1814  
                          ___rparam_used 0001                         ??_toggle_LED_Red 0001  
                         __pcstackCOMRAM 0001                   _write_timestamp_2bytes 181E  
                           txb_init@pool 000F                           read_ADC@result 0005  
                             ??_ADC_Init 0001                               ??_CAN_Init 0017  
                             _can_rcv_cb 0037                               __pbssBANK1 0100  
                              ?_Osc_Init 0001                  _buf@can_tx_buffer$F1555 003B  
                                ?_memcpy 0001                  ??_build_analog_data_msg 000A  
                                _ANSELC0 1D300                   toggle_LED_Green@LED_On 0001  
                              ?_can_init 0001                                ?_can_send 000C  
                                _OSCCON1 39D9                                  _OSCCON2 39DA  
                                _SPI1RXB 3D10                                  _SPI1TXB 3D11  
                              ?_read_ADC 0001                               ??_Osc_Init 0001  
                                __Hparam 0000                                  __Lparam 0000  
                              ?_srb_init 0008                                  ___lwdiv 15BC  
                           __psmallconst 1000                                ?_txb_init 000F  
                                __pcinit 17FC                                  __ramtop 1000  
                                __ptext0 153E                                  __ptext1 186C  
                                __ptext2 187A                                  __ptext3 1888  
                                __ptext4 17D4                                  __ptext5 11BE  
                                __ptext6 16FE                                  __ptext7 1488  
                                __ptext8 181E                                  __ptext9 185A  
                             ??_can_init 0004                               ??_can_send 000D  
                                main@bob 0022                                  _tx_pool 0100  
                   end_of_initialization 1814                               ??_read_ADC 0003  
                                memcpy@d 0007                                  memcpy@n 0005  
                                memcpy@s 0009                            __Lmediumconst 0000  
                              _LEDs_Init 1896                             ??_Board_Init 001E  
                             ??_srb_init 000F                                  postdec2 3FDD  
                                postinc0 3FEE                                  postinc2 3FDE  
                             ??_txb_init 0017                                _PORTCbits 3FCC  
                              _TRISAbits 3FC2                                _TRISCbits 3FC4  
                            srb_init@ctx 0008                       __end_of_Board_Init 186C  
       build_analog_data_msg@sensor_data 0007                               ?_LEDs_Init 0001  
                             main@curVal 0020                  ?_write_timestamp_2bytes 0001  
                      ??_toggle_LED_Blue 0001                          can_send@message 000C  
                       _toggle_LED_Green 187A                              _ECANCONbits 3F91  
                         __end_of_memcpy 1758                                Osc_Init@i 0001  
                    start_initialization 17FC                              _CANSTATbits 3F8E  
         __end_of_write_timestamp_2bytes 183E       __end_of_can_generate_timing_params 11BE  
             _can_generate_timing_params 1002                                 ??_memcpy 0007  
          __end_of_build_analog_data_msg 153E                              __pbssCOMRAM 002F  
                            _BRGCON1bits 3703                              _BRGCON2bits 3704  
                            _BRGCON3bits 3705                              ??_LEDs_Init 0001  
                       ___lwdiv@dividend 0001                                 ?___lwdiv 0001  
                            __smallconst 1000                              _COMSTATbits 3F90  
                               _ADC_Init 183E                                 _CANRXPPS 3AED  
                               _CAN_Init 16A0                         ___lwdiv@quotient 0005  
                               _LATAbits 3FBA                build_analog_data_msg@prio 0012  
                               _PIE3bits 3993                                 _PIE5bits 3995  
                           _SPI1CON0bits 3D14                             _SPI1CON1bits 3D15  
                           _SPI1CON2bits 3D16                                 _SPI1BAUD 3D19  
                               _PIR5bits 39A5                                 _RXB0EIDH 3F83  
                               _RXB0EIDL 3F84                                 _RXB1EIDH 37F3  
                               _RXB1EIDL 37F4                                 _RXB0SIDH 3F81  
                               _RXB0SIDL 3F82                                 _RXB1SIDH 37F1  
                               _RXB1SIDL 37F2                                 _TXB0EIDH 37E3  
                               _TXB0EIDL 37E4                                 _TXB0SIDH 37E1  
                               _TXB0SIDL 37E2                                 _RXM0SIDH 37B8  
                               _RXM0SIDL 37B9                                 _RXM1SIDH 37BC  
                               _RXM1SIDL 37BD                          _can_msg_handler 0000  
                             _ADCON0bits 3EF8                     srb_init@element_size 000D  
                        _toggle_LED_Blue 1888                              _INTCON0bits 3FD2  
                             _CANCONbits 3F8F                 __end_of_toggle_LED_Green 1888  
                               _Osc_Init 1758                                 __Hrparam 0000  
                              memcpy@tmp 000B                                 __Lrparam 0000  
                             _CIOCONbits 3700                        CAN_Init@can_setup 0017  
           ??_can_generate_timing_params 0006                               _ANSELAbits 3A40  
                      txb_init@pool_size 0011                                 _can_init 1358  
                               _can_send 11BE                               _T0CON0bits 3FB8  
                             _T0CON1bits 3FB9                          ___lwdiv@divisor 0003  
                        ___lwdiv@counter 0007                                 __ptext10 1758  
                               __ptext11 1896                                 __ptext12 16A0  
                               __ptext13 17A2                                 __ptext14 1630  
                               __ptext15 15BC                                 __ptext16 1358  
                               __ptext17 1002                                 __ptext18 183E  
                            _OSCCON3bits 39DB                                 _read_ADC 17D4  
        write_timestamp_2bytes@timestamp 0001                                 isa$xinst 0000  
                               _srb_init 1630                 can_init@receive_callback 0002  
            ?_can_generate_timing_params 0001           build_analog_data_msg@sensor_id 0006  
                               _txb_init 17A2           build_analog_data_msg@timestamp 0004  
                         _millis_counter 002F                              _RXB0DLCbits 3F85  
                         _toggle_LED_Red 186C                              _RXB1DLCbits 37F5  
                __end_of_toggle_LED_Blue 1896                              _RXB0CONbits 3F80  
                            _RXB1CONbits 37F0                                 memcpy@d1 0001  
                               memcpy@s1 0003                     txb_init@can_tx_ready 0015  
                            _TXB0DLCbits 37E5                              _TXB0CONbits 37E0  
                    txb_init@can_send_fp 0013                            _overflow_flag 003A  
                 __end_of_toggle_LED_Red 187A             write_timestamp_2bytes@output 0003  
                  _build_analog_data_msg 1488  
